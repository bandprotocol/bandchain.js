/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: cosmos/nft/v1beta1/nft.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../../../google/protobuf/any";
import * as pb_1 from "google-protobuf";
export namespace cosmos.nft.v1beta1 {
    export class Class extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            id?: string;
            name?: string;
            symbol?: string;
            description?: string;
            uri?: string;
            uri_hash?: string;
            data?: dependency_1.google.protobuf.Any;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("id" in data && data.id != undefined) {
                    this.id = data.id;
                }
                if ("name" in data && data.name != undefined) {
                    this.name = data.name;
                }
                if ("symbol" in data && data.symbol != undefined) {
                    this.symbol = data.symbol;
                }
                if ("description" in data && data.description != undefined) {
                    this.description = data.description;
                }
                if ("uri" in data && data.uri != undefined) {
                    this.uri = data.uri;
                }
                if ("uri_hash" in data && data.uri_hash != undefined) {
                    this.uri_hash = data.uri_hash;
                }
                if ("data" in data && data.data != undefined) {
                    this.data = data.data;
                }
            }
        }
        get id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get name() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set name(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get symbol() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set symbol(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get description() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set description(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get uri() {
            return pb_1.Message.getFieldWithDefault(this, 5, "") as string;
        }
        set uri(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        get uri_hash() {
            return pb_1.Message.getFieldWithDefault(this, 6, "") as string;
        }
        set uri_hash(value: string) {
            pb_1.Message.setField(this, 6, value);
        }
        get data() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Any, 7) as dependency_1.google.protobuf.Any;
        }
        set data(value: dependency_1.google.protobuf.Any) {
            pb_1.Message.setWrapperField(this, 7, value);
        }
        get has_data() {
            return pb_1.Message.getField(this, 7) != null;
        }
        static fromObject(data: {
            id?: string;
            name?: string;
            symbol?: string;
            description?: string;
            uri?: string;
            uri_hash?: string;
            data?: ReturnType<typeof dependency_1.google.protobuf.Any.prototype.toObject>;
        }): Class {
            const message = new Class({});
            if (data.id != null) {
                message.id = data.id;
            }
            if (data.name != null) {
                message.name = data.name;
            }
            if (data.symbol != null) {
                message.symbol = data.symbol;
            }
            if (data.description != null) {
                message.description = data.description;
            }
            if (data.uri != null) {
                message.uri = data.uri;
            }
            if (data.uri_hash != null) {
                message.uri_hash = data.uri_hash;
            }
            if (data.data != null) {
                message.data = dependency_1.google.protobuf.Any.fromObject(data.data);
            }
            return message;
        }
        toObject() {
            const data: {
                id?: string;
                name?: string;
                symbol?: string;
                description?: string;
                uri?: string;
                uri_hash?: string;
                data?: ReturnType<typeof dependency_1.google.protobuf.Any.prototype.toObject>;
            } = {};
            if (this.id != null) {
                data.id = this.id;
            }
            if (this.name != null) {
                data.name = this.name;
            }
            if (this.symbol != null) {
                data.symbol = this.symbol;
            }
            if (this.description != null) {
                data.description = this.description;
            }
            if (this.uri != null) {
                data.uri = this.uri;
            }
            if (this.uri_hash != null) {
                data.uri_hash = this.uri_hash;
            }
            if (this.data != null) {
                data.data = this.data.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.id.length)
                writer.writeString(1, this.id);
            if (this.name.length)
                writer.writeString(2, this.name);
            if (this.symbol.length)
                writer.writeString(3, this.symbol);
            if (this.description.length)
                writer.writeString(4, this.description);
            if (this.uri.length)
                writer.writeString(5, this.uri);
            if (this.uri_hash.length)
                writer.writeString(6, this.uri_hash);
            if (this.has_data)
                writer.writeMessage(7, this.data, () => this.data.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Class {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Class();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.id = reader.readString();
                        break;
                    case 2:
                        message.name = reader.readString();
                        break;
                    case 3:
                        message.symbol = reader.readString();
                        break;
                    case 4:
                        message.description = reader.readString();
                        break;
                    case 5:
                        message.uri = reader.readString();
                        break;
                    case 6:
                        message.uri_hash = reader.readString();
                        break;
                    case 7:
                        reader.readMessage(message.data, () => message.data = dependency_1.google.protobuf.Any.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): Class {
            return Class.deserialize(bytes);
        }
    }
    export class NFT extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            class_id?: string;
            id?: string;
            uri?: string;
            uri_hash?: string;
            data?: dependency_1.google.protobuf.Any;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("class_id" in data && data.class_id != undefined) {
                    this.class_id = data.class_id;
                }
                if ("id" in data && data.id != undefined) {
                    this.id = data.id;
                }
                if ("uri" in data && data.uri != undefined) {
                    this.uri = data.uri;
                }
                if ("uri_hash" in data && data.uri_hash != undefined) {
                    this.uri_hash = data.uri_hash;
                }
                if ("data" in data && data.data != undefined) {
                    this.data = data.data;
                }
            }
        }
        get class_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set class_id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get id() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set id(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get uri() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set uri(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get uri_hash() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set uri_hash(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get data() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Any, 10) as dependency_1.google.protobuf.Any;
        }
        set data(value: dependency_1.google.protobuf.Any) {
            pb_1.Message.setWrapperField(this, 10, value);
        }
        get has_data() {
            return pb_1.Message.getField(this, 10) != null;
        }
        static fromObject(data: {
            class_id?: string;
            id?: string;
            uri?: string;
            uri_hash?: string;
            data?: ReturnType<typeof dependency_1.google.protobuf.Any.prototype.toObject>;
        }): NFT {
            const message = new NFT({});
            if (data.class_id != null) {
                message.class_id = data.class_id;
            }
            if (data.id != null) {
                message.id = data.id;
            }
            if (data.uri != null) {
                message.uri = data.uri;
            }
            if (data.uri_hash != null) {
                message.uri_hash = data.uri_hash;
            }
            if (data.data != null) {
                message.data = dependency_1.google.protobuf.Any.fromObject(data.data);
            }
            return message;
        }
        toObject() {
            const data: {
                class_id?: string;
                id?: string;
                uri?: string;
                uri_hash?: string;
                data?: ReturnType<typeof dependency_1.google.protobuf.Any.prototype.toObject>;
            } = {};
            if (this.class_id != null) {
                data.class_id = this.class_id;
            }
            if (this.id != null) {
                data.id = this.id;
            }
            if (this.uri != null) {
                data.uri = this.uri;
            }
            if (this.uri_hash != null) {
                data.uri_hash = this.uri_hash;
            }
            if (this.data != null) {
                data.data = this.data.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.class_id.length)
                writer.writeString(1, this.class_id);
            if (this.id.length)
                writer.writeString(2, this.id);
            if (this.uri.length)
                writer.writeString(3, this.uri);
            if (this.uri_hash.length)
                writer.writeString(4, this.uri_hash);
            if (this.has_data)
                writer.writeMessage(10, this.data, () => this.data.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): NFT {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new NFT();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.class_id = reader.readString();
                        break;
                    case 2:
                        message.id = reader.readString();
                        break;
                    case 3:
                        message.uri = reader.readString();
                        break;
                    case 4:
                        message.uri_hash = reader.readString();
                        break;
                    case 10:
                        reader.readMessage(message.data, () => message.data = dependency_1.google.protobuf.Any.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): NFT {
            return NFT.deserialize(bytes);
        }
    }
}
