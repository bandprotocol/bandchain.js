/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: cosmos/gov/v1/gov.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../../base/v1beta1/coin";
import * as dependency_2 from "./../../../gogoproto/gogo";
import * as dependency_3 from "./../../../google/protobuf/timestamp";
import * as dependency_4 from "./../../../google/protobuf/any";
import * as dependency_5 from "./../../../google/protobuf/duration";
import * as dependency_6 from "./../../../cosmos_proto/cosmos";
import * as dependency_7 from "./../../../amino/amino";
import * as pb_1 from "google-protobuf";
export namespace cosmos.gov.v1 {
    export enum VoteOption {
        VOTE_OPTION_UNSPECIFIED = 0,
        VOTE_OPTION_YES = 1,
        VOTE_OPTION_ABSTAIN = 2,
        VOTE_OPTION_NO = 3,
        VOTE_OPTION_NO_WITH_VETO = 4
    }
    export enum ProposalStatus {
        PROPOSAL_STATUS_UNSPECIFIED = 0,
        PROPOSAL_STATUS_DEPOSIT_PERIOD = 1,
        PROPOSAL_STATUS_VOTING_PERIOD = 2,
        PROPOSAL_STATUS_PASSED = 3,
        PROPOSAL_STATUS_REJECTED = 4,
        PROPOSAL_STATUS_FAILED = 5
    }
    export class WeightedVoteOption extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            option?: VoteOption;
            weight?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("option" in data && data.option != undefined) {
                    this.option = data.option;
                }
                if ("weight" in data && data.weight != undefined) {
                    this.weight = data.weight;
                }
            }
        }
        get option() {
            return pb_1.Message.getFieldWithDefault(this, 1, VoteOption.VOTE_OPTION_UNSPECIFIED) as VoteOption;
        }
        set option(value: VoteOption) {
            pb_1.Message.setField(this, 1, value);
        }
        get weight() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set weight(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data: {
            option?: VoteOption;
            weight?: string;
        }): WeightedVoteOption {
            const message = new WeightedVoteOption({});
            if (data.option != null) {
                message.option = data.option;
            }
            if (data.weight != null) {
                message.weight = data.weight;
            }
            return message;
        }
        toObject() {
            const data: {
                option?: VoteOption;
                weight?: string;
            } = {};
            if (this.option != null) {
                data.option = this.option;
            }
            if (this.weight != null) {
                data.weight = this.weight;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.option != VoteOption.VOTE_OPTION_UNSPECIFIED)
                writer.writeEnum(1, this.option);
            if (this.weight.length)
                writer.writeString(2, this.weight);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): WeightedVoteOption {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new WeightedVoteOption();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.option = reader.readEnum();
                        break;
                    case 2:
                        message.weight = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): WeightedVoteOption {
            return WeightedVoteOption.deserialize(bytes);
        }
    }
    export class Deposit extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            proposal_id?: number;
            depositor?: string;
            amount?: dependency_1.cosmos.base.v1beta1.Coin[];
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("proposal_id" in data && data.proposal_id != undefined) {
                    this.proposal_id = data.proposal_id;
                }
                if ("depositor" in data && data.depositor != undefined) {
                    this.depositor = data.depositor;
                }
                if ("amount" in data && data.amount != undefined) {
                    this.amount = data.amount;
                }
            }
        }
        get proposal_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set proposal_id(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get depositor() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set depositor(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get amount() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_1.cosmos.base.v1beta1.Coin, 3) as dependency_1.cosmos.base.v1beta1.Coin[];
        }
        set amount(value: dependency_1.cosmos.base.v1beta1.Coin[]) {
            pb_1.Message.setRepeatedWrapperField(this, 3, value);
        }
        static fromObject(data: {
            proposal_id?: number;
            depositor?: string;
            amount?: ReturnType<typeof dependency_1.cosmos.base.v1beta1.Coin.prototype.toObject>[];
        }): Deposit {
            const message = new Deposit({});
            if (data.proposal_id != null) {
                message.proposal_id = data.proposal_id;
            }
            if (data.depositor != null) {
                message.depositor = data.depositor;
            }
            if (data.amount != null) {
                message.amount = data.amount.map(item => dependency_1.cosmos.base.v1beta1.Coin.fromObject(item));
            }
            return message;
        }
        toObject() {
            const data: {
                proposal_id?: number;
                depositor?: string;
                amount?: ReturnType<typeof dependency_1.cosmos.base.v1beta1.Coin.prototype.toObject>[];
            } = {};
            if (this.proposal_id != null) {
                data.proposal_id = this.proposal_id;
            }
            if (this.depositor != null) {
                data.depositor = this.depositor;
            }
            if (this.amount != null) {
                data.amount = this.amount.map((item: dependency_1.cosmos.base.v1beta1.Coin) => item.toObject());
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.proposal_id != 0)
                writer.writeUint64(1, this.proposal_id);
            if (this.depositor.length)
                writer.writeString(2, this.depositor);
            if (this.amount.length)
                writer.writeRepeatedMessage(3, this.amount, (item: dependency_1.cosmos.base.v1beta1.Coin) => item.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Deposit {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Deposit();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.proposal_id = reader.readUint64();
                        break;
                    case 2:
                        message.depositor = reader.readString();
                        break;
                    case 3:
                        reader.readMessage(message.amount, () => pb_1.Message.addToRepeatedWrapperField(message, 3, dependency_1.cosmos.base.v1beta1.Coin.deserialize(reader), dependency_1.cosmos.base.v1beta1.Coin));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): Deposit {
            return Deposit.deserialize(bytes);
        }
    }
    export class Proposal extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            id?: number;
            messages?: dependency_4.google.protobuf.Any[];
            status?: ProposalStatus;
            final_tally_result?: TallyResult;
            submit_time?: dependency_3.google.protobuf.Timestamp;
            deposit_end_time?: dependency_3.google.protobuf.Timestamp;
            total_deposit?: dependency_1.cosmos.base.v1beta1.Coin[];
            voting_start_time?: dependency_3.google.protobuf.Timestamp;
            voting_end_time?: dependency_3.google.protobuf.Timestamp;
            metadata?: string;
            title?: string;
            summary?: string;
            proposer?: string;
            expedited?: boolean;
            failed_reason?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2, 7], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("id" in data && data.id != undefined) {
                    this.id = data.id;
                }
                if ("messages" in data && data.messages != undefined) {
                    this.messages = data.messages;
                }
                if ("status" in data && data.status != undefined) {
                    this.status = data.status;
                }
                if ("final_tally_result" in data && data.final_tally_result != undefined) {
                    this.final_tally_result = data.final_tally_result;
                }
                if ("submit_time" in data && data.submit_time != undefined) {
                    this.submit_time = data.submit_time;
                }
                if ("deposit_end_time" in data && data.deposit_end_time != undefined) {
                    this.deposit_end_time = data.deposit_end_time;
                }
                if ("total_deposit" in data && data.total_deposit != undefined) {
                    this.total_deposit = data.total_deposit;
                }
                if ("voting_start_time" in data && data.voting_start_time != undefined) {
                    this.voting_start_time = data.voting_start_time;
                }
                if ("voting_end_time" in data && data.voting_end_time != undefined) {
                    this.voting_end_time = data.voting_end_time;
                }
                if ("metadata" in data && data.metadata != undefined) {
                    this.metadata = data.metadata;
                }
                if ("title" in data && data.title != undefined) {
                    this.title = data.title;
                }
                if ("summary" in data && data.summary != undefined) {
                    this.summary = data.summary;
                }
                if ("proposer" in data && data.proposer != undefined) {
                    this.proposer = data.proposer;
                }
                if ("expedited" in data && data.expedited != undefined) {
                    this.expedited = data.expedited;
                }
                if ("failed_reason" in data && data.failed_reason != undefined) {
                    this.failed_reason = data.failed_reason;
                }
            }
        }
        get id() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set id(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get messages() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_4.google.protobuf.Any, 2) as dependency_4.google.protobuf.Any[];
        }
        set messages(value: dependency_4.google.protobuf.Any[]) {
            pb_1.Message.setRepeatedWrapperField(this, 2, value);
        }
        get status() {
            return pb_1.Message.getFieldWithDefault(this, 3, ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED) as ProposalStatus;
        }
        set status(value: ProposalStatus) {
            pb_1.Message.setField(this, 3, value);
        }
        get final_tally_result() {
            return pb_1.Message.getWrapperField(this, TallyResult, 4) as TallyResult;
        }
        set final_tally_result(value: TallyResult) {
            pb_1.Message.setWrapperField(this, 4, value);
        }
        get has_final_tally_result() {
            return pb_1.Message.getField(this, 4) != null;
        }
        get submit_time() {
            return pb_1.Message.getWrapperField(this, dependency_3.google.protobuf.Timestamp, 5) as dependency_3.google.protobuf.Timestamp;
        }
        set submit_time(value: dependency_3.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 5, value);
        }
        get has_submit_time() {
            return pb_1.Message.getField(this, 5) != null;
        }
        get deposit_end_time() {
            return pb_1.Message.getWrapperField(this, dependency_3.google.protobuf.Timestamp, 6) as dependency_3.google.protobuf.Timestamp;
        }
        set deposit_end_time(value: dependency_3.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 6, value);
        }
        get has_deposit_end_time() {
            return pb_1.Message.getField(this, 6) != null;
        }
        get total_deposit() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_1.cosmos.base.v1beta1.Coin, 7) as dependency_1.cosmos.base.v1beta1.Coin[];
        }
        set total_deposit(value: dependency_1.cosmos.base.v1beta1.Coin[]) {
            pb_1.Message.setRepeatedWrapperField(this, 7, value);
        }
        get voting_start_time() {
            return pb_1.Message.getWrapperField(this, dependency_3.google.protobuf.Timestamp, 8) as dependency_3.google.protobuf.Timestamp;
        }
        set voting_start_time(value: dependency_3.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 8, value);
        }
        get has_voting_start_time() {
            return pb_1.Message.getField(this, 8) != null;
        }
        get voting_end_time() {
            return pb_1.Message.getWrapperField(this, dependency_3.google.protobuf.Timestamp, 9) as dependency_3.google.protobuf.Timestamp;
        }
        set voting_end_time(value: dependency_3.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 9, value);
        }
        get has_voting_end_time() {
            return pb_1.Message.getField(this, 9) != null;
        }
        get metadata() {
            return pb_1.Message.getFieldWithDefault(this, 10, "") as string;
        }
        set metadata(value: string) {
            pb_1.Message.setField(this, 10, value);
        }
        get title() {
            return pb_1.Message.getFieldWithDefault(this, 11, "") as string;
        }
        set title(value: string) {
            pb_1.Message.setField(this, 11, value);
        }
        get summary() {
            return pb_1.Message.getFieldWithDefault(this, 12, "") as string;
        }
        set summary(value: string) {
            pb_1.Message.setField(this, 12, value);
        }
        get proposer() {
            return pb_1.Message.getFieldWithDefault(this, 13, "") as string;
        }
        set proposer(value: string) {
            pb_1.Message.setField(this, 13, value);
        }
        get expedited() {
            return pb_1.Message.getFieldWithDefault(this, 14, false) as boolean;
        }
        set expedited(value: boolean) {
            pb_1.Message.setField(this, 14, value);
        }
        get failed_reason() {
            return pb_1.Message.getFieldWithDefault(this, 15, "") as string;
        }
        set failed_reason(value: string) {
            pb_1.Message.setField(this, 15, value);
        }
        static fromObject(data: {
            id?: number;
            messages?: ReturnType<typeof dependency_4.google.protobuf.Any.prototype.toObject>[];
            status?: ProposalStatus;
            final_tally_result?: ReturnType<typeof TallyResult.prototype.toObject>;
            submit_time?: ReturnType<typeof dependency_3.google.protobuf.Timestamp.prototype.toObject>;
            deposit_end_time?: ReturnType<typeof dependency_3.google.protobuf.Timestamp.prototype.toObject>;
            total_deposit?: ReturnType<typeof dependency_1.cosmos.base.v1beta1.Coin.prototype.toObject>[];
            voting_start_time?: ReturnType<typeof dependency_3.google.protobuf.Timestamp.prototype.toObject>;
            voting_end_time?: ReturnType<typeof dependency_3.google.protobuf.Timestamp.prototype.toObject>;
            metadata?: string;
            title?: string;
            summary?: string;
            proposer?: string;
            expedited?: boolean;
            failed_reason?: string;
        }): Proposal {
            const message = new Proposal({});
            if (data.id != null) {
                message.id = data.id;
            }
            if (data.messages != null) {
                message.messages = data.messages.map(item => dependency_4.google.protobuf.Any.fromObject(item));
            }
            if (data.status != null) {
                message.status = data.status;
            }
            if (data.final_tally_result != null) {
                message.final_tally_result = TallyResult.fromObject(data.final_tally_result);
            }
            if (data.submit_time != null) {
                message.submit_time = dependency_3.google.protobuf.Timestamp.fromObject(data.submit_time);
            }
            if (data.deposit_end_time != null) {
                message.deposit_end_time = dependency_3.google.protobuf.Timestamp.fromObject(data.deposit_end_time);
            }
            if (data.total_deposit != null) {
                message.total_deposit = data.total_deposit.map(item => dependency_1.cosmos.base.v1beta1.Coin.fromObject(item));
            }
            if (data.voting_start_time != null) {
                message.voting_start_time = dependency_3.google.protobuf.Timestamp.fromObject(data.voting_start_time);
            }
            if (data.voting_end_time != null) {
                message.voting_end_time = dependency_3.google.protobuf.Timestamp.fromObject(data.voting_end_time);
            }
            if (data.metadata != null) {
                message.metadata = data.metadata;
            }
            if (data.title != null) {
                message.title = data.title;
            }
            if (data.summary != null) {
                message.summary = data.summary;
            }
            if (data.proposer != null) {
                message.proposer = data.proposer;
            }
            if (data.expedited != null) {
                message.expedited = data.expedited;
            }
            if (data.failed_reason != null) {
                message.failed_reason = data.failed_reason;
            }
            return message;
        }
        toObject() {
            const data: {
                id?: number;
                messages?: ReturnType<typeof dependency_4.google.protobuf.Any.prototype.toObject>[];
                status?: ProposalStatus;
                final_tally_result?: ReturnType<typeof TallyResult.prototype.toObject>;
                submit_time?: ReturnType<typeof dependency_3.google.protobuf.Timestamp.prototype.toObject>;
                deposit_end_time?: ReturnType<typeof dependency_3.google.protobuf.Timestamp.prototype.toObject>;
                total_deposit?: ReturnType<typeof dependency_1.cosmos.base.v1beta1.Coin.prototype.toObject>[];
                voting_start_time?: ReturnType<typeof dependency_3.google.protobuf.Timestamp.prototype.toObject>;
                voting_end_time?: ReturnType<typeof dependency_3.google.protobuf.Timestamp.prototype.toObject>;
                metadata?: string;
                title?: string;
                summary?: string;
                proposer?: string;
                expedited?: boolean;
                failed_reason?: string;
            } = {};
            if (this.id != null) {
                data.id = this.id;
            }
            if (this.messages != null) {
                data.messages = this.messages.map((item: dependency_4.google.protobuf.Any) => item.toObject());
            }
            if (this.status != null) {
                data.status = this.status;
            }
            if (this.final_tally_result != null) {
                data.final_tally_result = this.final_tally_result.toObject();
            }
            if (this.submit_time != null) {
                data.submit_time = this.submit_time.toObject();
            }
            if (this.deposit_end_time != null) {
                data.deposit_end_time = this.deposit_end_time.toObject();
            }
            if (this.total_deposit != null) {
                data.total_deposit = this.total_deposit.map((item: dependency_1.cosmos.base.v1beta1.Coin) => item.toObject());
            }
            if (this.voting_start_time != null) {
                data.voting_start_time = this.voting_start_time.toObject();
            }
            if (this.voting_end_time != null) {
                data.voting_end_time = this.voting_end_time.toObject();
            }
            if (this.metadata != null) {
                data.metadata = this.metadata;
            }
            if (this.title != null) {
                data.title = this.title;
            }
            if (this.summary != null) {
                data.summary = this.summary;
            }
            if (this.proposer != null) {
                data.proposer = this.proposer;
            }
            if (this.expedited != null) {
                data.expedited = this.expedited;
            }
            if (this.failed_reason != null) {
                data.failed_reason = this.failed_reason;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.id != 0)
                writer.writeUint64(1, this.id);
            if (this.messages.length)
                writer.writeRepeatedMessage(2, this.messages, (item: dependency_4.google.protobuf.Any) => item.serialize(writer));
            if (this.status != ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED)
                writer.writeEnum(3, this.status);
            if (this.has_final_tally_result)
                writer.writeMessage(4, this.final_tally_result, () => this.final_tally_result.serialize(writer));
            if (this.has_submit_time)
                writer.writeMessage(5, this.submit_time, () => this.submit_time.serialize(writer));
            if (this.has_deposit_end_time)
                writer.writeMessage(6, this.deposit_end_time, () => this.deposit_end_time.serialize(writer));
            if (this.total_deposit.length)
                writer.writeRepeatedMessage(7, this.total_deposit, (item: dependency_1.cosmos.base.v1beta1.Coin) => item.serialize(writer));
            if (this.has_voting_start_time)
                writer.writeMessage(8, this.voting_start_time, () => this.voting_start_time.serialize(writer));
            if (this.has_voting_end_time)
                writer.writeMessage(9, this.voting_end_time, () => this.voting_end_time.serialize(writer));
            if (this.metadata.length)
                writer.writeString(10, this.metadata);
            if (this.title.length)
                writer.writeString(11, this.title);
            if (this.summary.length)
                writer.writeString(12, this.summary);
            if (this.proposer.length)
                writer.writeString(13, this.proposer);
            if (this.expedited != false)
                writer.writeBool(14, this.expedited);
            if (this.failed_reason.length)
                writer.writeString(15, this.failed_reason);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Proposal {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Proposal();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.id = reader.readUint64();
                        break;
                    case 2:
                        reader.readMessage(message.messages, () => pb_1.Message.addToRepeatedWrapperField(message, 2, dependency_4.google.protobuf.Any.deserialize(reader), dependency_4.google.protobuf.Any));
                        break;
                    case 3:
                        message.status = reader.readEnum();
                        break;
                    case 4:
                        reader.readMessage(message.final_tally_result, () => message.final_tally_result = TallyResult.deserialize(reader));
                        break;
                    case 5:
                        reader.readMessage(message.submit_time, () => message.submit_time = dependency_3.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 6:
                        reader.readMessage(message.deposit_end_time, () => message.deposit_end_time = dependency_3.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 7:
                        reader.readMessage(message.total_deposit, () => pb_1.Message.addToRepeatedWrapperField(message, 7, dependency_1.cosmos.base.v1beta1.Coin.deserialize(reader), dependency_1.cosmos.base.v1beta1.Coin));
                        break;
                    case 8:
                        reader.readMessage(message.voting_start_time, () => message.voting_start_time = dependency_3.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 9:
                        reader.readMessage(message.voting_end_time, () => message.voting_end_time = dependency_3.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 10:
                        message.metadata = reader.readString();
                        break;
                    case 11:
                        message.title = reader.readString();
                        break;
                    case 12:
                        message.summary = reader.readString();
                        break;
                    case 13:
                        message.proposer = reader.readString();
                        break;
                    case 14:
                        message.expedited = reader.readBool();
                        break;
                    case 15:
                        message.failed_reason = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): Proposal {
            return Proposal.deserialize(bytes);
        }
    }
    export class TallyResult extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            yes_count?: string;
            abstain_count?: string;
            no_count?: string;
            no_with_veto_count?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("yes_count" in data && data.yes_count != undefined) {
                    this.yes_count = data.yes_count;
                }
                if ("abstain_count" in data && data.abstain_count != undefined) {
                    this.abstain_count = data.abstain_count;
                }
                if ("no_count" in data && data.no_count != undefined) {
                    this.no_count = data.no_count;
                }
                if ("no_with_veto_count" in data && data.no_with_veto_count != undefined) {
                    this.no_with_veto_count = data.no_with_veto_count;
                }
            }
        }
        get yes_count() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set yes_count(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get abstain_count() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set abstain_count(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get no_count() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set no_count(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get no_with_veto_count() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set no_with_veto_count(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data: {
            yes_count?: string;
            abstain_count?: string;
            no_count?: string;
            no_with_veto_count?: string;
        }): TallyResult {
            const message = new TallyResult({});
            if (data.yes_count != null) {
                message.yes_count = data.yes_count;
            }
            if (data.abstain_count != null) {
                message.abstain_count = data.abstain_count;
            }
            if (data.no_count != null) {
                message.no_count = data.no_count;
            }
            if (data.no_with_veto_count != null) {
                message.no_with_veto_count = data.no_with_veto_count;
            }
            return message;
        }
        toObject() {
            const data: {
                yes_count?: string;
                abstain_count?: string;
                no_count?: string;
                no_with_veto_count?: string;
            } = {};
            if (this.yes_count != null) {
                data.yes_count = this.yes_count;
            }
            if (this.abstain_count != null) {
                data.abstain_count = this.abstain_count;
            }
            if (this.no_count != null) {
                data.no_count = this.no_count;
            }
            if (this.no_with_veto_count != null) {
                data.no_with_veto_count = this.no_with_veto_count;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.yes_count.length)
                writer.writeString(1, this.yes_count);
            if (this.abstain_count.length)
                writer.writeString(2, this.abstain_count);
            if (this.no_count.length)
                writer.writeString(3, this.no_count);
            if (this.no_with_veto_count.length)
                writer.writeString(4, this.no_with_veto_count);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): TallyResult {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new TallyResult();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.yes_count = reader.readString();
                        break;
                    case 2:
                        message.abstain_count = reader.readString();
                        break;
                    case 3:
                        message.no_count = reader.readString();
                        break;
                    case 4:
                        message.no_with_veto_count = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): TallyResult {
            return TallyResult.deserialize(bytes);
        }
    }
    export class Vote extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            proposal_id?: number;
            voter?: string;
            options?: WeightedVoteOption[];
            metadata?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [4], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("proposal_id" in data && data.proposal_id != undefined) {
                    this.proposal_id = data.proposal_id;
                }
                if ("voter" in data && data.voter != undefined) {
                    this.voter = data.voter;
                }
                if ("options" in data && data.options != undefined) {
                    this.options = data.options;
                }
                if ("metadata" in data && data.metadata != undefined) {
                    this.metadata = data.metadata;
                }
            }
        }
        get proposal_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set proposal_id(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get voter() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set voter(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get options() {
            return pb_1.Message.getRepeatedWrapperField(this, WeightedVoteOption, 4) as WeightedVoteOption[];
        }
        set options(value: WeightedVoteOption[]) {
            pb_1.Message.setRepeatedWrapperField(this, 4, value);
        }
        get metadata() {
            return pb_1.Message.getFieldWithDefault(this, 5, "") as string;
        }
        set metadata(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        static fromObject(data: {
            proposal_id?: number;
            voter?: string;
            options?: ReturnType<typeof WeightedVoteOption.prototype.toObject>[];
            metadata?: string;
        }): Vote {
            const message = new Vote({});
            if (data.proposal_id != null) {
                message.proposal_id = data.proposal_id;
            }
            if (data.voter != null) {
                message.voter = data.voter;
            }
            if (data.options != null) {
                message.options = data.options.map(item => WeightedVoteOption.fromObject(item));
            }
            if (data.metadata != null) {
                message.metadata = data.metadata;
            }
            return message;
        }
        toObject() {
            const data: {
                proposal_id?: number;
                voter?: string;
                options?: ReturnType<typeof WeightedVoteOption.prototype.toObject>[];
                metadata?: string;
            } = {};
            if (this.proposal_id != null) {
                data.proposal_id = this.proposal_id;
            }
            if (this.voter != null) {
                data.voter = this.voter;
            }
            if (this.options != null) {
                data.options = this.options.map((item: WeightedVoteOption) => item.toObject());
            }
            if (this.metadata != null) {
                data.metadata = this.metadata;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.proposal_id != 0)
                writer.writeUint64(1, this.proposal_id);
            if (this.voter.length)
                writer.writeString(2, this.voter);
            if (this.options.length)
                writer.writeRepeatedMessage(4, this.options, (item: WeightedVoteOption) => item.serialize(writer));
            if (this.metadata.length)
                writer.writeString(5, this.metadata);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Vote {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Vote();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.proposal_id = reader.readUint64();
                        break;
                    case 2:
                        message.voter = reader.readString();
                        break;
                    case 4:
                        reader.readMessage(message.options, () => pb_1.Message.addToRepeatedWrapperField(message, 4, WeightedVoteOption.deserialize(reader), WeightedVoteOption));
                        break;
                    case 5:
                        message.metadata = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): Vote {
            return Vote.deserialize(bytes);
        }
    }
    /** @deprecated*/
    export class DepositParams extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            min_deposit?: dependency_1.cosmos.base.v1beta1.Coin[];
            max_deposit_period?: dependency_5.google.protobuf.Duration;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("min_deposit" in data && data.min_deposit != undefined) {
                    this.min_deposit = data.min_deposit;
                }
                if ("max_deposit_period" in data && data.max_deposit_period != undefined) {
                    this.max_deposit_period = data.max_deposit_period;
                }
            }
        }
        get min_deposit() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_1.cosmos.base.v1beta1.Coin, 1) as dependency_1.cosmos.base.v1beta1.Coin[];
        }
        set min_deposit(value: dependency_1.cosmos.base.v1beta1.Coin[]) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        get max_deposit_period() {
            return pb_1.Message.getWrapperField(this, dependency_5.google.protobuf.Duration, 2) as dependency_5.google.protobuf.Duration;
        }
        set max_deposit_period(value: dependency_5.google.protobuf.Duration) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_max_deposit_period() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            min_deposit?: ReturnType<typeof dependency_1.cosmos.base.v1beta1.Coin.prototype.toObject>[];
            max_deposit_period?: ReturnType<typeof dependency_5.google.protobuf.Duration.prototype.toObject>;
        }): DepositParams {
            const message = new DepositParams({});
            if (data.min_deposit != null) {
                message.min_deposit = data.min_deposit.map(item => dependency_1.cosmos.base.v1beta1.Coin.fromObject(item));
            }
            if (data.max_deposit_period != null) {
                message.max_deposit_period = dependency_5.google.protobuf.Duration.fromObject(data.max_deposit_period);
            }
            return message;
        }
        toObject() {
            const data: {
                min_deposit?: ReturnType<typeof dependency_1.cosmos.base.v1beta1.Coin.prototype.toObject>[];
                max_deposit_period?: ReturnType<typeof dependency_5.google.protobuf.Duration.prototype.toObject>;
            } = {};
            if (this.min_deposit != null) {
                data.min_deposit = this.min_deposit.map((item: dependency_1.cosmos.base.v1beta1.Coin) => item.toObject());
            }
            if (this.max_deposit_period != null) {
                data.max_deposit_period = this.max_deposit_period.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.min_deposit.length)
                writer.writeRepeatedMessage(1, this.min_deposit, (item: dependency_1.cosmos.base.v1beta1.Coin) => item.serialize(writer));
            if (this.has_max_deposit_period)
                writer.writeMessage(2, this.max_deposit_period, () => this.max_deposit_period.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): DepositParams {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DepositParams();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.min_deposit, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_1.cosmos.base.v1beta1.Coin.deserialize(reader), dependency_1.cosmos.base.v1beta1.Coin));
                        break;
                    case 2:
                        reader.readMessage(message.max_deposit_period, () => message.max_deposit_period = dependency_5.google.protobuf.Duration.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): DepositParams {
            return DepositParams.deserialize(bytes);
        }
    }
    /** @deprecated*/
    export class VotingParams extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            voting_period?: dependency_5.google.protobuf.Duration;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("voting_period" in data && data.voting_period != undefined) {
                    this.voting_period = data.voting_period;
                }
            }
        }
        get voting_period() {
            return pb_1.Message.getWrapperField(this, dependency_5.google.protobuf.Duration, 1) as dependency_5.google.protobuf.Duration;
        }
        set voting_period(value: dependency_5.google.protobuf.Duration) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_voting_period() {
            return pb_1.Message.getField(this, 1) != null;
        }
        static fromObject(data: {
            voting_period?: ReturnType<typeof dependency_5.google.protobuf.Duration.prototype.toObject>;
        }): VotingParams {
            const message = new VotingParams({});
            if (data.voting_period != null) {
                message.voting_period = dependency_5.google.protobuf.Duration.fromObject(data.voting_period);
            }
            return message;
        }
        toObject() {
            const data: {
                voting_period?: ReturnType<typeof dependency_5.google.protobuf.Duration.prototype.toObject>;
            } = {};
            if (this.voting_period != null) {
                data.voting_period = this.voting_period.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_voting_period)
                writer.writeMessage(1, this.voting_period, () => this.voting_period.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): VotingParams {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new VotingParams();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.voting_period, () => message.voting_period = dependency_5.google.protobuf.Duration.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): VotingParams {
            return VotingParams.deserialize(bytes);
        }
    }
    /** @deprecated*/
    export class TallyParams extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            quorum?: string;
            threshold?: string;
            veto_threshold?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("quorum" in data && data.quorum != undefined) {
                    this.quorum = data.quorum;
                }
                if ("threshold" in data && data.threshold != undefined) {
                    this.threshold = data.threshold;
                }
                if ("veto_threshold" in data && data.veto_threshold != undefined) {
                    this.veto_threshold = data.veto_threshold;
                }
            }
        }
        get quorum() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set quorum(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get threshold() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set threshold(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get veto_threshold() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set veto_threshold(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        static fromObject(data: {
            quorum?: string;
            threshold?: string;
            veto_threshold?: string;
        }): TallyParams {
            const message = new TallyParams({});
            if (data.quorum != null) {
                message.quorum = data.quorum;
            }
            if (data.threshold != null) {
                message.threshold = data.threshold;
            }
            if (data.veto_threshold != null) {
                message.veto_threshold = data.veto_threshold;
            }
            return message;
        }
        toObject() {
            const data: {
                quorum?: string;
                threshold?: string;
                veto_threshold?: string;
            } = {};
            if (this.quorum != null) {
                data.quorum = this.quorum;
            }
            if (this.threshold != null) {
                data.threshold = this.threshold;
            }
            if (this.veto_threshold != null) {
                data.veto_threshold = this.veto_threshold;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.quorum.length)
                writer.writeString(1, this.quorum);
            if (this.threshold.length)
                writer.writeString(2, this.threshold);
            if (this.veto_threshold.length)
                writer.writeString(3, this.veto_threshold);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): TallyParams {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new TallyParams();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.quorum = reader.readString();
                        break;
                    case 2:
                        message.threshold = reader.readString();
                        break;
                    case 3:
                        message.veto_threshold = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): TallyParams {
            return TallyParams.deserialize(bytes);
        }
    }
    export class Params extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            min_deposit?: dependency_1.cosmos.base.v1beta1.Coin[];
            max_deposit_period?: dependency_5.google.protobuf.Duration;
            voting_period?: dependency_5.google.protobuf.Duration;
            quorum?: string;
            threshold?: string;
            veto_threshold?: string;
            min_initial_deposit_ratio?: string;
            proposal_cancel_ratio?: string;
            proposal_cancel_dest?: string;
            expedited_voting_period?: dependency_5.google.protobuf.Duration;
            expedited_threshold?: string;
            expedited_min_deposit?: dependency_1.cosmos.base.v1beta1.Coin[];
            burn_vote_quorum?: boolean;
            burn_proposal_deposit_prevote?: boolean;
            burn_vote_veto?: boolean;
            min_deposit_ratio?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1, 12], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("min_deposit" in data && data.min_deposit != undefined) {
                    this.min_deposit = data.min_deposit;
                }
                if ("max_deposit_period" in data && data.max_deposit_period != undefined) {
                    this.max_deposit_period = data.max_deposit_period;
                }
                if ("voting_period" in data && data.voting_period != undefined) {
                    this.voting_period = data.voting_period;
                }
                if ("quorum" in data && data.quorum != undefined) {
                    this.quorum = data.quorum;
                }
                if ("threshold" in data && data.threshold != undefined) {
                    this.threshold = data.threshold;
                }
                if ("veto_threshold" in data && data.veto_threshold != undefined) {
                    this.veto_threshold = data.veto_threshold;
                }
                if ("min_initial_deposit_ratio" in data && data.min_initial_deposit_ratio != undefined) {
                    this.min_initial_deposit_ratio = data.min_initial_deposit_ratio;
                }
                if ("proposal_cancel_ratio" in data && data.proposal_cancel_ratio != undefined) {
                    this.proposal_cancel_ratio = data.proposal_cancel_ratio;
                }
                if ("proposal_cancel_dest" in data && data.proposal_cancel_dest != undefined) {
                    this.proposal_cancel_dest = data.proposal_cancel_dest;
                }
                if ("expedited_voting_period" in data && data.expedited_voting_period != undefined) {
                    this.expedited_voting_period = data.expedited_voting_period;
                }
                if ("expedited_threshold" in data && data.expedited_threshold != undefined) {
                    this.expedited_threshold = data.expedited_threshold;
                }
                if ("expedited_min_deposit" in data && data.expedited_min_deposit != undefined) {
                    this.expedited_min_deposit = data.expedited_min_deposit;
                }
                if ("burn_vote_quorum" in data && data.burn_vote_quorum != undefined) {
                    this.burn_vote_quorum = data.burn_vote_quorum;
                }
                if ("burn_proposal_deposit_prevote" in data && data.burn_proposal_deposit_prevote != undefined) {
                    this.burn_proposal_deposit_prevote = data.burn_proposal_deposit_prevote;
                }
                if ("burn_vote_veto" in data && data.burn_vote_veto != undefined) {
                    this.burn_vote_veto = data.burn_vote_veto;
                }
                if ("min_deposit_ratio" in data && data.min_deposit_ratio != undefined) {
                    this.min_deposit_ratio = data.min_deposit_ratio;
                }
            }
        }
        get min_deposit() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_1.cosmos.base.v1beta1.Coin, 1) as dependency_1.cosmos.base.v1beta1.Coin[];
        }
        set min_deposit(value: dependency_1.cosmos.base.v1beta1.Coin[]) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        get max_deposit_period() {
            return pb_1.Message.getWrapperField(this, dependency_5.google.protobuf.Duration, 2) as dependency_5.google.protobuf.Duration;
        }
        set max_deposit_period(value: dependency_5.google.protobuf.Duration) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_max_deposit_period() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get voting_period() {
            return pb_1.Message.getWrapperField(this, dependency_5.google.protobuf.Duration, 3) as dependency_5.google.protobuf.Duration;
        }
        set voting_period(value: dependency_5.google.protobuf.Duration) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_voting_period() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get quorum() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set quorum(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get threshold() {
            return pb_1.Message.getFieldWithDefault(this, 5, "") as string;
        }
        set threshold(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        get veto_threshold() {
            return pb_1.Message.getFieldWithDefault(this, 6, "") as string;
        }
        set veto_threshold(value: string) {
            pb_1.Message.setField(this, 6, value);
        }
        get min_initial_deposit_ratio() {
            return pb_1.Message.getFieldWithDefault(this, 7, "") as string;
        }
        set min_initial_deposit_ratio(value: string) {
            pb_1.Message.setField(this, 7, value);
        }
        get proposal_cancel_ratio() {
            return pb_1.Message.getFieldWithDefault(this, 8, "") as string;
        }
        set proposal_cancel_ratio(value: string) {
            pb_1.Message.setField(this, 8, value);
        }
        get proposal_cancel_dest() {
            return pb_1.Message.getFieldWithDefault(this, 9, "") as string;
        }
        set proposal_cancel_dest(value: string) {
            pb_1.Message.setField(this, 9, value);
        }
        get expedited_voting_period() {
            return pb_1.Message.getWrapperField(this, dependency_5.google.protobuf.Duration, 10) as dependency_5.google.protobuf.Duration;
        }
        set expedited_voting_period(value: dependency_5.google.protobuf.Duration) {
            pb_1.Message.setWrapperField(this, 10, value);
        }
        get has_expedited_voting_period() {
            return pb_1.Message.getField(this, 10) != null;
        }
        get expedited_threshold() {
            return pb_1.Message.getFieldWithDefault(this, 11, "") as string;
        }
        set expedited_threshold(value: string) {
            pb_1.Message.setField(this, 11, value);
        }
        get expedited_min_deposit() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_1.cosmos.base.v1beta1.Coin, 12) as dependency_1.cosmos.base.v1beta1.Coin[];
        }
        set expedited_min_deposit(value: dependency_1.cosmos.base.v1beta1.Coin[]) {
            pb_1.Message.setRepeatedWrapperField(this, 12, value);
        }
        get burn_vote_quorum() {
            return pb_1.Message.getFieldWithDefault(this, 13, false) as boolean;
        }
        set burn_vote_quorum(value: boolean) {
            pb_1.Message.setField(this, 13, value);
        }
        get burn_proposal_deposit_prevote() {
            return pb_1.Message.getFieldWithDefault(this, 14, false) as boolean;
        }
        set burn_proposal_deposit_prevote(value: boolean) {
            pb_1.Message.setField(this, 14, value);
        }
        get burn_vote_veto() {
            return pb_1.Message.getFieldWithDefault(this, 15, false) as boolean;
        }
        set burn_vote_veto(value: boolean) {
            pb_1.Message.setField(this, 15, value);
        }
        get min_deposit_ratio() {
            return pb_1.Message.getFieldWithDefault(this, 16, "") as string;
        }
        set min_deposit_ratio(value: string) {
            pb_1.Message.setField(this, 16, value);
        }
        static fromObject(data: {
            min_deposit?: ReturnType<typeof dependency_1.cosmos.base.v1beta1.Coin.prototype.toObject>[];
            max_deposit_period?: ReturnType<typeof dependency_5.google.protobuf.Duration.prototype.toObject>;
            voting_period?: ReturnType<typeof dependency_5.google.protobuf.Duration.prototype.toObject>;
            quorum?: string;
            threshold?: string;
            veto_threshold?: string;
            min_initial_deposit_ratio?: string;
            proposal_cancel_ratio?: string;
            proposal_cancel_dest?: string;
            expedited_voting_period?: ReturnType<typeof dependency_5.google.protobuf.Duration.prototype.toObject>;
            expedited_threshold?: string;
            expedited_min_deposit?: ReturnType<typeof dependency_1.cosmos.base.v1beta1.Coin.prototype.toObject>[];
            burn_vote_quorum?: boolean;
            burn_proposal_deposit_prevote?: boolean;
            burn_vote_veto?: boolean;
            min_deposit_ratio?: string;
        }): Params {
            const message = new Params({});
            if (data.min_deposit != null) {
                message.min_deposit = data.min_deposit.map(item => dependency_1.cosmos.base.v1beta1.Coin.fromObject(item));
            }
            if (data.max_deposit_period != null) {
                message.max_deposit_period = dependency_5.google.protobuf.Duration.fromObject(data.max_deposit_period);
            }
            if (data.voting_period != null) {
                message.voting_period = dependency_5.google.protobuf.Duration.fromObject(data.voting_period);
            }
            if (data.quorum != null) {
                message.quorum = data.quorum;
            }
            if (data.threshold != null) {
                message.threshold = data.threshold;
            }
            if (data.veto_threshold != null) {
                message.veto_threshold = data.veto_threshold;
            }
            if (data.min_initial_deposit_ratio != null) {
                message.min_initial_deposit_ratio = data.min_initial_deposit_ratio;
            }
            if (data.proposal_cancel_ratio != null) {
                message.proposal_cancel_ratio = data.proposal_cancel_ratio;
            }
            if (data.proposal_cancel_dest != null) {
                message.proposal_cancel_dest = data.proposal_cancel_dest;
            }
            if (data.expedited_voting_period != null) {
                message.expedited_voting_period = dependency_5.google.protobuf.Duration.fromObject(data.expedited_voting_period);
            }
            if (data.expedited_threshold != null) {
                message.expedited_threshold = data.expedited_threshold;
            }
            if (data.expedited_min_deposit != null) {
                message.expedited_min_deposit = data.expedited_min_deposit.map(item => dependency_1.cosmos.base.v1beta1.Coin.fromObject(item));
            }
            if (data.burn_vote_quorum != null) {
                message.burn_vote_quorum = data.burn_vote_quorum;
            }
            if (data.burn_proposal_deposit_prevote != null) {
                message.burn_proposal_deposit_prevote = data.burn_proposal_deposit_prevote;
            }
            if (data.burn_vote_veto != null) {
                message.burn_vote_veto = data.burn_vote_veto;
            }
            if (data.min_deposit_ratio != null) {
                message.min_deposit_ratio = data.min_deposit_ratio;
            }
            return message;
        }
        toObject() {
            const data: {
                min_deposit?: ReturnType<typeof dependency_1.cosmos.base.v1beta1.Coin.prototype.toObject>[];
                max_deposit_period?: ReturnType<typeof dependency_5.google.protobuf.Duration.prototype.toObject>;
                voting_period?: ReturnType<typeof dependency_5.google.protobuf.Duration.prototype.toObject>;
                quorum?: string;
                threshold?: string;
                veto_threshold?: string;
                min_initial_deposit_ratio?: string;
                proposal_cancel_ratio?: string;
                proposal_cancel_dest?: string;
                expedited_voting_period?: ReturnType<typeof dependency_5.google.protobuf.Duration.prototype.toObject>;
                expedited_threshold?: string;
                expedited_min_deposit?: ReturnType<typeof dependency_1.cosmos.base.v1beta1.Coin.prototype.toObject>[];
                burn_vote_quorum?: boolean;
                burn_proposal_deposit_prevote?: boolean;
                burn_vote_veto?: boolean;
                min_deposit_ratio?: string;
            } = {};
            if (this.min_deposit != null) {
                data.min_deposit = this.min_deposit.map((item: dependency_1.cosmos.base.v1beta1.Coin) => item.toObject());
            }
            if (this.max_deposit_period != null) {
                data.max_deposit_period = this.max_deposit_period.toObject();
            }
            if (this.voting_period != null) {
                data.voting_period = this.voting_period.toObject();
            }
            if (this.quorum != null) {
                data.quorum = this.quorum;
            }
            if (this.threshold != null) {
                data.threshold = this.threshold;
            }
            if (this.veto_threshold != null) {
                data.veto_threshold = this.veto_threshold;
            }
            if (this.min_initial_deposit_ratio != null) {
                data.min_initial_deposit_ratio = this.min_initial_deposit_ratio;
            }
            if (this.proposal_cancel_ratio != null) {
                data.proposal_cancel_ratio = this.proposal_cancel_ratio;
            }
            if (this.proposal_cancel_dest != null) {
                data.proposal_cancel_dest = this.proposal_cancel_dest;
            }
            if (this.expedited_voting_period != null) {
                data.expedited_voting_period = this.expedited_voting_period.toObject();
            }
            if (this.expedited_threshold != null) {
                data.expedited_threshold = this.expedited_threshold;
            }
            if (this.expedited_min_deposit != null) {
                data.expedited_min_deposit = this.expedited_min_deposit.map((item: dependency_1.cosmos.base.v1beta1.Coin) => item.toObject());
            }
            if (this.burn_vote_quorum != null) {
                data.burn_vote_quorum = this.burn_vote_quorum;
            }
            if (this.burn_proposal_deposit_prevote != null) {
                data.burn_proposal_deposit_prevote = this.burn_proposal_deposit_prevote;
            }
            if (this.burn_vote_veto != null) {
                data.burn_vote_veto = this.burn_vote_veto;
            }
            if (this.min_deposit_ratio != null) {
                data.min_deposit_ratio = this.min_deposit_ratio;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.min_deposit.length)
                writer.writeRepeatedMessage(1, this.min_deposit, (item: dependency_1.cosmos.base.v1beta1.Coin) => item.serialize(writer));
            if (this.has_max_deposit_period)
                writer.writeMessage(2, this.max_deposit_period, () => this.max_deposit_period.serialize(writer));
            if (this.has_voting_period)
                writer.writeMessage(3, this.voting_period, () => this.voting_period.serialize(writer));
            if (this.quorum.length)
                writer.writeString(4, this.quorum);
            if (this.threshold.length)
                writer.writeString(5, this.threshold);
            if (this.veto_threshold.length)
                writer.writeString(6, this.veto_threshold);
            if (this.min_initial_deposit_ratio.length)
                writer.writeString(7, this.min_initial_deposit_ratio);
            if (this.proposal_cancel_ratio.length)
                writer.writeString(8, this.proposal_cancel_ratio);
            if (this.proposal_cancel_dest.length)
                writer.writeString(9, this.proposal_cancel_dest);
            if (this.has_expedited_voting_period)
                writer.writeMessage(10, this.expedited_voting_period, () => this.expedited_voting_period.serialize(writer));
            if (this.expedited_threshold.length)
                writer.writeString(11, this.expedited_threshold);
            if (this.expedited_min_deposit.length)
                writer.writeRepeatedMessage(12, this.expedited_min_deposit, (item: dependency_1.cosmos.base.v1beta1.Coin) => item.serialize(writer));
            if (this.burn_vote_quorum != false)
                writer.writeBool(13, this.burn_vote_quorum);
            if (this.burn_proposal_deposit_prevote != false)
                writer.writeBool(14, this.burn_proposal_deposit_prevote);
            if (this.burn_vote_veto != false)
                writer.writeBool(15, this.burn_vote_veto);
            if (this.min_deposit_ratio.length)
                writer.writeString(16, this.min_deposit_ratio);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Params {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Params();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.min_deposit, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_1.cosmos.base.v1beta1.Coin.deserialize(reader), dependency_1.cosmos.base.v1beta1.Coin));
                        break;
                    case 2:
                        reader.readMessage(message.max_deposit_period, () => message.max_deposit_period = dependency_5.google.protobuf.Duration.deserialize(reader));
                        break;
                    case 3:
                        reader.readMessage(message.voting_period, () => message.voting_period = dependency_5.google.protobuf.Duration.deserialize(reader));
                        break;
                    case 4:
                        message.quorum = reader.readString();
                        break;
                    case 5:
                        message.threshold = reader.readString();
                        break;
                    case 6:
                        message.veto_threshold = reader.readString();
                        break;
                    case 7:
                        message.min_initial_deposit_ratio = reader.readString();
                        break;
                    case 8:
                        message.proposal_cancel_ratio = reader.readString();
                        break;
                    case 9:
                        message.proposal_cancel_dest = reader.readString();
                        break;
                    case 10:
                        reader.readMessage(message.expedited_voting_period, () => message.expedited_voting_period = dependency_5.google.protobuf.Duration.deserialize(reader));
                        break;
                    case 11:
                        message.expedited_threshold = reader.readString();
                        break;
                    case 12:
                        reader.readMessage(message.expedited_min_deposit, () => pb_1.Message.addToRepeatedWrapperField(message, 12, dependency_1.cosmos.base.v1beta1.Coin.deserialize(reader), dependency_1.cosmos.base.v1beta1.Coin));
                        break;
                    case 13:
                        message.burn_vote_quorum = reader.readBool();
                        break;
                    case 14:
                        message.burn_proposal_deposit_prevote = reader.readBool();
                        break;
                    case 15:
                        message.burn_vote_veto = reader.readBool();
                        break;
                    case 16:
                        message.min_deposit_ratio = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): Params {
            return Params.deserialize(bytes);
        }
    }
}
