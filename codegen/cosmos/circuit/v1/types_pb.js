// source: cosmos/circuit/v1/types.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

goog.exportSymbol('proto.cosmos.circuit.v1.GenesisAccountPermissions', null, global);
goog.exportSymbol('proto.cosmos.circuit.v1.GenesisState', null, global);
goog.exportSymbol('proto.cosmos.circuit.v1.Permissions', null, global);
goog.exportSymbol('proto.cosmos.circuit.v1.Permissions.Level', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.circuit.v1.Permissions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cosmos.circuit.v1.Permissions.repeatedFields_, null);
};
goog.inherits(proto.cosmos.circuit.v1.Permissions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.circuit.v1.Permissions.displayName = 'proto.cosmos.circuit.v1.Permissions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.circuit.v1.GenesisAccountPermissions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cosmos.circuit.v1.GenesisAccountPermissions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.circuit.v1.GenesisAccountPermissions.displayName = 'proto.cosmos.circuit.v1.GenesisAccountPermissions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.circuit.v1.GenesisState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cosmos.circuit.v1.GenesisState.repeatedFields_, null);
};
goog.inherits(proto.cosmos.circuit.v1.GenesisState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.circuit.v1.GenesisState.displayName = 'proto.cosmos.circuit.v1.GenesisState';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cosmos.circuit.v1.Permissions.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cosmos.circuit.v1.Permissions.prototype.toObject = function(opt_includeInstance) {
  return proto.cosmos.circuit.v1.Permissions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cosmos.circuit.v1.Permissions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.circuit.v1.Permissions.toObject = function(includeInstance, msg) {
  var f, obj = {
    level: jspb.Message.getFieldWithDefault(msg, 1, 0),
    limitTypeUrlsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.circuit.v1.Permissions}
 */
proto.cosmos.circuit.v1.Permissions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cosmos.circuit.v1.Permissions;
  return proto.cosmos.circuit.v1.Permissions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.circuit.v1.Permissions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.circuit.v1.Permissions}
 */
proto.cosmos.circuit.v1.Permissions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cosmos.circuit.v1.Permissions.Level} */ (reader.readEnum());
      msg.setLevel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addLimitTypeUrls(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.circuit.v1.Permissions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cosmos.circuit.v1.Permissions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.circuit.v1.Permissions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.circuit.v1.Permissions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLevel();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getLimitTypeUrlsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cosmos.circuit.v1.Permissions.Level = {
  LEVEL_NONE_UNSPECIFIED: 0,
  LEVEL_SOME_MSGS: 1,
  LEVEL_ALL_MSGS: 2,
  LEVEL_SUPER_ADMIN: 3
};

/**
 * optional Level level = 1;
 * @return {!proto.cosmos.circuit.v1.Permissions.Level}
 */
proto.cosmos.circuit.v1.Permissions.prototype.getLevel = function() {
  return /** @type {!proto.cosmos.circuit.v1.Permissions.Level} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cosmos.circuit.v1.Permissions.Level} value
 * @return {!proto.cosmos.circuit.v1.Permissions} returns this
 */
proto.cosmos.circuit.v1.Permissions.prototype.setLevel = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * repeated string limit_type_urls = 2;
 * @return {!Array<string>}
 */
proto.cosmos.circuit.v1.Permissions.prototype.getLimitTypeUrlsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cosmos.circuit.v1.Permissions} returns this
 */
proto.cosmos.circuit.v1.Permissions.prototype.setLimitTypeUrlsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cosmos.circuit.v1.Permissions} returns this
 */
proto.cosmos.circuit.v1.Permissions.prototype.addLimitTypeUrls = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cosmos.circuit.v1.Permissions} returns this
 */
proto.cosmos.circuit.v1.Permissions.prototype.clearLimitTypeUrlsList = function() {
  return this.setLimitTypeUrlsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cosmos.circuit.v1.GenesisAccountPermissions.prototype.toObject = function(opt_includeInstance) {
  return proto.cosmos.circuit.v1.GenesisAccountPermissions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cosmos.circuit.v1.GenesisAccountPermissions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.circuit.v1.GenesisAccountPermissions.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, ""),
    permissions: (f = msg.getPermissions()) && proto.cosmos.circuit.v1.Permissions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.circuit.v1.GenesisAccountPermissions}
 */
proto.cosmos.circuit.v1.GenesisAccountPermissions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cosmos.circuit.v1.GenesisAccountPermissions;
  return proto.cosmos.circuit.v1.GenesisAccountPermissions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.circuit.v1.GenesisAccountPermissions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.circuit.v1.GenesisAccountPermissions}
 */
proto.cosmos.circuit.v1.GenesisAccountPermissions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 2:
      var value = new proto.cosmos.circuit.v1.Permissions;
      reader.readMessage(value,proto.cosmos.circuit.v1.Permissions.deserializeBinaryFromReader);
      msg.setPermissions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.circuit.v1.GenesisAccountPermissions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cosmos.circuit.v1.GenesisAccountPermissions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.circuit.v1.GenesisAccountPermissions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.circuit.v1.GenesisAccountPermissions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPermissions();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cosmos.circuit.v1.Permissions.serializeBinaryToWriter
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.cosmos.circuit.v1.GenesisAccountPermissions.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cosmos.circuit.v1.GenesisAccountPermissions} returns this
 */
proto.cosmos.circuit.v1.GenesisAccountPermissions.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Permissions permissions = 2;
 * @return {?proto.cosmos.circuit.v1.Permissions}
 */
proto.cosmos.circuit.v1.GenesisAccountPermissions.prototype.getPermissions = function() {
  return /** @type{?proto.cosmos.circuit.v1.Permissions} */ (
    jspb.Message.getWrapperField(this, proto.cosmos.circuit.v1.Permissions, 2));
};


/**
 * @param {?proto.cosmos.circuit.v1.Permissions|undefined} value
 * @return {!proto.cosmos.circuit.v1.GenesisAccountPermissions} returns this
*/
proto.cosmos.circuit.v1.GenesisAccountPermissions.prototype.setPermissions = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cosmos.circuit.v1.GenesisAccountPermissions} returns this
 */
proto.cosmos.circuit.v1.GenesisAccountPermissions.prototype.clearPermissions = function() {
  return this.setPermissions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cosmos.circuit.v1.GenesisAccountPermissions.prototype.hasPermissions = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cosmos.circuit.v1.GenesisState.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cosmos.circuit.v1.GenesisState.prototype.toObject = function(opt_includeInstance) {
  return proto.cosmos.circuit.v1.GenesisState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cosmos.circuit.v1.GenesisState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.circuit.v1.GenesisState.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountPermissionsList: jspb.Message.toObjectList(msg.getAccountPermissionsList(),
    proto.cosmos.circuit.v1.GenesisAccountPermissions.toObject, includeInstance),
    disabledTypeUrlsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.circuit.v1.GenesisState}
 */
proto.cosmos.circuit.v1.GenesisState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cosmos.circuit.v1.GenesisState;
  return proto.cosmos.circuit.v1.GenesisState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.circuit.v1.GenesisState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.circuit.v1.GenesisState}
 */
proto.cosmos.circuit.v1.GenesisState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cosmos.circuit.v1.GenesisAccountPermissions;
      reader.readMessage(value,proto.cosmos.circuit.v1.GenesisAccountPermissions.deserializeBinaryFromReader);
      msg.addAccountPermissions(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addDisabledTypeUrls(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.circuit.v1.GenesisState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cosmos.circuit.v1.GenesisState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.circuit.v1.GenesisState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.circuit.v1.GenesisState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountPermissionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cosmos.circuit.v1.GenesisAccountPermissions.serializeBinaryToWriter
    );
  }
  f = message.getDisabledTypeUrlsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * repeated GenesisAccountPermissions account_permissions = 1;
 * @return {!Array<!proto.cosmos.circuit.v1.GenesisAccountPermissions>}
 */
proto.cosmos.circuit.v1.GenesisState.prototype.getAccountPermissionsList = function() {
  return /** @type{!Array<!proto.cosmos.circuit.v1.GenesisAccountPermissions>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cosmos.circuit.v1.GenesisAccountPermissions, 1));
};


/**
 * @param {!Array<!proto.cosmos.circuit.v1.GenesisAccountPermissions>} value
 * @return {!proto.cosmos.circuit.v1.GenesisState} returns this
*/
proto.cosmos.circuit.v1.GenesisState.prototype.setAccountPermissionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cosmos.circuit.v1.GenesisAccountPermissions=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.circuit.v1.GenesisAccountPermissions}
 */
proto.cosmos.circuit.v1.GenesisState.prototype.addAccountPermissions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cosmos.circuit.v1.GenesisAccountPermissions, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cosmos.circuit.v1.GenesisState} returns this
 */
proto.cosmos.circuit.v1.GenesisState.prototype.clearAccountPermissionsList = function() {
  return this.setAccountPermissionsList([]);
};


/**
 * repeated string disabled_type_urls = 2;
 * @return {!Array<string>}
 */
proto.cosmos.circuit.v1.GenesisState.prototype.getDisabledTypeUrlsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cosmos.circuit.v1.GenesisState} returns this
 */
proto.cosmos.circuit.v1.GenesisState.prototype.setDisabledTypeUrlsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cosmos.circuit.v1.GenesisState} returns this
 */
proto.cosmos.circuit.v1.GenesisState.prototype.addDisabledTypeUrls = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cosmos.circuit.v1.GenesisState} returns this
 */
proto.cosmos.circuit.v1.GenesisState.prototype.clearDisabledTypeUrlsList = function() {
  return this.setDisabledTypeUrlsList([]);
};


goog.object.extend(exports, proto.cosmos.circuit.v1);
