/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: cosmos/group/v1/types.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../../../gogoproto/gogo";
import * as dependency_2 from "./../../../google/protobuf/duration";
import * as dependency_3 from "./../../../google/protobuf/timestamp";
import * as dependency_4 from "./../../../cosmos_proto/cosmos";
import * as dependency_5 from "./../../../google/protobuf/any";
import * as dependency_6 from "./../../../amino/amino";
import * as pb_1 from "google-protobuf";
export namespace cosmos.group.v1 {
    export enum VoteOption {
        VOTE_OPTION_UNSPECIFIED = 0,
        VOTE_OPTION_YES = 1,
        VOTE_OPTION_ABSTAIN = 2,
        VOTE_OPTION_NO = 3,
        VOTE_OPTION_NO_WITH_VETO = 4
    }
    export enum ProposalStatus {
        PROPOSAL_STATUS_UNSPECIFIED = 0,
        PROPOSAL_STATUS_SUBMITTED = 1,
        PROPOSAL_STATUS_ACCEPTED = 2,
        PROPOSAL_STATUS_REJECTED = 3,
        PROPOSAL_STATUS_ABORTED = 4,
        PROPOSAL_STATUS_WITHDRAWN = 5
    }
    export enum ProposalExecutorResult {
        PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED = 0,
        PROPOSAL_EXECUTOR_RESULT_NOT_RUN = 1,
        PROPOSAL_EXECUTOR_RESULT_SUCCESS = 2,
        PROPOSAL_EXECUTOR_RESULT_FAILURE = 3
    }
    export class Member extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            address?: string;
            weight?: string;
            metadata?: string;
            added_at?: dependency_3.google.protobuf.Timestamp;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("address" in data && data.address != undefined) {
                    this.address = data.address;
                }
                if ("weight" in data && data.weight != undefined) {
                    this.weight = data.weight;
                }
                if ("metadata" in data && data.metadata != undefined) {
                    this.metadata = data.metadata;
                }
                if ("added_at" in data && data.added_at != undefined) {
                    this.added_at = data.added_at;
                }
            }
        }
        get address() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set address(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get weight() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set weight(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get metadata() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set metadata(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get added_at() {
            return pb_1.Message.getWrapperField(this, dependency_3.google.protobuf.Timestamp, 4) as dependency_3.google.protobuf.Timestamp;
        }
        set added_at(value: dependency_3.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 4, value);
        }
        get has_added_at() {
            return pb_1.Message.getField(this, 4) != null;
        }
        static fromObject(data: {
            address?: string;
            weight?: string;
            metadata?: string;
            added_at?: ReturnType<typeof dependency_3.google.protobuf.Timestamp.prototype.toObject>;
        }): Member {
            const message = new Member({});
            if (data.address != null) {
                message.address = data.address;
            }
            if (data.weight != null) {
                message.weight = data.weight;
            }
            if (data.metadata != null) {
                message.metadata = data.metadata;
            }
            if (data.added_at != null) {
                message.added_at = dependency_3.google.protobuf.Timestamp.fromObject(data.added_at);
            }
            return message;
        }
        toObject() {
            const data: {
                address?: string;
                weight?: string;
                metadata?: string;
                added_at?: ReturnType<typeof dependency_3.google.protobuf.Timestamp.prototype.toObject>;
            } = {};
            if (this.address != null) {
                data.address = this.address;
            }
            if (this.weight != null) {
                data.weight = this.weight;
            }
            if (this.metadata != null) {
                data.metadata = this.metadata;
            }
            if (this.added_at != null) {
                data.added_at = this.added_at.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.address.length)
                writer.writeString(1, this.address);
            if (this.weight.length)
                writer.writeString(2, this.weight);
            if (this.metadata.length)
                writer.writeString(3, this.metadata);
            if (this.has_added_at)
                writer.writeMessage(4, this.added_at, () => this.added_at.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Member {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Member();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.address = reader.readString();
                        break;
                    case 2:
                        message.weight = reader.readString();
                        break;
                    case 3:
                        message.metadata = reader.readString();
                        break;
                    case 4:
                        reader.readMessage(message.added_at, () => message.added_at = dependency_3.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): Member {
            return Member.deserialize(bytes);
        }
    }
    export class MemberRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            address?: string;
            weight?: string;
            metadata?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("address" in data && data.address != undefined) {
                    this.address = data.address;
                }
                if ("weight" in data && data.weight != undefined) {
                    this.weight = data.weight;
                }
                if ("metadata" in data && data.metadata != undefined) {
                    this.metadata = data.metadata;
                }
            }
        }
        get address() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set address(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get weight() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set weight(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get metadata() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set metadata(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        static fromObject(data: {
            address?: string;
            weight?: string;
            metadata?: string;
        }): MemberRequest {
            const message = new MemberRequest({});
            if (data.address != null) {
                message.address = data.address;
            }
            if (data.weight != null) {
                message.weight = data.weight;
            }
            if (data.metadata != null) {
                message.metadata = data.metadata;
            }
            return message;
        }
        toObject() {
            const data: {
                address?: string;
                weight?: string;
                metadata?: string;
            } = {};
            if (this.address != null) {
                data.address = this.address;
            }
            if (this.weight != null) {
                data.weight = this.weight;
            }
            if (this.metadata != null) {
                data.metadata = this.metadata;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.address.length)
                writer.writeString(1, this.address);
            if (this.weight.length)
                writer.writeString(2, this.weight);
            if (this.metadata.length)
                writer.writeString(3, this.metadata);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): MemberRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MemberRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.address = reader.readString();
                        break;
                    case 2:
                        message.weight = reader.readString();
                        break;
                    case 3:
                        message.metadata = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): MemberRequest {
            return MemberRequest.deserialize(bytes);
        }
    }
    export class ThresholdDecisionPolicy extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            threshold?: string;
            windows?: DecisionPolicyWindows;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("threshold" in data && data.threshold != undefined) {
                    this.threshold = data.threshold;
                }
                if ("windows" in data && data.windows != undefined) {
                    this.windows = data.windows;
                }
            }
        }
        get threshold() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set threshold(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get windows() {
            return pb_1.Message.getWrapperField(this, DecisionPolicyWindows, 2) as DecisionPolicyWindows;
        }
        set windows(value: DecisionPolicyWindows) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_windows() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            threshold?: string;
            windows?: ReturnType<typeof DecisionPolicyWindows.prototype.toObject>;
        }): ThresholdDecisionPolicy {
            const message = new ThresholdDecisionPolicy({});
            if (data.threshold != null) {
                message.threshold = data.threshold;
            }
            if (data.windows != null) {
                message.windows = DecisionPolicyWindows.fromObject(data.windows);
            }
            return message;
        }
        toObject() {
            const data: {
                threshold?: string;
                windows?: ReturnType<typeof DecisionPolicyWindows.prototype.toObject>;
            } = {};
            if (this.threshold != null) {
                data.threshold = this.threshold;
            }
            if (this.windows != null) {
                data.windows = this.windows.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.threshold.length)
                writer.writeString(1, this.threshold);
            if (this.has_windows)
                writer.writeMessage(2, this.windows, () => this.windows.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ThresholdDecisionPolicy {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ThresholdDecisionPolicy();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.threshold = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.windows, () => message.windows = DecisionPolicyWindows.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ThresholdDecisionPolicy {
            return ThresholdDecisionPolicy.deserialize(bytes);
        }
    }
    export class PercentageDecisionPolicy extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            percentage?: string;
            windows?: DecisionPolicyWindows;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("percentage" in data && data.percentage != undefined) {
                    this.percentage = data.percentage;
                }
                if ("windows" in data && data.windows != undefined) {
                    this.windows = data.windows;
                }
            }
        }
        get percentage() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set percentage(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get windows() {
            return pb_1.Message.getWrapperField(this, DecisionPolicyWindows, 2) as DecisionPolicyWindows;
        }
        set windows(value: DecisionPolicyWindows) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_windows() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            percentage?: string;
            windows?: ReturnType<typeof DecisionPolicyWindows.prototype.toObject>;
        }): PercentageDecisionPolicy {
            const message = new PercentageDecisionPolicy({});
            if (data.percentage != null) {
                message.percentage = data.percentage;
            }
            if (data.windows != null) {
                message.windows = DecisionPolicyWindows.fromObject(data.windows);
            }
            return message;
        }
        toObject() {
            const data: {
                percentage?: string;
                windows?: ReturnType<typeof DecisionPolicyWindows.prototype.toObject>;
            } = {};
            if (this.percentage != null) {
                data.percentage = this.percentage;
            }
            if (this.windows != null) {
                data.windows = this.windows.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.percentage.length)
                writer.writeString(1, this.percentage);
            if (this.has_windows)
                writer.writeMessage(2, this.windows, () => this.windows.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): PercentageDecisionPolicy {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new PercentageDecisionPolicy();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.percentage = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.windows, () => message.windows = DecisionPolicyWindows.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): PercentageDecisionPolicy {
            return PercentageDecisionPolicy.deserialize(bytes);
        }
    }
    export class DecisionPolicyWindows extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            voting_period?: dependency_2.google.protobuf.Duration;
            min_execution_period?: dependency_2.google.protobuf.Duration;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("voting_period" in data && data.voting_period != undefined) {
                    this.voting_period = data.voting_period;
                }
                if ("min_execution_period" in data && data.min_execution_period != undefined) {
                    this.min_execution_period = data.min_execution_period;
                }
            }
        }
        get voting_period() {
            return pb_1.Message.getWrapperField(this, dependency_2.google.protobuf.Duration, 1) as dependency_2.google.protobuf.Duration;
        }
        set voting_period(value: dependency_2.google.protobuf.Duration) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_voting_period() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get min_execution_period() {
            return pb_1.Message.getWrapperField(this, dependency_2.google.protobuf.Duration, 2) as dependency_2.google.protobuf.Duration;
        }
        set min_execution_period(value: dependency_2.google.protobuf.Duration) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_min_execution_period() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            voting_period?: ReturnType<typeof dependency_2.google.protobuf.Duration.prototype.toObject>;
            min_execution_period?: ReturnType<typeof dependency_2.google.protobuf.Duration.prototype.toObject>;
        }): DecisionPolicyWindows {
            const message = new DecisionPolicyWindows({});
            if (data.voting_period != null) {
                message.voting_period = dependency_2.google.protobuf.Duration.fromObject(data.voting_period);
            }
            if (data.min_execution_period != null) {
                message.min_execution_period = dependency_2.google.protobuf.Duration.fromObject(data.min_execution_period);
            }
            return message;
        }
        toObject() {
            const data: {
                voting_period?: ReturnType<typeof dependency_2.google.protobuf.Duration.prototype.toObject>;
                min_execution_period?: ReturnType<typeof dependency_2.google.protobuf.Duration.prototype.toObject>;
            } = {};
            if (this.voting_period != null) {
                data.voting_period = this.voting_period.toObject();
            }
            if (this.min_execution_period != null) {
                data.min_execution_period = this.min_execution_period.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_voting_period)
                writer.writeMessage(1, this.voting_period, () => this.voting_period.serialize(writer));
            if (this.has_min_execution_period)
                writer.writeMessage(2, this.min_execution_period, () => this.min_execution_period.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): DecisionPolicyWindows {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DecisionPolicyWindows();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.voting_period, () => message.voting_period = dependency_2.google.protobuf.Duration.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.min_execution_period, () => message.min_execution_period = dependency_2.google.protobuf.Duration.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): DecisionPolicyWindows {
            return DecisionPolicyWindows.deserialize(bytes);
        }
    }
    export class GroupInfo extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            id?: number;
            admin?: string;
            metadata?: string;
            version?: number;
            total_weight?: string;
            created_at?: dependency_3.google.protobuf.Timestamp;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("id" in data && data.id != undefined) {
                    this.id = data.id;
                }
                if ("admin" in data && data.admin != undefined) {
                    this.admin = data.admin;
                }
                if ("metadata" in data && data.metadata != undefined) {
                    this.metadata = data.metadata;
                }
                if ("version" in data && data.version != undefined) {
                    this.version = data.version;
                }
                if ("total_weight" in data && data.total_weight != undefined) {
                    this.total_weight = data.total_weight;
                }
                if ("created_at" in data && data.created_at != undefined) {
                    this.created_at = data.created_at;
                }
            }
        }
        get id() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set id(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get admin() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set admin(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get metadata() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set metadata(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get version() {
            return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;
        }
        set version(value: number) {
            pb_1.Message.setField(this, 4, value);
        }
        get total_weight() {
            return pb_1.Message.getFieldWithDefault(this, 5, "") as string;
        }
        set total_weight(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        get created_at() {
            return pb_1.Message.getWrapperField(this, dependency_3.google.protobuf.Timestamp, 6) as dependency_3.google.protobuf.Timestamp;
        }
        set created_at(value: dependency_3.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 6, value);
        }
        get has_created_at() {
            return pb_1.Message.getField(this, 6) != null;
        }
        static fromObject(data: {
            id?: number;
            admin?: string;
            metadata?: string;
            version?: number;
            total_weight?: string;
            created_at?: ReturnType<typeof dependency_3.google.protobuf.Timestamp.prototype.toObject>;
        }): GroupInfo {
            const message = new GroupInfo({});
            if (data.id != null) {
                message.id = data.id;
            }
            if (data.admin != null) {
                message.admin = data.admin;
            }
            if (data.metadata != null) {
                message.metadata = data.metadata;
            }
            if (data.version != null) {
                message.version = data.version;
            }
            if (data.total_weight != null) {
                message.total_weight = data.total_weight;
            }
            if (data.created_at != null) {
                message.created_at = dependency_3.google.protobuf.Timestamp.fromObject(data.created_at);
            }
            return message;
        }
        toObject() {
            const data: {
                id?: number;
                admin?: string;
                metadata?: string;
                version?: number;
                total_weight?: string;
                created_at?: ReturnType<typeof dependency_3.google.protobuf.Timestamp.prototype.toObject>;
            } = {};
            if (this.id != null) {
                data.id = this.id;
            }
            if (this.admin != null) {
                data.admin = this.admin;
            }
            if (this.metadata != null) {
                data.metadata = this.metadata;
            }
            if (this.version != null) {
                data.version = this.version;
            }
            if (this.total_weight != null) {
                data.total_weight = this.total_weight;
            }
            if (this.created_at != null) {
                data.created_at = this.created_at.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.id != 0)
                writer.writeUint64(1, this.id);
            if (this.admin.length)
                writer.writeString(2, this.admin);
            if (this.metadata.length)
                writer.writeString(3, this.metadata);
            if (this.version != 0)
                writer.writeUint64(4, this.version);
            if (this.total_weight.length)
                writer.writeString(5, this.total_weight);
            if (this.has_created_at)
                writer.writeMessage(6, this.created_at, () => this.created_at.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GroupInfo {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GroupInfo();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.id = reader.readUint64();
                        break;
                    case 2:
                        message.admin = reader.readString();
                        break;
                    case 3:
                        message.metadata = reader.readString();
                        break;
                    case 4:
                        message.version = reader.readUint64();
                        break;
                    case 5:
                        message.total_weight = reader.readString();
                        break;
                    case 6:
                        reader.readMessage(message.created_at, () => message.created_at = dependency_3.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GroupInfo {
            return GroupInfo.deserialize(bytes);
        }
    }
    export class GroupMember extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            group_id?: number;
            member?: Member;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("group_id" in data && data.group_id != undefined) {
                    this.group_id = data.group_id;
                }
                if ("member" in data && data.member != undefined) {
                    this.member = data.member;
                }
            }
        }
        get group_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set group_id(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get member() {
            return pb_1.Message.getWrapperField(this, Member, 2) as Member;
        }
        set member(value: Member) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_member() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            group_id?: number;
            member?: ReturnType<typeof Member.prototype.toObject>;
        }): GroupMember {
            const message = new GroupMember({});
            if (data.group_id != null) {
                message.group_id = data.group_id;
            }
            if (data.member != null) {
                message.member = Member.fromObject(data.member);
            }
            return message;
        }
        toObject() {
            const data: {
                group_id?: number;
                member?: ReturnType<typeof Member.prototype.toObject>;
            } = {};
            if (this.group_id != null) {
                data.group_id = this.group_id;
            }
            if (this.member != null) {
                data.member = this.member.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.group_id != 0)
                writer.writeUint64(1, this.group_id);
            if (this.has_member)
                writer.writeMessage(2, this.member, () => this.member.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GroupMember {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GroupMember();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.group_id = reader.readUint64();
                        break;
                    case 2:
                        reader.readMessage(message.member, () => message.member = Member.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GroupMember {
            return GroupMember.deserialize(bytes);
        }
    }
    export class GroupPolicyInfo extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            address?: string;
            group_id?: number;
            admin?: string;
            metadata?: string;
            version?: number;
            decision_policy?: dependency_5.google.protobuf.Any;
            created_at?: dependency_3.google.protobuf.Timestamp;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("address" in data && data.address != undefined) {
                    this.address = data.address;
                }
                if ("group_id" in data && data.group_id != undefined) {
                    this.group_id = data.group_id;
                }
                if ("admin" in data && data.admin != undefined) {
                    this.admin = data.admin;
                }
                if ("metadata" in data && data.metadata != undefined) {
                    this.metadata = data.metadata;
                }
                if ("version" in data && data.version != undefined) {
                    this.version = data.version;
                }
                if ("decision_policy" in data && data.decision_policy != undefined) {
                    this.decision_policy = data.decision_policy;
                }
                if ("created_at" in data && data.created_at != undefined) {
                    this.created_at = data.created_at;
                }
            }
        }
        get address() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set address(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get group_id() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set group_id(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get admin() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set admin(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get metadata() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set metadata(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get version() {
            return pb_1.Message.getFieldWithDefault(this, 5, 0) as number;
        }
        set version(value: number) {
            pb_1.Message.setField(this, 5, value);
        }
        get decision_policy() {
            return pb_1.Message.getWrapperField(this, dependency_5.google.protobuf.Any, 6) as dependency_5.google.protobuf.Any;
        }
        set decision_policy(value: dependency_5.google.protobuf.Any) {
            pb_1.Message.setWrapperField(this, 6, value);
        }
        get has_decision_policy() {
            return pb_1.Message.getField(this, 6) != null;
        }
        get created_at() {
            return pb_1.Message.getWrapperField(this, dependency_3.google.protobuf.Timestamp, 7) as dependency_3.google.protobuf.Timestamp;
        }
        set created_at(value: dependency_3.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 7, value);
        }
        get has_created_at() {
            return pb_1.Message.getField(this, 7) != null;
        }
        static fromObject(data: {
            address?: string;
            group_id?: number;
            admin?: string;
            metadata?: string;
            version?: number;
            decision_policy?: ReturnType<typeof dependency_5.google.protobuf.Any.prototype.toObject>;
            created_at?: ReturnType<typeof dependency_3.google.protobuf.Timestamp.prototype.toObject>;
        }): GroupPolicyInfo {
            const message = new GroupPolicyInfo({});
            if (data.address != null) {
                message.address = data.address;
            }
            if (data.group_id != null) {
                message.group_id = data.group_id;
            }
            if (data.admin != null) {
                message.admin = data.admin;
            }
            if (data.metadata != null) {
                message.metadata = data.metadata;
            }
            if (data.version != null) {
                message.version = data.version;
            }
            if (data.decision_policy != null) {
                message.decision_policy = dependency_5.google.protobuf.Any.fromObject(data.decision_policy);
            }
            if (data.created_at != null) {
                message.created_at = dependency_3.google.protobuf.Timestamp.fromObject(data.created_at);
            }
            return message;
        }
        toObject() {
            const data: {
                address?: string;
                group_id?: number;
                admin?: string;
                metadata?: string;
                version?: number;
                decision_policy?: ReturnType<typeof dependency_5.google.protobuf.Any.prototype.toObject>;
                created_at?: ReturnType<typeof dependency_3.google.protobuf.Timestamp.prototype.toObject>;
            } = {};
            if (this.address != null) {
                data.address = this.address;
            }
            if (this.group_id != null) {
                data.group_id = this.group_id;
            }
            if (this.admin != null) {
                data.admin = this.admin;
            }
            if (this.metadata != null) {
                data.metadata = this.metadata;
            }
            if (this.version != null) {
                data.version = this.version;
            }
            if (this.decision_policy != null) {
                data.decision_policy = this.decision_policy.toObject();
            }
            if (this.created_at != null) {
                data.created_at = this.created_at.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.address.length)
                writer.writeString(1, this.address);
            if (this.group_id != 0)
                writer.writeUint64(2, this.group_id);
            if (this.admin.length)
                writer.writeString(3, this.admin);
            if (this.metadata.length)
                writer.writeString(4, this.metadata);
            if (this.version != 0)
                writer.writeUint64(5, this.version);
            if (this.has_decision_policy)
                writer.writeMessage(6, this.decision_policy, () => this.decision_policy.serialize(writer));
            if (this.has_created_at)
                writer.writeMessage(7, this.created_at, () => this.created_at.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GroupPolicyInfo {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GroupPolicyInfo();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.address = reader.readString();
                        break;
                    case 2:
                        message.group_id = reader.readUint64();
                        break;
                    case 3:
                        message.admin = reader.readString();
                        break;
                    case 4:
                        message.metadata = reader.readString();
                        break;
                    case 5:
                        message.version = reader.readUint64();
                        break;
                    case 6:
                        reader.readMessage(message.decision_policy, () => message.decision_policy = dependency_5.google.protobuf.Any.deserialize(reader));
                        break;
                    case 7:
                        reader.readMessage(message.created_at, () => message.created_at = dependency_3.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GroupPolicyInfo {
            return GroupPolicyInfo.deserialize(bytes);
        }
    }
    export class Proposal extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            id?: number;
            group_policy_address?: string;
            metadata?: string;
            proposers?: string[];
            submit_time?: dependency_3.google.protobuf.Timestamp;
            group_version?: number;
            group_policy_version?: number;
            status?: ProposalStatus;
            final_tally_result?: TallyResult;
            voting_period_end?: dependency_3.google.protobuf.Timestamp;
            executor_result?: ProposalExecutorResult;
            messages?: dependency_5.google.protobuf.Any[];
            title?: string;
            summary?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [4, 12], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("id" in data && data.id != undefined) {
                    this.id = data.id;
                }
                if ("group_policy_address" in data && data.group_policy_address != undefined) {
                    this.group_policy_address = data.group_policy_address;
                }
                if ("metadata" in data && data.metadata != undefined) {
                    this.metadata = data.metadata;
                }
                if ("proposers" in data && data.proposers != undefined) {
                    this.proposers = data.proposers;
                }
                if ("submit_time" in data && data.submit_time != undefined) {
                    this.submit_time = data.submit_time;
                }
                if ("group_version" in data && data.group_version != undefined) {
                    this.group_version = data.group_version;
                }
                if ("group_policy_version" in data && data.group_policy_version != undefined) {
                    this.group_policy_version = data.group_policy_version;
                }
                if ("status" in data && data.status != undefined) {
                    this.status = data.status;
                }
                if ("final_tally_result" in data && data.final_tally_result != undefined) {
                    this.final_tally_result = data.final_tally_result;
                }
                if ("voting_period_end" in data && data.voting_period_end != undefined) {
                    this.voting_period_end = data.voting_period_end;
                }
                if ("executor_result" in data && data.executor_result != undefined) {
                    this.executor_result = data.executor_result;
                }
                if ("messages" in data && data.messages != undefined) {
                    this.messages = data.messages;
                }
                if ("title" in data && data.title != undefined) {
                    this.title = data.title;
                }
                if ("summary" in data && data.summary != undefined) {
                    this.summary = data.summary;
                }
            }
        }
        get id() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set id(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get group_policy_address() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set group_policy_address(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get metadata() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set metadata(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get proposers() {
            return pb_1.Message.getFieldWithDefault(this, 4, []) as string[];
        }
        set proposers(value: string[]) {
            pb_1.Message.setField(this, 4, value);
        }
        get submit_time() {
            return pb_1.Message.getWrapperField(this, dependency_3.google.protobuf.Timestamp, 5) as dependency_3.google.protobuf.Timestamp;
        }
        set submit_time(value: dependency_3.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 5, value);
        }
        get has_submit_time() {
            return pb_1.Message.getField(this, 5) != null;
        }
        get group_version() {
            return pb_1.Message.getFieldWithDefault(this, 6, 0) as number;
        }
        set group_version(value: number) {
            pb_1.Message.setField(this, 6, value);
        }
        get group_policy_version() {
            return pb_1.Message.getFieldWithDefault(this, 7, 0) as number;
        }
        set group_policy_version(value: number) {
            pb_1.Message.setField(this, 7, value);
        }
        get status() {
            return pb_1.Message.getFieldWithDefault(this, 8, ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED) as ProposalStatus;
        }
        set status(value: ProposalStatus) {
            pb_1.Message.setField(this, 8, value);
        }
        get final_tally_result() {
            return pb_1.Message.getWrapperField(this, TallyResult, 9) as TallyResult;
        }
        set final_tally_result(value: TallyResult) {
            pb_1.Message.setWrapperField(this, 9, value);
        }
        get has_final_tally_result() {
            return pb_1.Message.getField(this, 9) != null;
        }
        get voting_period_end() {
            return pb_1.Message.getWrapperField(this, dependency_3.google.protobuf.Timestamp, 10) as dependency_3.google.protobuf.Timestamp;
        }
        set voting_period_end(value: dependency_3.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 10, value);
        }
        get has_voting_period_end() {
            return pb_1.Message.getField(this, 10) != null;
        }
        get executor_result() {
            return pb_1.Message.getFieldWithDefault(this, 11, ProposalExecutorResult.PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED) as ProposalExecutorResult;
        }
        set executor_result(value: ProposalExecutorResult) {
            pb_1.Message.setField(this, 11, value);
        }
        get messages() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_5.google.protobuf.Any, 12) as dependency_5.google.protobuf.Any[];
        }
        set messages(value: dependency_5.google.protobuf.Any[]) {
            pb_1.Message.setRepeatedWrapperField(this, 12, value);
        }
        get title() {
            return pb_1.Message.getFieldWithDefault(this, 13, "") as string;
        }
        set title(value: string) {
            pb_1.Message.setField(this, 13, value);
        }
        get summary() {
            return pb_1.Message.getFieldWithDefault(this, 14, "") as string;
        }
        set summary(value: string) {
            pb_1.Message.setField(this, 14, value);
        }
        static fromObject(data: {
            id?: number;
            group_policy_address?: string;
            metadata?: string;
            proposers?: string[];
            submit_time?: ReturnType<typeof dependency_3.google.protobuf.Timestamp.prototype.toObject>;
            group_version?: number;
            group_policy_version?: number;
            status?: ProposalStatus;
            final_tally_result?: ReturnType<typeof TallyResult.prototype.toObject>;
            voting_period_end?: ReturnType<typeof dependency_3.google.protobuf.Timestamp.prototype.toObject>;
            executor_result?: ProposalExecutorResult;
            messages?: ReturnType<typeof dependency_5.google.protobuf.Any.prototype.toObject>[];
            title?: string;
            summary?: string;
        }): Proposal {
            const message = new Proposal({});
            if (data.id != null) {
                message.id = data.id;
            }
            if (data.group_policy_address != null) {
                message.group_policy_address = data.group_policy_address;
            }
            if (data.metadata != null) {
                message.metadata = data.metadata;
            }
            if (data.proposers != null) {
                message.proposers = data.proposers;
            }
            if (data.submit_time != null) {
                message.submit_time = dependency_3.google.protobuf.Timestamp.fromObject(data.submit_time);
            }
            if (data.group_version != null) {
                message.group_version = data.group_version;
            }
            if (data.group_policy_version != null) {
                message.group_policy_version = data.group_policy_version;
            }
            if (data.status != null) {
                message.status = data.status;
            }
            if (data.final_tally_result != null) {
                message.final_tally_result = TallyResult.fromObject(data.final_tally_result);
            }
            if (data.voting_period_end != null) {
                message.voting_period_end = dependency_3.google.protobuf.Timestamp.fromObject(data.voting_period_end);
            }
            if (data.executor_result != null) {
                message.executor_result = data.executor_result;
            }
            if (data.messages != null) {
                message.messages = data.messages.map(item => dependency_5.google.protobuf.Any.fromObject(item));
            }
            if (data.title != null) {
                message.title = data.title;
            }
            if (data.summary != null) {
                message.summary = data.summary;
            }
            return message;
        }
        toObject() {
            const data: {
                id?: number;
                group_policy_address?: string;
                metadata?: string;
                proposers?: string[];
                submit_time?: ReturnType<typeof dependency_3.google.protobuf.Timestamp.prototype.toObject>;
                group_version?: number;
                group_policy_version?: number;
                status?: ProposalStatus;
                final_tally_result?: ReturnType<typeof TallyResult.prototype.toObject>;
                voting_period_end?: ReturnType<typeof dependency_3.google.protobuf.Timestamp.prototype.toObject>;
                executor_result?: ProposalExecutorResult;
                messages?: ReturnType<typeof dependency_5.google.protobuf.Any.prototype.toObject>[];
                title?: string;
                summary?: string;
            } = {};
            if (this.id != null) {
                data.id = this.id;
            }
            if (this.group_policy_address != null) {
                data.group_policy_address = this.group_policy_address;
            }
            if (this.metadata != null) {
                data.metadata = this.metadata;
            }
            if (this.proposers != null) {
                data.proposers = this.proposers;
            }
            if (this.submit_time != null) {
                data.submit_time = this.submit_time.toObject();
            }
            if (this.group_version != null) {
                data.group_version = this.group_version;
            }
            if (this.group_policy_version != null) {
                data.group_policy_version = this.group_policy_version;
            }
            if (this.status != null) {
                data.status = this.status;
            }
            if (this.final_tally_result != null) {
                data.final_tally_result = this.final_tally_result.toObject();
            }
            if (this.voting_period_end != null) {
                data.voting_period_end = this.voting_period_end.toObject();
            }
            if (this.executor_result != null) {
                data.executor_result = this.executor_result;
            }
            if (this.messages != null) {
                data.messages = this.messages.map((item: dependency_5.google.protobuf.Any) => item.toObject());
            }
            if (this.title != null) {
                data.title = this.title;
            }
            if (this.summary != null) {
                data.summary = this.summary;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.id != 0)
                writer.writeUint64(1, this.id);
            if (this.group_policy_address.length)
                writer.writeString(2, this.group_policy_address);
            if (this.metadata.length)
                writer.writeString(3, this.metadata);
            if (this.proposers.length)
                writer.writeRepeatedString(4, this.proposers);
            if (this.has_submit_time)
                writer.writeMessage(5, this.submit_time, () => this.submit_time.serialize(writer));
            if (this.group_version != 0)
                writer.writeUint64(6, this.group_version);
            if (this.group_policy_version != 0)
                writer.writeUint64(7, this.group_policy_version);
            if (this.status != ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED)
                writer.writeEnum(8, this.status);
            if (this.has_final_tally_result)
                writer.writeMessage(9, this.final_tally_result, () => this.final_tally_result.serialize(writer));
            if (this.has_voting_period_end)
                writer.writeMessage(10, this.voting_period_end, () => this.voting_period_end.serialize(writer));
            if (this.executor_result != ProposalExecutorResult.PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED)
                writer.writeEnum(11, this.executor_result);
            if (this.messages.length)
                writer.writeRepeatedMessage(12, this.messages, (item: dependency_5.google.protobuf.Any) => item.serialize(writer));
            if (this.title.length)
                writer.writeString(13, this.title);
            if (this.summary.length)
                writer.writeString(14, this.summary);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Proposal {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Proposal();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.id = reader.readUint64();
                        break;
                    case 2:
                        message.group_policy_address = reader.readString();
                        break;
                    case 3:
                        message.metadata = reader.readString();
                        break;
                    case 4:
                        pb_1.Message.addToRepeatedField(message, 4, reader.readString());
                        break;
                    case 5:
                        reader.readMessage(message.submit_time, () => message.submit_time = dependency_3.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 6:
                        message.group_version = reader.readUint64();
                        break;
                    case 7:
                        message.group_policy_version = reader.readUint64();
                        break;
                    case 8:
                        message.status = reader.readEnum();
                        break;
                    case 9:
                        reader.readMessage(message.final_tally_result, () => message.final_tally_result = TallyResult.deserialize(reader));
                        break;
                    case 10:
                        reader.readMessage(message.voting_period_end, () => message.voting_period_end = dependency_3.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 11:
                        message.executor_result = reader.readEnum();
                        break;
                    case 12:
                        reader.readMessage(message.messages, () => pb_1.Message.addToRepeatedWrapperField(message, 12, dependency_5.google.protobuf.Any.deserialize(reader), dependency_5.google.protobuf.Any));
                        break;
                    case 13:
                        message.title = reader.readString();
                        break;
                    case 14:
                        message.summary = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): Proposal {
            return Proposal.deserialize(bytes);
        }
    }
    export class TallyResult extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            yes_count?: string;
            abstain_count?: string;
            no_count?: string;
            no_with_veto_count?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("yes_count" in data && data.yes_count != undefined) {
                    this.yes_count = data.yes_count;
                }
                if ("abstain_count" in data && data.abstain_count != undefined) {
                    this.abstain_count = data.abstain_count;
                }
                if ("no_count" in data && data.no_count != undefined) {
                    this.no_count = data.no_count;
                }
                if ("no_with_veto_count" in data && data.no_with_veto_count != undefined) {
                    this.no_with_veto_count = data.no_with_veto_count;
                }
            }
        }
        get yes_count() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set yes_count(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get abstain_count() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set abstain_count(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get no_count() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set no_count(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get no_with_veto_count() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set no_with_veto_count(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data: {
            yes_count?: string;
            abstain_count?: string;
            no_count?: string;
            no_with_veto_count?: string;
        }): TallyResult {
            const message = new TallyResult({});
            if (data.yes_count != null) {
                message.yes_count = data.yes_count;
            }
            if (data.abstain_count != null) {
                message.abstain_count = data.abstain_count;
            }
            if (data.no_count != null) {
                message.no_count = data.no_count;
            }
            if (data.no_with_veto_count != null) {
                message.no_with_veto_count = data.no_with_veto_count;
            }
            return message;
        }
        toObject() {
            const data: {
                yes_count?: string;
                abstain_count?: string;
                no_count?: string;
                no_with_veto_count?: string;
            } = {};
            if (this.yes_count != null) {
                data.yes_count = this.yes_count;
            }
            if (this.abstain_count != null) {
                data.abstain_count = this.abstain_count;
            }
            if (this.no_count != null) {
                data.no_count = this.no_count;
            }
            if (this.no_with_veto_count != null) {
                data.no_with_veto_count = this.no_with_veto_count;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.yes_count.length)
                writer.writeString(1, this.yes_count);
            if (this.abstain_count.length)
                writer.writeString(2, this.abstain_count);
            if (this.no_count.length)
                writer.writeString(3, this.no_count);
            if (this.no_with_veto_count.length)
                writer.writeString(4, this.no_with_veto_count);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): TallyResult {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new TallyResult();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.yes_count = reader.readString();
                        break;
                    case 2:
                        message.abstain_count = reader.readString();
                        break;
                    case 3:
                        message.no_count = reader.readString();
                        break;
                    case 4:
                        message.no_with_veto_count = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): TallyResult {
            return TallyResult.deserialize(bytes);
        }
    }
    export class Vote extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            proposal_id?: number;
            voter?: string;
            option?: VoteOption;
            metadata?: string;
            submit_time?: dependency_3.google.protobuf.Timestamp;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("proposal_id" in data && data.proposal_id != undefined) {
                    this.proposal_id = data.proposal_id;
                }
                if ("voter" in data && data.voter != undefined) {
                    this.voter = data.voter;
                }
                if ("option" in data && data.option != undefined) {
                    this.option = data.option;
                }
                if ("metadata" in data && data.metadata != undefined) {
                    this.metadata = data.metadata;
                }
                if ("submit_time" in data && data.submit_time != undefined) {
                    this.submit_time = data.submit_time;
                }
            }
        }
        get proposal_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set proposal_id(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get voter() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set voter(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get option() {
            return pb_1.Message.getFieldWithDefault(this, 3, VoteOption.VOTE_OPTION_UNSPECIFIED) as VoteOption;
        }
        set option(value: VoteOption) {
            pb_1.Message.setField(this, 3, value);
        }
        get metadata() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set metadata(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get submit_time() {
            return pb_1.Message.getWrapperField(this, dependency_3.google.protobuf.Timestamp, 5) as dependency_3.google.protobuf.Timestamp;
        }
        set submit_time(value: dependency_3.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 5, value);
        }
        get has_submit_time() {
            return pb_1.Message.getField(this, 5) != null;
        }
        static fromObject(data: {
            proposal_id?: number;
            voter?: string;
            option?: VoteOption;
            metadata?: string;
            submit_time?: ReturnType<typeof dependency_3.google.protobuf.Timestamp.prototype.toObject>;
        }): Vote {
            const message = new Vote({});
            if (data.proposal_id != null) {
                message.proposal_id = data.proposal_id;
            }
            if (data.voter != null) {
                message.voter = data.voter;
            }
            if (data.option != null) {
                message.option = data.option;
            }
            if (data.metadata != null) {
                message.metadata = data.metadata;
            }
            if (data.submit_time != null) {
                message.submit_time = dependency_3.google.protobuf.Timestamp.fromObject(data.submit_time);
            }
            return message;
        }
        toObject() {
            const data: {
                proposal_id?: number;
                voter?: string;
                option?: VoteOption;
                metadata?: string;
                submit_time?: ReturnType<typeof dependency_3.google.protobuf.Timestamp.prototype.toObject>;
            } = {};
            if (this.proposal_id != null) {
                data.proposal_id = this.proposal_id;
            }
            if (this.voter != null) {
                data.voter = this.voter;
            }
            if (this.option != null) {
                data.option = this.option;
            }
            if (this.metadata != null) {
                data.metadata = this.metadata;
            }
            if (this.submit_time != null) {
                data.submit_time = this.submit_time.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.proposal_id != 0)
                writer.writeUint64(1, this.proposal_id);
            if (this.voter.length)
                writer.writeString(2, this.voter);
            if (this.option != VoteOption.VOTE_OPTION_UNSPECIFIED)
                writer.writeEnum(3, this.option);
            if (this.metadata.length)
                writer.writeString(4, this.metadata);
            if (this.has_submit_time)
                writer.writeMessage(5, this.submit_time, () => this.submit_time.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Vote {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Vote();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.proposal_id = reader.readUint64();
                        break;
                    case 2:
                        message.voter = reader.readString();
                        break;
                    case 3:
                        message.option = reader.readEnum();
                        break;
                    case 4:
                        message.metadata = reader.readString();
                        break;
                    case 5:
                        reader.readMessage(message.submit_time, () => message.submit_time = dependency_3.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): Vote {
            return Vote.deserialize(bytes);
        }
    }
}
