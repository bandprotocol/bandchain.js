/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: cosmos/group/v1/query.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../../../gogoproto/gogo";
import * as dependency_2 from "./../../../google/api/annotations";
import * as dependency_3 from "./types";
import * as dependency_4 from "./../../base/query/v1beta1/pagination";
import * as dependency_5 from "./../../../cosmos_proto/cosmos";
import * as dependency_6 from "./../../../amino/amino";
import * as pb_1 from "google-protobuf";
import * as grpc_1 from "@grpc/grpc-js";
export namespace cosmos.group.v1 {
    export class QueryGroupInfoRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            group_id?: number;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("group_id" in data && data.group_id != undefined) {
                    this.group_id = data.group_id;
                }
            }
        }
        get group_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set group_id(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data: {
            group_id?: number;
        }): QueryGroupInfoRequest {
            const message = new QueryGroupInfoRequest({});
            if (data.group_id != null) {
                message.group_id = data.group_id;
            }
            return message;
        }
        toObject() {
            const data: {
                group_id?: number;
            } = {};
            if (this.group_id != null) {
                data.group_id = this.group_id;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.group_id != 0)
                writer.writeUint64(1, this.group_id);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryGroupInfoRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryGroupInfoRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.group_id = reader.readUint64();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryGroupInfoRequest {
            return QueryGroupInfoRequest.deserialize(bytes);
        }
    }
    export class QueryGroupInfoResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            info?: dependency_3.cosmos.group.v1.GroupInfo;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("info" in data && data.info != undefined) {
                    this.info = data.info;
                }
            }
        }
        get info() {
            return pb_1.Message.getWrapperField(this, dependency_3.cosmos.group.v1.GroupInfo, 1) as dependency_3.cosmos.group.v1.GroupInfo;
        }
        set info(value: dependency_3.cosmos.group.v1.GroupInfo) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_info() {
            return pb_1.Message.getField(this, 1) != null;
        }
        static fromObject(data: {
            info?: ReturnType<typeof dependency_3.cosmos.group.v1.GroupInfo.prototype.toObject>;
        }): QueryGroupInfoResponse {
            const message = new QueryGroupInfoResponse({});
            if (data.info != null) {
                message.info = dependency_3.cosmos.group.v1.GroupInfo.fromObject(data.info);
            }
            return message;
        }
        toObject() {
            const data: {
                info?: ReturnType<typeof dependency_3.cosmos.group.v1.GroupInfo.prototype.toObject>;
            } = {};
            if (this.info != null) {
                data.info = this.info.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_info)
                writer.writeMessage(1, this.info, () => this.info.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryGroupInfoResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryGroupInfoResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.info, () => message.info = dependency_3.cosmos.group.v1.GroupInfo.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryGroupInfoResponse {
            return QueryGroupInfoResponse.deserialize(bytes);
        }
    }
    export class QueryGroupPolicyInfoRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            address?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("address" in data && data.address != undefined) {
                    this.address = data.address;
                }
            }
        }
        get address() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set address(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data: {
            address?: string;
        }): QueryGroupPolicyInfoRequest {
            const message = new QueryGroupPolicyInfoRequest({});
            if (data.address != null) {
                message.address = data.address;
            }
            return message;
        }
        toObject() {
            const data: {
                address?: string;
            } = {};
            if (this.address != null) {
                data.address = this.address;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.address.length)
                writer.writeString(1, this.address);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryGroupPolicyInfoRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryGroupPolicyInfoRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.address = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryGroupPolicyInfoRequest {
            return QueryGroupPolicyInfoRequest.deserialize(bytes);
        }
    }
    export class QueryGroupPolicyInfoResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            info?: dependency_3.cosmos.group.v1.GroupPolicyInfo;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("info" in data && data.info != undefined) {
                    this.info = data.info;
                }
            }
        }
        get info() {
            return pb_1.Message.getWrapperField(this, dependency_3.cosmos.group.v1.GroupPolicyInfo, 1) as dependency_3.cosmos.group.v1.GroupPolicyInfo;
        }
        set info(value: dependency_3.cosmos.group.v1.GroupPolicyInfo) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_info() {
            return pb_1.Message.getField(this, 1) != null;
        }
        static fromObject(data: {
            info?: ReturnType<typeof dependency_3.cosmos.group.v1.GroupPolicyInfo.prototype.toObject>;
        }): QueryGroupPolicyInfoResponse {
            const message = new QueryGroupPolicyInfoResponse({});
            if (data.info != null) {
                message.info = dependency_3.cosmos.group.v1.GroupPolicyInfo.fromObject(data.info);
            }
            return message;
        }
        toObject() {
            const data: {
                info?: ReturnType<typeof dependency_3.cosmos.group.v1.GroupPolicyInfo.prototype.toObject>;
            } = {};
            if (this.info != null) {
                data.info = this.info.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_info)
                writer.writeMessage(1, this.info, () => this.info.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryGroupPolicyInfoResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryGroupPolicyInfoResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.info, () => message.info = dependency_3.cosmos.group.v1.GroupPolicyInfo.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryGroupPolicyInfoResponse {
            return QueryGroupPolicyInfoResponse.deserialize(bytes);
        }
    }
    export class QueryGroupMembersRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            group_id?: number;
            pagination?: dependency_4.cosmos.base.query.v1beta1.PageRequest;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("group_id" in data && data.group_id != undefined) {
                    this.group_id = data.group_id;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get group_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set group_id(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_4.cosmos.base.query.v1beta1.PageRequest, 2) as dependency_4.cosmos.base.query.v1beta1.PageRequest;
        }
        set pagination(value: dependency_4.cosmos.base.query.v1beta1.PageRequest) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_pagination() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            group_id?: number;
            pagination?: ReturnType<typeof dependency_4.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
        }): QueryGroupMembersRequest {
            const message = new QueryGroupMembersRequest({});
            if (data.group_id != null) {
                message.group_id = data.group_id;
            }
            if (data.pagination != null) {
                message.pagination = dependency_4.cosmos.base.query.v1beta1.PageRequest.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                group_id?: number;
                pagination?: ReturnType<typeof dependency_4.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
            } = {};
            if (this.group_id != null) {
                data.group_id = this.group_id;
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.group_id != 0)
                writer.writeUint64(1, this.group_id);
            if (this.has_pagination)
                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryGroupMembersRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryGroupMembersRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.group_id = reader.readUint64();
                        break;
                    case 2:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_4.cosmos.base.query.v1beta1.PageRequest.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryGroupMembersRequest {
            return QueryGroupMembersRequest.deserialize(bytes);
        }
    }
    export class QueryGroupMembersResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            members?: dependency_3.cosmos.group.v1.GroupMember[];
            pagination?: dependency_4.cosmos.base.query.v1beta1.PageResponse;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("members" in data && data.members != undefined) {
                    this.members = data.members;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get members() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_3.cosmos.group.v1.GroupMember, 1) as dependency_3.cosmos.group.v1.GroupMember[];
        }
        set members(value: dependency_3.cosmos.group.v1.GroupMember[]) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_4.cosmos.base.query.v1beta1.PageResponse, 2) as dependency_4.cosmos.base.query.v1beta1.PageResponse;
        }
        set pagination(value: dependency_4.cosmos.base.query.v1beta1.PageResponse) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_pagination() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            members?: ReturnType<typeof dependency_3.cosmos.group.v1.GroupMember.prototype.toObject>[];
            pagination?: ReturnType<typeof dependency_4.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
        }): QueryGroupMembersResponse {
            const message = new QueryGroupMembersResponse({});
            if (data.members != null) {
                message.members = data.members.map(item => dependency_3.cosmos.group.v1.GroupMember.fromObject(item));
            }
            if (data.pagination != null) {
                message.pagination = dependency_4.cosmos.base.query.v1beta1.PageResponse.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                members?: ReturnType<typeof dependency_3.cosmos.group.v1.GroupMember.prototype.toObject>[];
                pagination?: ReturnType<typeof dependency_4.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
            } = {};
            if (this.members != null) {
                data.members = this.members.map((item: dependency_3.cosmos.group.v1.GroupMember) => item.toObject());
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.members.length)
                writer.writeRepeatedMessage(1, this.members, (item: dependency_3.cosmos.group.v1.GroupMember) => item.serialize(writer));
            if (this.has_pagination)
                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryGroupMembersResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryGroupMembersResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.members, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_3.cosmos.group.v1.GroupMember.deserialize(reader), dependency_3.cosmos.group.v1.GroupMember));
                        break;
                    case 2:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_4.cosmos.base.query.v1beta1.PageResponse.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryGroupMembersResponse {
            return QueryGroupMembersResponse.deserialize(bytes);
        }
    }
    export class QueryGroupsByAdminRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            admin?: string;
            pagination?: dependency_4.cosmos.base.query.v1beta1.PageRequest;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("admin" in data && data.admin != undefined) {
                    this.admin = data.admin;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get admin() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set admin(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_4.cosmos.base.query.v1beta1.PageRequest, 2) as dependency_4.cosmos.base.query.v1beta1.PageRequest;
        }
        set pagination(value: dependency_4.cosmos.base.query.v1beta1.PageRequest) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_pagination() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            admin?: string;
            pagination?: ReturnType<typeof dependency_4.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
        }): QueryGroupsByAdminRequest {
            const message = new QueryGroupsByAdminRequest({});
            if (data.admin != null) {
                message.admin = data.admin;
            }
            if (data.pagination != null) {
                message.pagination = dependency_4.cosmos.base.query.v1beta1.PageRequest.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                admin?: string;
                pagination?: ReturnType<typeof dependency_4.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
            } = {};
            if (this.admin != null) {
                data.admin = this.admin;
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.admin.length)
                writer.writeString(1, this.admin);
            if (this.has_pagination)
                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryGroupsByAdminRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryGroupsByAdminRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.admin = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_4.cosmos.base.query.v1beta1.PageRequest.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryGroupsByAdminRequest {
            return QueryGroupsByAdminRequest.deserialize(bytes);
        }
    }
    export class QueryGroupsByAdminResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            groups?: dependency_3.cosmos.group.v1.GroupInfo[];
            pagination?: dependency_4.cosmos.base.query.v1beta1.PageResponse;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("groups" in data && data.groups != undefined) {
                    this.groups = data.groups;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get groups() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_3.cosmos.group.v1.GroupInfo, 1) as dependency_3.cosmos.group.v1.GroupInfo[];
        }
        set groups(value: dependency_3.cosmos.group.v1.GroupInfo[]) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_4.cosmos.base.query.v1beta1.PageResponse, 2) as dependency_4.cosmos.base.query.v1beta1.PageResponse;
        }
        set pagination(value: dependency_4.cosmos.base.query.v1beta1.PageResponse) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_pagination() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            groups?: ReturnType<typeof dependency_3.cosmos.group.v1.GroupInfo.prototype.toObject>[];
            pagination?: ReturnType<typeof dependency_4.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
        }): QueryGroupsByAdminResponse {
            const message = new QueryGroupsByAdminResponse({});
            if (data.groups != null) {
                message.groups = data.groups.map(item => dependency_3.cosmos.group.v1.GroupInfo.fromObject(item));
            }
            if (data.pagination != null) {
                message.pagination = dependency_4.cosmos.base.query.v1beta1.PageResponse.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                groups?: ReturnType<typeof dependency_3.cosmos.group.v1.GroupInfo.prototype.toObject>[];
                pagination?: ReturnType<typeof dependency_4.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
            } = {};
            if (this.groups != null) {
                data.groups = this.groups.map((item: dependency_3.cosmos.group.v1.GroupInfo) => item.toObject());
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.groups.length)
                writer.writeRepeatedMessage(1, this.groups, (item: dependency_3.cosmos.group.v1.GroupInfo) => item.serialize(writer));
            if (this.has_pagination)
                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryGroupsByAdminResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryGroupsByAdminResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.groups, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_3.cosmos.group.v1.GroupInfo.deserialize(reader), dependency_3.cosmos.group.v1.GroupInfo));
                        break;
                    case 2:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_4.cosmos.base.query.v1beta1.PageResponse.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryGroupsByAdminResponse {
            return QueryGroupsByAdminResponse.deserialize(bytes);
        }
    }
    export class QueryGroupPoliciesByGroupRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            group_id?: number;
            pagination?: dependency_4.cosmos.base.query.v1beta1.PageRequest;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("group_id" in data && data.group_id != undefined) {
                    this.group_id = data.group_id;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get group_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set group_id(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_4.cosmos.base.query.v1beta1.PageRequest, 2) as dependency_4.cosmos.base.query.v1beta1.PageRequest;
        }
        set pagination(value: dependency_4.cosmos.base.query.v1beta1.PageRequest) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_pagination() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            group_id?: number;
            pagination?: ReturnType<typeof dependency_4.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
        }): QueryGroupPoliciesByGroupRequest {
            const message = new QueryGroupPoliciesByGroupRequest({});
            if (data.group_id != null) {
                message.group_id = data.group_id;
            }
            if (data.pagination != null) {
                message.pagination = dependency_4.cosmos.base.query.v1beta1.PageRequest.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                group_id?: number;
                pagination?: ReturnType<typeof dependency_4.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
            } = {};
            if (this.group_id != null) {
                data.group_id = this.group_id;
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.group_id != 0)
                writer.writeUint64(1, this.group_id);
            if (this.has_pagination)
                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryGroupPoliciesByGroupRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryGroupPoliciesByGroupRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.group_id = reader.readUint64();
                        break;
                    case 2:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_4.cosmos.base.query.v1beta1.PageRequest.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryGroupPoliciesByGroupRequest {
            return QueryGroupPoliciesByGroupRequest.deserialize(bytes);
        }
    }
    export class QueryGroupPoliciesByGroupResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            group_policies?: dependency_3.cosmos.group.v1.GroupPolicyInfo[];
            pagination?: dependency_4.cosmos.base.query.v1beta1.PageResponse;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("group_policies" in data && data.group_policies != undefined) {
                    this.group_policies = data.group_policies;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get group_policies() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_3.cosmos.group.v1.GroupPolicyInfo, 1) as dependency_3.cosmos.group.v1.GroupPolicyInfo[];
        }
        set group_policies(value: dependency_3.cosmos.group.v1.GroupPolicyInfo[]) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_4.cosmos.base.query.v1beta1.PageResponse, 2) as dependency_4.cosmos.base.query.v1beta1.PageResponse;
        }
        set pagination(value: dependency_4.cosmos.base.query.v1beta1.PageResponse) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_pagination() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            group_policies?: ReturnType<typeof dependency_3.cosmos.group.v1.GroupPolicyInfo.prototype.toObject>[];
            pagination?: ReturnType<typeof dependency_4.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
        }): QueryGroupPoliciesByGroupResponse {
            const message = new QueryGroupPoliciesByGroupResponse({});
            if (data.group_policies != null) {
                message.group_policies = data.group_policies.map(item => dependency_3.cosmos.group.v1.GroupPolicyInfo.fromObject(item));
            }
            if (data.pagination != null) {
                message.pagination = dependency_4.cosmos.base.query.v1beta1.PageResponse.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                group_policies?: ReturnType<typeof dependency_3.cosmos.group.v1.GroupPolicyInfo.prototype.toObject>[];
                pagination?: ReturnType<typeof dependency_4.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
            } = {};
            if (this.group_policies != null) {
                data.group_policies = this.group_policies.map((item: dependency_3.cosmos.group.v1.GroupPolicyInfo) => item.toObject());
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.group_policies.length)
                writer.writeRepeatedMessage(1, this.group_policies, (item: dependency_3.cosmos.group.v1.GroupPolicyInfo) => item.serialize(writer));
            if (this.has_pagination)
                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryGroupPoliciesByGroupResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryGroupPoliciesByGroupResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.group_policies, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_3.cosmos.group.v1.GroupPolicyInfo.deserialize(reader), dependency_3.cosmos.group.v1.GroupPolicyInfo));
                        break;
                    case 2:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_4.cosmos.base.query.v1beta1.PageResponse.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryGroupPoliciesByGroupResponse {
            return QueryGroupPoliciesByGroupResponse.deserialize(bytes);
        }
    }
    export class QueryGroupPoliciesByAdminRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            admin?: string;
            pagination?: dependency_4.cosmos.base.query.v1beta1.PageRequest;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("admin" in data && data.admin != undefined) {
                    this.admin = data.admin;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get admin() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set admin(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_4.cosmos.base.query.v1beta1.PageRequest, 2) as dependency_4.cosmos.base.query.v1beta1.PageRequest;
        }
        set pagination(value: dependency_4.cosmos.base.query.v1beta1.PageRequest) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_pagination() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            admin?: string;
            pagination?: ReturnType<typeof dependency_4.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
        }): QueryGroupPoliciesByAdminRequest {
            const message = new QueryGroupPoliciesByAdminRequest({});
            if (data.admin != null) {
                message.admin = data.admin;
            }
            if (data.pagination != null) {
                message.pagination = dependency_4.cosmos.base.query.v1beta1.PageRequest.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                admin?: string;
                pagination?: ReturnType<typeof dependency_4.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
            } = {};
            if (this.admin != null) {
                data.admin = this.admin;
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.admin.length)
                writer.writeString(1, this.admin);
            if (this.has_pagination)
                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryGroupPoliciesByAdminRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryGroupPoliciesByAdminRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.admin = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_4.cosmos.base.query.v1beta1.PageRequest.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryGroupPoliciesByAdminRequest {
            return QueryGroupPoliciesByAdminRequest.deserialize(bytes);
        }
    }
    export class QueryGroupPoliciesByAdminResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            group_policies?: dependency_3.cosmos.group.v1.GroupPolicyInfo[];
            pagination?: dependency_4.cosmos.base.query.v1beta1.PageResponse;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("group_policies" in data && data.group_policies != undefined) {
                    this.group_policies = data.group_policies;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get group_policies() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_3.cosmos.group.v1.GroupPolicyInfo, 1) as dependency_3.cosmos.group.v1.GroupPolicyInfo[];
        }
        set group_policies(value: dependency_3.cosmos.group.v1.GroupPolicyInfo[]) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_4.cosmos.base.query.v1beta1.PageResponse, 2) as dependency_4.cosmos.base.query.v1beta1.PageResponse;
        }
        set pagination(value: dependency_4.cosmos.base.query.v1beta1.PageResponse) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_pagination() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            group_policies?: ReturnType<typeof dependency_3.cosmos.group.v1.GroupPolicyInfo.prototype.toObject>[];
            pagination?: ReturnType<typeof dependency_4.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
        }): QueryGroupPoliciesByAdminResponse {
            const message = new QueryGroupPoliciesByAdminResponse({});
            if (data.group_policies != null) {
                message.group_policies = data.group_policies.map(item => dependency_3.cosmos.group.v1.GroupPolicyInfo.fromObject(item));
            }
            if (data.pagination != null) {
                message.pagination = dependency_4.cosmos.base.query.v1beta1.PageResponse.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                group_policies?: ReturnType<typeof dependency_3.cosmos.group.v1.GroupPolicyInfo.prototype.toObject>[];
                pagination?: ReturnType<typeof dependency_4.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
            } = {};
            if (this.group_policies != null) {
                data.group_policies = this.group_policies.map((item: dependency_3.cosmos.group.v1.GroupPolicyInfo) => item.toObject());
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.group_policies.length)
                writer.writeRepeatedMessage(1, this.group_policies, (item: dependency_3.cosmos.group.v1.GroupPolicyInfo) => item.serialize(writer));
            if (this.has_pagination)
                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryGroupPoliciesByAdminResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryGroupPoliciesByAdminResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.group_policies, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_3.cosmos.group.v1.GroupPolicyInfo.deserialize(reader), dependency_3.cosmos.group.v1.GroupPolicyInfo));
                        break;
                    case 2:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_4.cosmos.base.query.v1beta1.PageResponse.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryGroupPoliciesByAdminResponse {
            return QueryGroupPoliciesByAdminResponse.deserialize(bytes);
        }
    }
    export class QueryProposalRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            proposal_id?: number;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("proposal_id" in data && data.proposal_id != undefined) {
                    this.proposal_id = data.proposal_id;
                }
            }
        }
        get proposal_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set proposal_id(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data: {
            proposal_id?: number;
        }): QueryProposalRequest {
            const message = new QueryProposalRequest({});
            if (data.proposal_id != null) {
                message.proposal_id = data.proposal_id;
            }
            return message;
        }
        toObject() {
            const data: {
                proposal_id?: number;
            } = {};
            if (this.proposal_id != null) {
                data.proposal_id = this.proposal_id;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.proposal_id != 0)
                writer.writeUint64(1, this.proposal_id);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryProposalRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryProposalRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.proposal_id = reader.readUint64();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryProposalRequest {
            return QueryProposalRequest.deserialize(bytes);
        }
    }
    export class QueryProposalResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            proposal?: dependency_3.cosmos.group.v1.Proposal;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("proposal" in data && data.proposal != undefined) {
                    this.proposal = data.proposal;
                }
            }
        }
        get proposal() {
            return pb_1.Message.getWrapperField(this, dependency_3.cosmos.group.v1.Proposal, 1) as dependency_3.cosmos.group.v1.Proposal;
        }
        set proposal(value: dependency_3.cosmos.group.v1.Proposal) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_proposal() {
            return pb_1.Message.getField(this, 1) != null;
        }
        static fromObject(data: {
            proposal?: ReturnType<typeof dependency_3.cosmos.group.v1.Proposal.prototype.toObject>;
        }): QueryProposalResponse {
            const message = new QueryProposalResponse({});
            if (data.proposal != null) {
                message.proposal = dependency_3.cosmos.group.v1.Proposal.fromObject(data.proposal);
            }
            return message;
        }
        toObject() {
            const data: {
                proposal?: ReturnType<typeof dependency_3.cosmos.group.v1.Proposal.prototype.toObject>;
            } = {};
            if (this.proposal != null) {
                data.proposal = this.proposal.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_proposal)
                writer.writeMessage(1, this.proposal, () => this.proposal.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryProposalResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryProposalResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.proposal, () => message.proposal = dependency_3.cosmos.group.v1.Proposal.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryProposalResponse {
            return QueryProposalResponse.deserialize(bytes);
        }
    }
    export class QueryProposalsByGroupPolicyRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            address?: string;
            pagination?: dependency_4.cosmos.base.query.v1beta1.PageRequest;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("address" in data && data.address != undefined) {
                    this.address = data.address;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get address() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set address(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_4.cosmos.base.query.v1beta1.PageRequest, 2) as dependency_4.cosmos.base.query.v1beta1.PageRequest;
        }
        set pagination(value: dependency_4.cosmos.base.query.v1beta1.PageRequest) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_pagination() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            address?: string;
            pagination?: ReturnType<typeof dependency_4.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
        }): QueryProposalsByGroupPolicyRequest {
            const message = new QueryProposalsByGroupPolicyRequest({});
            if (data.address != null) {
                message.address = data.address;
            }
            if (data.pagination != null) {
                message.pagination = dependency_4.cosmos.base.query.v1beta1.PageRequest.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                address?: string;
                pagination?: ReturnType<typeof dependency_4.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
            } = {};
            if (this.address != null) {
                data.address = this.address;
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.address.length)
                writer.writeString(1, this.address);
            if (this.has_pagination)
                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryProposalsByGroupPolicyRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryProposalsByGroupPolicyRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.address = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_4.cosmos.base.query.v1beta1.PageRequest.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryProposalsByGroupPolicyRequest {
            return QueryProposalsByGroupPolicyRequest.deserialize(bytes);
        }
    }
    export class QueryProposalsByGroupPolicyResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            proposals?: dependency_3.cosmos.group.v1.Proposal[];
            pagination?: dependency_4.cosmos.base.query.v1beta1.PageResponse;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("proposals" in data && data.proposals != undefined) {
                    this.proposals = data.proposals;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get proposals() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_3.cosmos.group.v1.Proposal, 1) as dependency_3.cosmos.group.v1.Proposal[];
        }
        set proposals(value: dependency_3.cosmos.group.v1.Proposal[]) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_4.cosmos.base.query.v1beta1.PageResponse, 2) as dependency_4.cosmos.base.query.v1beta1.PageResponse;
        }
        set pagination(value: dependency_4.cosmos.base.query.v1beta1.PageResponse) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_pagination() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            proposals?: ReturnType<typeof dependency_3.cosmos.group.v1.Proposal.prototype.toObject>[];
            pagination?: ReturnType<typeof dependency_4.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
        }): QueryProposalsByGroupPolicyResponse {
            const message = new QueryProposalsByGroupPolicyResponse({});
            if (data.proposals != null) {
                message.proposals = data.proposals.map(item => dependency_3.cosmos.group.v1.Proposal.fromObject(item));
            }
            if (data.pagination != null) {
                message.pagination = dependency_4.cosmos.base.query.v1beta1.PageResponse.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                proposals?: ReturnType<typeof dependency_3.cosmos.group.v1.Proposal.prototype.toObject>[];
                pagination?: ReturnType<typeof dependency_4.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
            } = {};
            if (this.proposals != null) {
                data.proposals = this.proposals.map((item: dependency_3.cosmos.group.v1.Proposal) => item.toObject());
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.proposals.length)
                writer.writeRepeatedMessage(1, this.proposals, (item: dependency_3.cosmos.group.v1.Proposal) => item.serialize(writer));
            if (this.has_pagination)
                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryProposalsByGroupPolicyResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryProposalsByGroupPolicyResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.proposals, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_3.cosmos.group.v1.Proposal.deserialize(reader), dependency_3.cosmos.group.v1.Proposal));
                        break;
                    case 2:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_4.cosmos.base.query.v1beta1.PageResponse.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryProposalsByGroupPolicyResponse {
            return QueryProposalsByGroupPolicyResponse.deserialize(bytes);
        }
    }
    export class QueryVoteByProposalVoterRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            proposal_id?: number;
            voter?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("proposal_id" in data && data.proposal_id != undefined) {
                    this.proposal_id = data.proposal_id;
                }
                if ("voter" in data && data.voter != undefined) {
                    this.voter = data.voter;
                }
            }
        }
        get proposal_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set proposal_id(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get voter() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set voter(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data: {
            proposal_id?: number;
            voter?: string;
        }): QueryVoteByProposalVoterRequest {
            const message = new QueryVoteByProposalVoterRequest({});
            if (data.proposal_id != null) {
                message.proposal_id = data.proposal_id;
            }
            if (data.voter != null) {
                message.voter = data.voter;
            }
            return message;
        }
        toObject() {
            const data: {
                proposal_id?: number;
                voter?: string;
            } = {};
            if (this.proposal_id != null) {
                data.proposal_id = this.proposal_id;
            }
            if (this.voter != null) {
                data.voter = this.voter;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.proposal_id != 0)
                writer.writeUint64(1, this.proposal_id);
            if (this.voter.length)
                writer.writeString(2, this.voter);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryVoteByProposalVoterRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryVoteByProposalVoterRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.proposal_id = reader.readUint64();
                        break;
                    case 2:
                        message.voter = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryVoteByProposalVoterRequest {
            return QueryVoteByProposalVoterRequest.deserialize(bytes);
        }
    }
    export class QueryVoteByProposalVoterResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            vote?: dependency_3.cosmos.group.v1.Vote;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("vote" in data && data.vote != undefined) {
                    this.vote = data.vote;
                }
            }
        }
        get vote() {
            return pb_1.Message.getWrapperField(this, dependency_3.cosmos.group.v1.Vote, 1) as dependency_3.cosmos.group.v1.Vote;
        }
        set vote(value: dependency_3.cosmos.group.v1.Vote) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_vote() {
            return pb_1.Message.getField(this, 1) != null;
        }
        static fromObject(data: {
            vote?: ReturnType<typeof dependency_3.cosmos.group.v1.Vote.prototype.toObject>;
        }): QueryVoteByProposalVoterResponse {
            const message = new QueryVoteByProposalVoterResponse({});
            if (data.vote != null) {
                message.vote = dependency_3.cosmos.group.v1.Vote.fromObject(data.vote);
            }
            return message;
        }
        toObject() {
            const data: {
                vote?: ReturnType<typeof dependency_3.cosmos.group.v1.Vote.prototype.toObject>;
            } = {};
            if (this.vote != null) {
                data.vote = this.vote.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_vote)
                writer.writeMessage(1, this.vote, () => this.vote.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryVoteByProposalVoterResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryVoteByProposalVoterResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.vote, () => message.vote = dependency_3.cosmos.group.v1.Vote.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryVoteByProposalVoterResponse {
            return QueryVoteByProposalVoterResponse.deserialize(bytes);
        }
    }
    export class QueryVotesByProposalRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            proposal_id?: number;
            pagination?: dependency_4.cosmos.base.query.v1beta1.PageRequest;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("proposal_id" in data && data.proposal_id != undefined) {
                    this.proposal_id = data.proposal_id;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get proposal_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set proposal_id(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_4.cosmos.base.query.v1beta1.PageRequest, 2) as dependency_4.cosmos.base.query.v1beta1.PageRequest;
        }
        set pagination(value: dependency_4.cosmos.base.query.v1beta1.PageRequest) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_pagination() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            proposal_id?: number;
            pagination?: ReturnType<typeof dependency_4.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
        }): QueryVotesByProposalRequest {
            const message = new QueryVotesByProposalRequest({});
            if (data.proposal_id != null) {
                message.proposal_id = data.proposal_id;
            }
            if (data.pagination != null) {
                message.pagination = dependency_4.cosmos.base.query.v1beta1.PageRequest.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                proposal_id?: number;
                pagination?: ReturnType<typeof dependency_4.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
            } = {};
            if (this.proposal_id != null) {
                data.proposal_id = this.proposal_id;
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.proposal_id != 0)
                writer.writeUint64(1, this.proposal_id);
            if (this.has_pagination)
                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryVotesByProposalRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryVotesByProposalRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.proposal_id = reader.readUint64();
                        break;
                    case 2:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_4.cosmos.base.query.v1beta1.PageRequest.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryVotesByProposalRequest {
            return QueryVotesByProposalRequest.deserialize(bytes);
        }
    }
    export class QueryVotesByProposalResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            votes?: dependency_3.cosmos.group.v1.Vote[];
            pagination?: dependency_4.cosmos.base.query.v1beta1.PageResponse;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("votes" in data && data.votes != undefined) {
                    this.votes = data.votes;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get votes() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_3.cosmos.group.v1.Vote, 1) as dependency_3.cosmos.group.v1.Vote[];
        }
        set votes(value: dependency_3.cosmos.group.v1.Vote[]) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_4.cosmos.base.query.v1beta1.PageResponse, 2) as dependency_4.cosmos.base.query.v1beta1.PageResponse;
        }
        set pagination(value: dependency_4.cosmos.base.query.v1beta1.PageResponse) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_pagination() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            votes?: ReturnType<typeof dependency_3.cosmos.group.v1.Vote.prototype.toObject>[];
            pagination?: ReturnType<typeof dependency_4.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
        }): QueryVotesByProposalResponse {
            const message = new QueryVotesByProposalResponse({});
            if (data.votes != null) {
                message.votes = data.votes.map(item => dependency_3.cosmos.group.v1.Vote.fromObject(item));
            }
            if (data.pagination != null) {
                message.pagination = dependency_4.cosmos.base.query.v1beta1.PageResponse.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                votes?: ReturnType<typeof dependency_3.cosmos.group.v1.Vote.prototype.toObject>[];
                pagination?: ReturnType<typeof dependency_4.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
            } = {};
            if (this.votes != null) {
                data.votes = this.votes.map((item: dependency_3.cosmos.group.v1.Vote) => item.toObject());
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.votes.length)
                writer.writeRepeatedMessage(1, this.votes, (item: dependency_3.cosmos.group.v1.Vote) => item.serialize(writer));
            if (this.has_pagination)
                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryVotesByProposalResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryVotesByProposalResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.votes, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_3.cosmos.group.v1.Vote.deserialize(reader), dependency_3.cosmos.group.v1.Vote));
                        break;
                    case 2:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_4.cosmos.base.query.v1beta1.PageResponse.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryVotesByProposalResponse {
            return QueryVotesByProposalResponse.deserialize(bytes);
        }
    }
    export class QueryVotesByVoterRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            voter?: string;
            pagination?: dependency_4.cosmos.base.query.v1beta1.PageRequest;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("voter" in data && data.voter != undefined) {
                    this.voter = data.voter;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get voter() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set voter(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_4.cosmos.base.query.v1beta1.PageRequest, 2) as dependency_4.cosmos.base.query.v1beta1.PageRequest;
        }
        set pagination(value: dependency_4.cosmos.base.query.v1beta1.PageRequest) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_pagination() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            voter?: string;
            pagination?: ReturnType<typeof dependency_4.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
        }): QueryVotesByVoterRequest {
            const message = new QueryVotesByVoterRequest({});
            if (data.voter != null) {
                message.voter = data.voter;
            }
            if (data.pagination != null) {
                message.pagination = dependency_4.cosmos.base.query.v1beta1.PageRequest.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                voter?: string;
                pagination?: ReturnType<typeof dependency_4.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
            } = {};
            if (this.voter != null) {
                data.voter = this.voter;
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.voter.length)
                writer.writeString(1, this.voter);
            if (this.has_pagination)
                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryVotesByVoterRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryVotesByVoterRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.voter = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_4.cosmos.base.query.v1beta1.PageRequest.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryVotesByVoterRequest {
            return QueryVotesByVoterRequest.deserialize(bytes);
        }
    }
    export class QueryVotesByVoterResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            votes?: dependency_3.cosmos.group.v1.Vote[];
            pagination?: dependency_4.cosmos.base.query.v1beta1.PageResponse;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("votes" in data && data.votes != undefined) {
                    this.votes = data.votes;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get votes() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_3.cosmos.group.v1.Vote, 1) as dependency_3.cosmos.group.v1.Vote[];
        }
        set votes(value: dependency_3.cosmos.group.v1.Vote[]) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_4.cosmos.base.query.v1beta1.PageResponse, 2) as dependency_4.cosmos.base.query.v1beta1.PageResponse;
        }
        set pagination(value: dependency_4.cosmos.base.query.v1beta1.PageResponse) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_pagination() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            votes?: ReturnType<typeof dependency_3.cosmos.group.v1.Vote.prototype.toObject>[];
            pagination?: ReturnType<typeof dependency_4.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
        }): QueryVotesByVoterResponse {
            const message = new QueryVotesByVoterResponse({});
            if (data.votes != null) {
                message.votes = data.votes.map(item => dependency_3.cosmos.group.v1.Vote.fromObject(item));
            }
            if (data.pagination != null) {
                message.pagination = dependency_4.cosmos.base.query.v1beta1.PageResponse.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                votes?: ReturnType<typeof dependency_3.cosmos.group.v1.Vote.prototype.toObject>[];
                pagination?: ReturnType<typeof dependency_4.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
            } = {};
            if (this.votes != null) {
                data.votes = this.votes.map((item: dependency_3.cosmos.group.v1.Vote) => item.toObject());
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.votes.length)
                writer.writeRepeatedMessage(1, this.votes, (item: dependency_3.cosmos.group.v1.Vote) => item.serialize(writer));
            if (this.has_pagination)
                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryVotesByVoterResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryVotesByVoterResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.votes, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_3.cosmos.group.v1.Vote.deserialize(reader), dependency_3.cosmos.group.v1.Vote));
                        break;
                    case 2:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_4.cosmos.base.query.v1beta1.PageResponse.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryVotesByVoterResponse {
            return QueryVotesByVoterResponse.deserialize(bytes);
        }
    }
    export class QueryGroupsByMemberRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            address?: string;
            pagination?: dependency_4.cosmos.base.query.v1beta1.PageRequest;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("address" in data && data.address != undefined) {
                    this.address = data.address;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get address() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set address(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_4.cosmos.base.query.v1beta1.PageRequest, 2) as dependency_4.cosmos.base.query.v1beta1.PageRequest;
        }
        set pagination(value: dependency_4.cosmos.base.query.v1beta1.PageRequest) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_pagination() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            address?: string;
            pagination?: ReturnType<typeof dependency_4.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
        }): QueryGroupsByMemberRequest {
            const message = new QueryGroupsByMemberRequest({});
            if (data.address != null) {
                message.address = data.address;
            }
            if (data.pagination != null) {
                message.pagination = dependency_4.cosmos.base.query.v1beta1.PageRequest.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                address?: string;
                pagination?: ReturnType<typeof dependency_4.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
            } = {};
            if (this.address != null) {
                data.address = this.address;
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.address.length)
                writer.writeString(1, this.address);
            if (this.has_pagination)
                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryGroupsByMemberRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryGroupsByMemberRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.address = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_4.cosmos.base.query.v1beta1.PageRequest.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryGroupsByMemberRequest {
            return QueryGroupsByMemberRequest.deserialize(bytes);
        }
    }
    export class QueryGroupsByMemberResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            groups?: dependency_3.cosmos.group.v1.GroupInfo[];
            pagination?: dependency_4.cosmos.base.query.v1beta1.PageResponse;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("groups" in data && data.groups != undefined) {
                    this.groups = data.groups;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get groups() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_3.cosmos.group.v1.GroupInfo, 1) as dependency_3.cosmos.group.v1.GroupInfo[];
        }
        set groups(value: dependency_3.cosmos.group.v1.GroupInfo[]) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_4.cosmos.base.query.v1beta1.PageResponse, 2) as dependency_4.cosmos.base.query.v1beta1.PageResponse;
        }
        set pagination(value: dependency_4.cosmos.base.query.v1beta1.PageResponse) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_pagination() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            groups?: ReturnType<typeof dependency_3.cosmos.group.v1.GroupInfo.prototype.toObject>[];
            pagination?: ReturnType<typeof dependency_4.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
        }): QueryGroupsByMemberResponse {
            const message = new QueryGroupsByMemberResponse({});
            if (data.groups != null) {
                message.groups = data.groups.map(item => dependency_3.cosmos.group.v1.GroupInfo.fromObject(item));
            }
            if (data.pagination != null) {
                message.pagination = dependency_4.cosmos.base.query.v1beta1.PageResponse.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                groups?: ReturnType<typeof dependency_3.cosmos.group.v1.GroupInfo.prototype.toObject>[];
                pagination?: ReturnType<typeof dependency_4.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
            } = {};
            if (this.groups != null) {
                data.groups = this.groups.map((item: dependency_3.cosmos.group.v1.GroupInfo) => item.toObject());
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.groups.length)
                writer.writeRepeatedMessage(1, this.groups, (item: dependency_3.cosmos.group.v1.GroupInfo) => item.serialize(writer));
            if (this.has_pagination)
                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryGroupsByMemberResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryGroupsByMemberResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.groups, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_3.cosmos.group.v1.GroupInfo.deserialize(reader), dependency_3.cosmos.group.v1.GroupInfo));
                        break;
                    case 2:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_4.cosmos.base.query.v1beta1.PageResponse.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryGroupsByMemberResponse {
            return QueryGroupsByMemberResponse.deserialize(bytes);
        }
    }
    export class QueryTallyResultRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            proposal_id?: number;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("proposal_id" in data && data.proposal_id != undefined) {
                    this.proposal_id = data.proposal_id;
                }
            }
        }
        get proposal_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set proposal_id(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data: {
            proposal_id?: number;
        }): QueryTallyResultRequest {
            const message = new QueryTallyResultRequest({});
            if (data.proposal_id != null) {
                message.proposal_id = data.proposal_id;
            }
            return message;
        }
        toObject() {
            const data: {
                proposal_id?: number;
            } = {};
            if (this.proposal_id != null) {
                data.proposal_id = this.proposal_id;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.proposal_id != 0)
                writer.writeUint64(1, this.proposal_id);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryTallyResultRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryTallyResultRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.proposal_id = reader.readUint64();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryTallyResultRequest {
            return QueryTallyResultRequest.deserialize(bytes);
        }
    }
    export class QueryTallyResultResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            tally?: dependency_3.cosmos.group.v1.TallyResult;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("tally" in data && data.tally != undefined) {
                    this.tally = data.tally;
                }
            }
        }
        get tally() {
            return pb_1.Message.getWrapperField(this, dependency_3.cosmos.group.v1.TallyResult, 1) as dependency_3.cosmos.group.v1.TallyResult;
        }
        set tally(value: dependency_3.cosmos.group.v1.TallyResult) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_tally() {
            return pb_1.Message.getField(this, 1) != null;
        }
        static fromObject(data: {
            tally?: ReturnType<typeof dependency_3.cosmos.group.v1.TallyResult.prototype.toObject>;
        }): QueryTallyResultResponse {
            const message = new QueryTallyResultResponse({});
            if (data.tally != null) {
                message.tally = dependency_3.cosmos.group.v1.TallyResult.fromObject(data.tally);
            }
            return message;
        }
        toObject() {
            const data: {
                tally?: ReturnType<typeof dependency_3.cosmos.group.v1.TallyResult.prototype.toObject>;
            } = {};
            if (this.tally != null) {
                data.tally = this.tally.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_tally)
                writer.writeMessage(1, this.tally, () => this.tally.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryTallyResultResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryTallyResultResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.tally, () => message.tally = dependency_3.cosmos.group.v1.TallyResult.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryTallyResultResponse {
            return QueryTallyResultResponse.deserialize(bytes);
        }
    }
    export class QueryGroupsRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            pagination?: dependency_4.cosmos.base.query.v1beta1.PageRequest;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_4.cosmos.base.query.v1beta1.PageRequest, 2) as dependency_4.cosmos.base.query.v1beta1.PageRequest;
        }
        set pagination(value: dependency_4.cosmos.base.query.v1beta1.PageRequest) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_pagination() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            pagination?: ReturnType<typeof dependency_4.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
        }): QueryGroupsRequest {
            const message = new QueryGroupsRequest({});
            if (data.pagination != null) {
                message.pagination = dependency_4.cosmos.base.query.v1beta1.PageRequest.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                pagination?: ReturnType<typeof dependency_4.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
            } = {};
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_pagination)
                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryGroupsRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryGroupsRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 2:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_4.cosmos.base.query.v1beta1.PageRequest.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryGroupsRequest {
            return QueryGroupsRequest.deserialize(bytes);
        }
    }
    export class QueryGroupsResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            groups?: dependency_3.cosmos.group.v1.GroupInfo[];
            pagination?: dependency_4.cosmos.base.query.v1beta1.PageResponse;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("groups" in data && data.groups != undefined) {
                    this.groups = data.groups;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get groups() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_3.cosmos.group.v1.GroupInfo, 1) as dependency_3.cosmos.group.v1.GroupInfo[];
        }
        set groups(value: dependency_3.cosmos.group.v1.GroupInfo[]) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_4.cosmos.base.query.v1beta1.PageResponse, 2) as dependency_4.cosmos.base.query.v1beta1.PageResponse;
        }
        set pagination(value: dependency_4.cosmos.base.query.v1beta1.PageResponse) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_pagination() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            groups?: ReturnType<typeof dependency_3.cosmos.group.v1.GroupInfo.prototype.toObject>[];
            pagination?: ReturnType<typeof dependency_4.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
        }): QueryGroupsResponse {
            const message = new QueryGroupsResponse({});
            if (data.groups != null) {
                message.groups = data.groups.map(item => dependency_3.cosmos.group.v1.GroupInfo.fromObject(item));
            }
            if (data.pagination != null) {
                message.pagination = dependency_4.cosmos.base.query.v1beta1.PageResponse.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                groups?: ReturnType<typeof dependency_3.cosmos.group.v1.GroupInfo.prototype.toObject>[];
                pagination?: ReturnType<typeof dependency_4.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
            } = {};
            if (this.groups != null) {
                data.groups = this.groups.map((item: dependency_3.cosmos.group.v1.GroupInfo) => item.toObject());
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.groups.length)
                writer.writeRepeatedMessage(1, this.groups, (item: dependency_3.cosmos.group.v1.GroupInfo) => item.serialize(writer));
            if (this.has_pagination)
                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryGroupsResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryGroupsResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.groups, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_3.cosmos.group.v1.GroupInfo.deserialize(reader), dependency_3.cosmos.group.v1.GroupInfo));
                        break;
                    case 2:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_4.cosmos.base.query.v1beta1.PageResponse.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryGroupsResponse {
            return QueryGroupsResponse.deserialize(bytes);
        }
    }
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    interface GrpcStreamServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
        (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
    }
    interface GrpWritableServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
    }
    interface GrpcChunkServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
        (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
    }
    interface GrpcPromiseServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): Promise<R>;
        (message: P, options?: grpc_1.CallOptions): Promise<R>;
    }
    export abstract class UnimplementedQueryService {
        static definition = {
            GroupInfo: {
                path: "/cosmos.group.v1.Query/GroupInfo",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: QueryGroupInfoRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => QueryGroupInfoRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: QueryGroupInfoResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => QueryGroupInfoResponse.deserialize(new Uint8Array(bytes))
            },
            GroupPolicyInfo: {
                path: "/cosmos.group.v1.Query/GroupPolicyInfo",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: QueryGroupPolicyInfoRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => QueryGroupPolicyInfoRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: QueryGroupPolicyInfoResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => QueryGroupPolicyInfoResponse.deserialize(new Uint8Array(bytes))
            },
            GroupMembers: {
                path: "/cosmos.group.v1.Query/GroupMembers",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: QueryGroupMembersRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => QueryGroupMembersRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: QueryGroupMembersResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => QueryGroupMembersResponse.deserialize(new Uint8Array(bytes))
            },
            GroupsByAdmin: {
                path: "/cosmos.group.v1.Query/GroupsByAdmin",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: QueryGroupsByAdminRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => QueryGroupsByAdminRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: QueryGroupsByAdminResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => QueryGroupsByAdminResponse.deserialize(new Uint8Array(bytes))
            },
            GroupPoliciesByGroup: {
                path: "/cosmos.group.v1.Query/GroupPoliciesByGroup",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: QueryGroupPoliciesByGroupRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => QueryGroupPoliciesByGroupRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: QueryGroupPoliciesByGroupResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => QueryGroupPoliciesByGroupResponse.deserialize(new Uint8Array(bytes))
            },
            GroupPoliciesByAdmin: {
                path: "/cosmos.group.v1.Query/GroupPoliciesByAdmin",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: QueryGroupPoliciesByAdminRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => QueryGroupPoliciesByAdminRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: QueryGroupPoliciesByAdminResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => QueryGroupPoliciesByAdminResponse.deserialize(new Uint8Array(bytes))
            },
            Proposal: {
                path: "/cosmos.group.v1.Query/Proposal",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: QueryProposalRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => QueryProposalRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: QueryProposalResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => QueryProposalResponse.deserialize(new Uint8Array(bytes))
            },
            ProposalsByGroupPolicy: {
                path: "/cosmos.group.v1.Query/ProposalsByGroupPolicy",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: QueryProposalsByGroupPolicyRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => QueryProposalsByGroupPolicyRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: QueryProposalsByGroupPolicyResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => QueryProposalsByGroupPolicyResponse.deserialize(new Uint8Array(bytes))
            },
            VoteByProposalVoter: {
                path: "/cosmos.group.v1.Query/VoteByProposalVoter",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: QueryVoteByProposalVoterRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => QueryVoteByProposalVoterRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: QueryVoteByProposalVoterResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => QueryVoteByProposalVoterResponse.deserialize(new Uint8Array(bytes))
            },
            VotesByProposal: {
                path: "/cosmos.group.v1.Query/VotesByProposal",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: QueryVotesByProposalRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => QueryVotesByProposalRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: QueryVotesByProposalResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => QueryVotesByProposalResponse.deserialize(new Uint8Array(bytes))
            },
            VotesByVoter: {
                path: "/cosmos.group.v1.Query/VotesByVoter",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: QueryVotesByVoterRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => QueryVotesByVoterRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: QueryVotesByVoterResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => QueryVotesByVoterResponse.deserialize(new Uint8Array(bytes))
            },
            GroupsByMember: {
                path: "/cosmos.group.v1.Query/GroupsByMember",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: QueryGroupsByMemberRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => QueryGroupsByMemberRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: QueryGroupsByMemberResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => QueryGroupsByMemberResponse.deserialize(new Uint8Array(bytes))
            },
            TallyResult: {
                path: "/cosmos.group.v1.Query/TallyResult",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: QueryTallyResultRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => QueryTallyResultRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: QueryTallyResultResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => QueryTallyResultResponse.deserialize(new Uint8Array(bytes))
            },
            Groups: {
                path: "/cosmos.group.v1.Query/Groups",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: QueryGroupsRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => QueryGroupsRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: QueryGroupsResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => QueryGroupsResponse.deserialize(new Uint8Array(bytes))
            }
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract GroupInfo(call: grpc_1.ServerUnaryCall<QueryGroupInfoRequest, QueryGroupInfoResponse>, callback: grpc_1.sendUnaryData<QueryGroupInfoResponse>): void;
        abstract GroupPolicyInfo(call: grpc_1.ServerUnaryCall<QueryGroupPolicyInfoRequest, QueryGroupPolicyInfoResponse>, callback: grpc_1.sendUnaryData<QueryGroupPolicyInfoResponse>): void;
        abstract GroupMembers(call: grpc_1.ServerUnaryCall<QueryGroupMembersRequest, QueryGroupMembersResponse>, callback: grpc_1.sendUnaryData<QueryGroupMembersResponse>): void;
        abstract GroupsByAdmin(call: grpc_1.ServerUnaryCall<QueryGroupsByAdminRequest, QueryGroupsByAdminResponse>, callback: grpc_1.sendUnaryData<QueryGroupsByAdminResponse>): void;
        abstract GroupPoliciesByGroup(call: grpc_1.ServerUnaryCall<QueryGroupPoliciesByGroupRequest, QueryGroupPoliciesByGroupResponse>, callback: grpc_1.sendUnaryData<QueryGroupPoliciesByGroupResponse>): void;
        abstract GroupPoliciesByAdmin(call: grpc_1.ServerUnaryCall<QueryGroupPoliciesByAdminRequest, QueryGroupPoliciesByAdminResponse>, callback: grpc_1.sendUnaryData<QueryGroupPoliciesByAdminResponse>): void;
        abstract Proposal(call: grpc_1.ServerUnaryCall<QueryProposalRequest, QueryProposalResponse>, callback: grpc_1.sendUnaryData<QueryProposalResponse>): void;
        abstract ProposalsByGroupPolicy(call: grpc_1.ServerUnaryCall<QueryProposalsByGroupPolicyRequest, QueryProposalsByGroupPolicyResponse>, callback: grpc_1.sendUnaryData<QueryProposalsByGroupPolicyResponse>): void;
        abstract VoteByProposalVoter(call: grpc_1.ServerUnaryCall<QueryVoteByProposalVoterRequest, QueryVoteByProposalVoterResponse>, callback: grpc_1.sendUnaryData<QueryVoteByProposalVoterResponse>): void;
        abstract VotesByProposal(call: grpc_1.ServerUnaryCall<QueryVotesByProposalRequest, QueryVotesByProposalResponse>, callback: grpc_1.sendUnaryData<QueryVotesByProposalResponse>): void;
        abstract VotesByVoter(call: grpc_1.ServerUnaryCall<QueryVotesByVoterRequest, QueryVotesByVoterResponse>, callback: grpc_1.sendUnaryData<QueryVotesByVoterResponse>): void;
        abstract GroupsByMember(call: grpc_1.ServerUnaryCall<QueryGroupsByMemberRequest, QueryGroupsByMemberResponse>, callback: grpc_1.sendUnaryData<QueryGroupsByMemberResponse>): void;
        abstract TallyResult(call: grpc_1.ServerUnaryCall<QueryTallyResultRequest, QueryTallyResultResponse>, callback: grpc_1.sendUnaryData<QueryTallyResultResponse>): void;
        abstract Groups(call: grpc_1.ServerUnaryCall<QueryGroupsRequest, QueryGroupsResponse>, callback: grpc_1.sendUnaryData<QueryGroupsResponse>): void;
    }
    export class QueryClient extends grpc_1.makeGenericClientConstructor(UnimplementedQueryService.definition, "Query", {}) {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>) {
            super(address, credentials, options);
        }
        GroupInfo: GrpcUnaryServiceInterface<QueryGroupInfoRequest, QueryGroupInfoResponse> = (message: QueryGroupInfoRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<QueryGroupInfoResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<QueryGroupInfoResponse>, callback?: grpc_1.requestCallback<QueryGroupInfoResponse>): grpc_1.ClientUnaryCall => {
            return super.GroupInfo(message, metadata, options, callback);
        };
        GroupPolicyInfo: GrpcUnaryServiceInterface<QueryGroupPolicyInfoRequest, QueryGroupPolicyInfoResponse> = (message: QueryGroupPolicyInfoRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<QueryGroupPolicyInfoResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<QueryGroupPolicyInfoResponse>, callback?: grpc_1.requestCallback<QueryGroupPolicyInfoResponse>): grpc_1.ClientUnaryCall => {
            return super.GroupPolicyInfo(message, metadata, options, callback);
        };
        GroupMembers: GrpcUnaryServiceInterface<QueryGroupMembersRequest, QueryGroupMembersResponse> = (message: QueryGroupMembersRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<QueryGroupMembersResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<QueryGroupMembersResponse>, callback?: grpc_1.requestCallback<QueryGroupMembersResponse>): grpc_1.ClientUnaryCall => {
            return super.GroupMembers(message, metadata, options, callback);
        };
        GroupsByAdmin: GrpcUnaryServiceInterface<QueryGroupsByAdminRequest, QueryGroupsByAdminResponse> = (message: QueryGroupsByAdminRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<QueryGroupsByAdminResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<QueryGroupsByAdminResponse>, callback?: grpc_1.requestCallback<QueryGroupsByAdminResponse>): grpc_1.ClientUnaryCall => {
            return super.GroupsByAdmin(message, metadata, options, callback);
        };
        GroupPoliciesByGroup: GrpcUnaryServiceInterface<QueryGroupPoliciesByGroupRequest, QueryGroupPoliciesByGroupResponse> = (message: QueryGroupPoliciesByGroupRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<QueryGroupPoliciesByGroupResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<QueryGroupPoliciesByGroupResponse>, callback?: grpc_1.requestCallback<QueryGroupPoliciesByGroupResponse>): grpc_1.ClientUnaryCall => {
            return super.GroupPoliciesByGroup(message, metadata, options, callback);
        };
        GroupPoliciesByAdmin: GrpcUnaryServiceInterface<QueryGroupPoliciesByAdminRequest, QueryGroupPoliciesByAdminResponse> = (message: QueryGroupPoliciesByAdminRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<QueryGroupPoliciesByAdminResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<QueryGroupPoliciesByAdminResponse>, callback?: grpc_1.requestCallback<QueryGroupPoliciesByAdminResponse>): grpc_1.ClientUnaryCall => {
            return super.GroupPoliciesByAdmin(message, metadata, options, callback);
        };
        Proposal: GrpcUnaryServiceInterface<QueryProposalRequest, QueryProposalResponse> = (message: QueryProposalRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<QueryProposalResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<QueryProposalResponse>, callback?: grpc_1.requestCallback<QueryProposalResponse>): grpc_1.ClientUnaryCall => {
            return super.Proposal(message, metadata, options, callback);
        };
        ProposalsByGroupPolicy: GrpcUnaryServiceInterface<QueryProposalsByGroupPolicyRequest, QueryProposalsByGroupPolicyResponse> = (message: QueryProposalsByGroupPolicyRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<QueryProposalsByGroupPolicyResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<QueryProposalsByGroupPolicyResponse>, callback?: grpc_1.requestCallback<QueryProposalsByGroupPolicyResponse>): grpc_1.ClientUnaryCall => {
            return super.ProposalsByGroupPolicy(message, metadata, options, callback);
        };
        VoteByProposalVoter: GrpcUnaryServiceInterface<QueryVoteByProposalVoterRequest, QueryVoteByProposalVoterResponse> = (message: QueryVoteByProposalVoterRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<QueryVoteByProposalVoterResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<QueryVoteByProposalVoterResponse>, callback?: grpc_1.requestCallback<QueryVoteByProposalVoterResponse>): grpc_1.ClientUnaryCall => {
            return super.VoteByProposalVoter(message, metadata, options, callback);
        };
        VotesByProposal: GrpcUnaryServiceInterface<QueryVotesByProposalRequest, QueryVotesByProposalResponse> = (message: QueryVotesByProposalRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<QueryVotesByProposalResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<QueryVotesByProposalResponse>, callback?: grpc_1.requestCallback<QueryVotesByProposalResponse>): grpc_1.ClientUnaryCall => {
            return super.VotesByProposal(message, metadata, options, callback);
        };
        VotesByVoter: GrpcUnaryServiceInterface<QueryVotesByVoterRequest, QueryVotesByVoterResponse> = (message: QueryVotesByVoterRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<QueryVotesByVoterResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<QueryVotesByVoterResponse>, callback?: grpc_1.requestCallback<QueryVotesByVoterResponse>): grpc_1.ClientUnaryCall => {
            return super.VotesByVoter(message, metadata, options, callback);
        };
        GroupsByMember: GrpcUnaryServiceInterface<QueryGroupsByMemberRequest, QueryGroupsByMemberResponse> = (message: QueryGroupsByMemberRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<QueryGroupsByMemberResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<QueryGroupsByMemberResponse>, callback?: grpc_1.requestCallback<QueryGroupsByMemberResponse>): grpc_1.ClientUnaryCall => {
            return super.GroupsByMember(message, metadata, options, callback);
        };
        TallyResult: GrpcUnaryServiceInterface<QueryTallyResultRequest, QueryTallyResultResponse> = (message: QueryTallyResultRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<QueryTallyResultResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<QueryTallyResultResponse>, callback?: grpc_1.requestCallback<QueryTallyResultResponse>): grpc_1.ClientUnaryCall => {
            return super.TallyResult(message, metadata, options, callback);
        };
        Groups: GrpcUnaryServiceInterface<QueryGroupsRequest, QueryGroupsResponse> = (message: QueryGroupsRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<QueryGroupsResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<QueryGroupsResponse>, callback?: grpc_1.requestCallback<QueryGroupsResponse>): grpc_1.ClientUnaryCall => {
            return super.Groups(message, metadata, options, callback);
        };
    }
}
