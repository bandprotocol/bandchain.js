/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: cosmos/tx/config/v1/config.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../../../app/v1alpha1/module";
import * as pb_1 from "google-protobuf";
export namespace cosmos.tx.config.v1 {
    export class Config extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            skip_ante_handler?: boolean;
            skip_post_handler?: boolean;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("skip_ante_handler" in data && data.skip_ante_handler != undefined) {
                    this.skip_ante_handler = data.skip_ante_handler;
                }
                if ("skip_post_handler" in data && data.skip_post_handler != undefined) {
                    this.skip_post_handler = data.skip_post_handler;
                }
            }
        }
        get skip_ante_handler() {
            return pb_1.Message.getFieldWithDefault(this, 1, false) as boolean;
        }
        set skip_ante_handler(value: boolean) {
            pb_1.Message.setField(this, 1, value);
        }
        get skip_post_handler() {
            return pb_1.Message.getFieldWithDefault(this, 2, false) as boolean;
        }
        set skip_post_handler(value: boolean) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data: {
            skip_ante_handler?: boolean;
            skip_post_handler?: boolean;
        }): Config {
            const message = new Config({});
            if (data.skip_ante_handler != null) {
                message.skip_ante_handler = data.skip_ante_handler;
            }
            if (data.skip_post_handler != null) {
                message.skip_post_handler = data.skip_post_handler;
            }
            return message;
        }
        toObject() {
            const data: {
                skip_ante_handler?: boolean;
                skip_post_handler?: boolean;
            } = {};
            if (this.skip_ante_handler != null) {
                data.skip_ante_handler = this.skip_ante_handler;
            }
            if (this.skip_post_handler != null) {
                data.skip_post_handler = this.skip_post_handler;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.skip_ante_handler != false)
                writer.writeBool(1, this.skip_ante_handler);
            if (this.skip_post_handler != false)
                writer.writeBool(2, this.skip_post_handler);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Config {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Config();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.skip_ante_handler = reader.readBool();
                        break;
                    case 2:
                        message.skip_post_handler = reader.readBool();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): Config {
            return Config.deserialize(bytes);
        }
    }
}
