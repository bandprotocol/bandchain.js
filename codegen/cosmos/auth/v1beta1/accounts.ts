/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: cosmos/auth/v1beta1/accounts.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../../../google/protobuf/any";
import * as dependency_2 from "./auth";
import * as pb_1 from "google-protobuf";
export namespace cosmos.auth.v1beta1 {
    export class QueryLegacyAccount extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {}) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data: {}): QueryLegacyAccount {
            const message = new QueryLegacyAccount({});
            return message;
        }
        toObject() {
            const data: {} = {};
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryLegacyAccount {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryLegacyAccount();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryLegacyAccount {
            return QueryLegacyAccount.deserialize(bytes);
        }
    }
    export class QueryLegacyAccountResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            account?: dependency_1.google.protobuf.Any;
            base?: dependency_2.cosmos.auth.v1beta1.BaseAccount;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("account" in data && data.account != undefined) {
                    this.account = data.account;
                }
                if ("base" in data && data.base != undefined) {
                    this.base = data.base;
                }
            }
        }
        get account() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Any, 1) as dependency_1.google.protobuf.Any;
        }
        set account(value: dependency_1.google.protobuf.Any) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_account() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get base() {
            return pb_1.Message.getWrapperField(this, dependency_2.cosmos.auth.v1beta1.BaseAccount, 2) as dependency_2.cosmos.auth.v1beta1.BaseAccount;
        }
        set base(value: dependency_2.cosmos.auth.v1beta1.BaseAccount) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_base() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            account?: ReturnType<typeof dependency_1.google.protobuf.Any.prototype.toObject>;
            base?: ReturnType<typeof dependency_2.cosmos.auth.v1beta1.BaseAccount.prototype.toObject>;
        }): QueryLegacyAccountResponse {
            const message = new QueryLegacyAccountResponse({});
            if (data.account != null) {
                message.account = dependency_1.google.protobuf.Any.fromObject(data.account);
            }
            if (data.base != null) {
                message.base = dependency_2.cosmos.auth.v1beta1.BaseAccount.fromObject(data.base);
            }
            return message;
        }
        toObject() {
            const data: {
                account?: ReturnType<typeof dependency_1.google.protobuf.Any.prototype.toObject>;
                base?: ReturnType<typeof dependency_2.cosmos.auth.v1beta1.BaseAccount.prototype.toObject>;
            } = {};
            if (this.account != null) {
                data.account = this.account.toObject();
            }
            if (this.base != null) {
                data.base = this.base.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_account)
                writer.writeMessage(1, this.account, () => this.account.serialize(writer));
            if (this.has_base)
                writer.writeMessage(2, this.base, () => this.base.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryLegacyAccountResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryLegacyAccountResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.account, () => message.account = dependency_1.google.protobuf.Any.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.base, () => message.base = dependency_2.cosmos.auth.v1beta1.BaseAccount.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryLegacyAccountResponse {
            return QueryLegacyAccountResponse.deserialize(bytes);
        }
    }
}
