// source: cosmos/auth/v1beta1/auth.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf')
var goog = jspb
var global = Function('return this')()

var amino_amino_pb = require('../../../amino/amino_pb.js')
goog.object.extend(proto, amino_amino_pb)
var cosmos_proto_cosmos_pb = require('../../../cosmos_proto/cosmos_pb.js')
goog.object.extend(proto, cosmos_proto_cosmos_pb)
var gogoproto_gogo_pb = require('../../../gogoproto/gogo_pb.js')
goog.object.extend(proto, gogoproto_gogo_pb)
var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js')
goog.object.extend(proto, google_protobuf_any_pb)
goog.exportSymbol('proto.cosmos.auth.v1beta1.BaseAccount', null, global)
goog.exportSymbol('proto.cosmos.auth.v1beta1.ModuleAccount', null, global)
goog.exportSymbol('proto.cosmos.auth.v1beta1.ModuleCredential', null, global)
goog.exportSymbol('proto.cosmos.auth.v1beta1.Params', null, global)
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.auth.v1beta1.BaseAccount = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.cosmos.auth.v1beta1.BaseAccount, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.auth.v1beta1.BaseAccount.displayName =
    'proto.cosmos.auth.v1beta1.BaseAccount'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.auth.v1beta1.ModuleAccount = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.cosmos.auth.v1beta1.ModuleAccount.repeatedFields_,
    null,
  )
}
goog.inherits(proto.cosmos.auth.v1beta1.ModuleAccount, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.auth.v1beta1.ModuleAccount.displayName =
    'proto.cosmos.auth.v1beta1.ModuleAccount'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.auth.v1beta1.ModuleCredential = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.cosmos.auth.v1beta1.ModuleCredential.repeatedFields_,
    null,
  )
}
goog.inherits(proto.cosmos.auth.v1beta1.ModuleCredential, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.auth.v1beta1.ModuleCredential.displayName =
    'proto.cosmos.auth.v1beta1.ModuleCredential'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.auth.v1beta1.Params = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.cosmos.auth.v1beta1.Params, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.auth.v1beta1.Params.displayName =
    'proto.cosmos.auth.v1beta1.Params'
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.cosmos.auth.v1beta1.BaseAccount.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.cosmos.auth.v1beta1.BaseAccount.toObject(
      opt_includeInstance,
      this,
    )
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.cosmos.auth.v1beta1.BaseAccount} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.cosmos.auth.v1beta1.BaseAccount.toObject = function (
    includeInstance,
    msg,
  ) {
    var f,
      obj = {
        address: jspb.Message.getFieldWithDefault(msg, 1, ''),
        pubKey:
          (f = msg.getPubKey()) &&
          google_protobuf_any_pb.Any.toObject(includeInstance, f),
        accountNumber: jspb.Message.getFieldWithDefault(msg, 3, 0),
        sequence: jspb.Message.getFieldWithDefault(msg, 4, 0),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.auth.v1beta1.BaseAccount}
 */
proto.cosmos.auth.v1beta1.BaseAccount.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.cosmos.auth.v1beta1.BaseAccount()
  return proto.cosmos.auth.v1beta1.BaseAccount.deserializeBinaryFromReader(
    msg,
    reader,
  )
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.auth.v1beta1.BaseAccount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.auth.v1beta1.BaseAccount}
 */
proto.cosmos.auth.v1beta1.BaseAccount.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setAddress(value)
        break
      case 2:
        var value = new google_protobuf_any_pb.Any()
        reader.readMessage(
          value,
          google_protobuf_any_pb.Any.deserializeBinaryFromReader,
        )
        msg.setPubKey(value)
        break
      case 3:
        var value = /** @type {number} */ (reader.readUint64())
        msg.setAccountNumber(value)
        break
      case 4:
        var value = /** @type {number} */ (reader.readUint64())
        msg.setSequence(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.auth.v1beta1.BaseAccount.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.cosmos.auth.v1beta1.BaseAccount.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.auth.v1beta1.BaseAccount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.auth.v1beta1.BaseAccount.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined
  f = message.getAddress()
  if (f.length > 0) {
    writer.writeString(1, f)
  }
  f = message.getPubKey()
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter,
    )
  }
  f = message.getAccountNumber()
  if (f !== 0) {
    writer.writeUint64(3, f)
  }
  f = message.getSequence()
  if (f !== 0) {
    writer.writeUint64(4, f)
  }
}

/**
 * optional string address = 1;
 * @return {string}
 */
proto.cosmos.auth.v1beta1.BaseAccount.prototype.getAddress = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
}

/**
 * @param {string} value
 * @return {!proto.cosmos.auth.v1beta1.BaseAccount} returns this
 */
proto.cosmos.auth.v1beta1.BaseAccount.prototype.setAddress = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value)
}

/**
 * optional google.protobuf.Any pub_key = 2;
 * @return {?proto.google.protobuf.Any}
 */
proto.cosmos.auth.v1beta1.BaseAccount.prototype.getPubKey = function () {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 2)
  )
}

/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.cosmos.auth.v1beta1.BaseAccount} returns this
 */
proto.cosmos.auth.v1beta1.BaseAccount.prototype.setPubKey = function (value) {
  return jspb.Message.setWrapperField(this, 2, value)
}

/**
 * Clears the message field making it undefined.
 * @return {!proto.cosmos.auth.v1beta1.BaseAccount} returns this
 */
proto.cosmos.auth.v1beta1.BaseAccount.prototype.clearPubKey = function () {
  return this.setPubKey(undefined)
}

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cosmos.auth.v1beta1.BaseAccount.prototype.hasPubKey = function () {
  return jspb.Message.getField(this, 2) != null
}

/**
 * optional uint64 account_number = 3;
 * @return {number}
 */
proto.cosmos.auth.v1beta1.BaseAccount.prototype.getAccountNumber = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0))
}

/**
 * @param {number} value
 * @return {!proto.cosmos.auth.v1beta1.BaseAccount} returns this
 */
proto.cosmos.auth.v1beta1.BaseAccount.prototype.setAccountNumber = function (
  value,
) {
  return jspb.Message.setProto3IntField(this, 3, value)
}

/**
 * optional uint64 sequence = 4;
 * @return {number}
 */
proto.cosmos.auth.v1beta1.BaseAccount.prototype.getSequence = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0))
}

/**
 * @param {number} value
 * @return {!proto.cosmos.auth.v1beta1.BaseAccount} returns this
 */
proto.cosmos.auth.v1beta1.BaseAccount.prototype.setSequence = function (value) {
  return jspb.Message.setProto3IntField(this, 4, value)
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cosmos.auth.v1beta1.ModuleAccount.repeatedFields_ = [3]

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.cosmos.auth.v1beta1.ModuleAccount.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.cosmos.auth.v1beta1.ModuleAccount.toObject(
      opt_includeInstance,
      this,
    )
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.cosmos.auth.v1beta1.ModuleAccount} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.cosmos.auth.v1beta1.ModuleAccount.toObject = function (
    includeInstance,
    msg,
  ) {
    var f,
      obj = {
        baseAccount:
          (f = msg.getBaseAccount()) &&
          proto.cosmos.auth.v1beta1.BaseAccount.toObject(includeInstance, f),
        name: jspb.Message.getFieldWithDefault(msg, 2, ''),
        permissionsList:
          (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.auth.v1beta1.ModuleAccount}
 */
proto.cosmos.auth.v1beta1.ModuleAccount.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.cosmos.auth.v1beta1.ModuleAccount()
  return proto.cosmos.auth.v1beta1.ModuleAccount.deserializeBinaryFromReader(
    msg,
    reader,
  )
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.auth.v1beta1.ModuleAccount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.auth.v1beta1.ModuleAccount}
 */
proto.cosmos.auth.v1beta1.ModuleAccount.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = new proto.cosmos.auth.v1beta1.BaseAccount()
        reader.readMessage(
          value,
          proto.cosmos.auth.v1beta1.BaseAccount.deserializeBinaryFromReader,
        )
        msg.setBaseAccount(value)
        break
      case 2:
        var value = /** @type {string} */ (reader.readString())
        msg.setName(value)
        break
      case 3:
        var value = /** @type {string} */ (reader.readString())
        msg.addPermissions(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.auth.v1beta1.ModuleAccount.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter()
    proto.cosmos.auth.v1beta1.ModuleAccount.serializeBinaryToWriter(
      this,
      writer,
    )
    return writer.getResultBuffer()
  }

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.auth.v1beta1.ModuleAccount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.auth.v1beta1.ModuleAccount.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined
  f = message.getBaseAccount()
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.cosmos.auth.v1beta1.BaseAccount.serializeBinaryToWriter,
    )
  }
  f = message.getName()
  if (f.length > 0) {
    writer.writeString(2, f)
  }
  f = message.getPermissionsList()
  if (f.length > 0) {
    writer.writeRepeatedString(3, f)
  }
}

/**
 * optional BaseAccount base_account = 1;
 * @return {?proto.cosmos.auth.v1beta1.BaseAccount}
 */
proto.cosmos.auth.v1beta1.ModuleAccount.prototype.getBaseAccount = function () {
  return /** @type{?proto.cosmos.auth.v1beta1.BaseAccount} */ (
    jspb.Message.getWrapperField(this, proto.cosmos.auth.v1beta1.BaseAccount, 1)
  )
}

/**
 * @param {?proto.cosmos.auth.v1beta1.BaseAccount|undefined} value
 * @return {!proto.cosmos.auth.v1beta1.ModuleAccount} returns this
 */
proto.cosmos.auth.v1beta1.ModuleAccount.prototype.setBaseAccount = function (
  value,
) {
  return jspb.Message.setWrapperField(this, 1, value)
}

/**
 * Clears the message field making it undefined.
 * @return {!proto.cosmos.auth.v1beta1.ModuleAccount} returns this
 */
proto.cosmos.auth.v1beta1.ModuleAccount.prototype.clearBaseAccount =
  function () {
    return this.setBaseAccount(undefined)
  }

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cosmos.auth.v1beta1.ModuleAccount.prototype.hasBaseAccount = function () {
  return jspb.Message.getField(this, 1) != null
}

/**
 * optional string name = 2;
 * @return {string}
 */
proto.cosmos.auth.v1beta1.ModuleAccount.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''))
}

/**
 * @param {string} value
 * @return {!proto.cosmos.auth.v1beta1.ModuleAccount} returns this
 */
proto.cosmos.auth.v1beta1.ModuleAccount.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value)
}

/**
 * repeated string permissions = 3;
 * @return {!Array<string>}
 */
proto.cosmos.auth.v1beta1.ModuleAccount.prototype.getPermissionsList =
  function () {
    return /** @type {!Array<string>} */ (
      jspb.Message.getRepeatedField(this, 3)
    )
  }

/**
 * @param {!Array<string>} value
 * @return {!proto.cosmos.auth.v1beta1.ModuleAccount} returns this
 */
proto.cosmos.auth.v1beta1.ModuleAccount.prototype.setPermissionsList =
  function (value) {
    return jspb.Message.setField(this, 3, value || [])
  }

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cosmos.auth.v1beta1.ModuleAccount} returns this
 */
proto.cosmos.auth.v1beta1.ModuleAccount.prototype.addPermissions = function (
  value,
  opt_index,
) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index)
}

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cosmos.auth.v1beta1.ModuleAccount} returns this
 */
proto.cosmos.auth.v1beta1.ModuleAccount.prototype.clearPermissionsList =
  function () {
    return this.setPermissionsList([])
  }

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cosmos.auth.v1beta1.ModuleCredential.repeatedFields_ = [2]

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.cosmos.auth.v1beta1.ModuleCredential.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.cosmos.auth.v1beta1.ModuleCredential.toObject(
      opt_includeInstance,
      this,
    )
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.cosmos.auth.v1beta1.ModuleCredential} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.cosmos.auth.v1beta1.ModuleCredential.toObject = function (
    includeInstance,
    msg,
  ) {
    var f,
      obj = {
        moduleName: jspb.Message.getFieldWithDefault(msg, 1, ''),
        derivationKeysList: msg.getDerivationKeysList_asB64(),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.auth.v1beta1.ModuleCredential}
 */
proto.cosmos.auth.v1beta1.ModuleCredential.deserializeBinary = function (
  bytes,
) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.cosmos.auth.v1beta1.ModuleCredential()
  return proto.cosmos.auth.v1beta1.ModuleCredential.deserializeBinaryFromReader(
    msg,
    reader,
  )
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.auth.v1beta1.ModuleCredential} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.auth.v1beta1.ModuleCredential}
 */
proto.cosmos.auth.v1beta1.ModuleCredential.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break
      }
      var field = reader.getFieldNumber()
      switch (field) {
        case 1:
          var value = /** @type {string} */ (reader.readString())
          msg.setModuleName(value)
          break
        case 2:
          var value = /** @type {!Uint8Array} */ (reader.readBytes())
          msg.addDerivationKeys(value)
          break
        default:
          reader.skipField()
          break
      }
    }
    return msg
  }

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.auth.v1beta1.ModuleCredential.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter()
    proto.cosmos.auth.v1beta1.ModuleCredential.serializeBinaryToWriter(
      this,
      writer,
    )
    return writer.getResultBuffer()
  }

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.auth.v1beta1.ModuleCredential} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.auth.v1beta1.ModuleCredential.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined
  f = message.getModuleName()
  if (f.length > 0) {
    writer.writeString(1, f)
  }
  f = message.getDerivationKeysList_asU8()
  if (f.length > 0) {
    writer.writeRepeatedBytes(2, f)
  }
}

/**
 * optional string module_name = 1;
 * @return {string}
 */
proto.cosmos.auth.v1beta1.ModuleCredential.prototype.getModuleName =
  function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
  }

/**
 * @param {string} value
 * @return {!proto.cosmos.auth.v1beta1.ModuleCredential} returns this
 */
proto.cosmos.auth.v1beta1.ModuleCredential.prototype.setModuleName = function (
  value,
) {
  return jspb.Message.setProto3StringField(this, 1, value)
}

/**
 * repeated bytes derivation_keys = 2;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.cosmos.auth.v1beta1.ModuleCredential.prototype.getDerivationKeysList =
  function () {
    return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (
      jspb.Message.getRepeatedField(this, 2)
    )
  }

/**
 * repeated bytes derivation_keys = 2;
 * This is a type-conversion wrapper around `getDerivationKeysList()`
 * @return {!Array<string>}
 */
proto.cosmos.auth.v1beta1.ModuleCredential.prototype.getDerivationKeysList_asB64 =
  function () {
    return /** @type {!Array<string>} */ (
      jspb.Message.bytesListAsB64(this.getDerivationKeysList())
    )
  }

/**
 * repeated bytes derivation_keys = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDerivationKeysList()`
 * @return {!Array<!Uint8Array>}
 */
proto.cosmos.auth.v1beta1.ModuleCredential.prototype.getDerivationKeysList_asU8 =
  function () {
    return /** @type {!Array<!Uint8Array>} */ (
      jspb.Message.bytesListAsU8(this.getDerivationKeysList())
    )
  }

/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.cosmos.auth.v1beta1.ModuleCredential} returns this
 */
proto.cosmos.auth.v1beta1.ModuleCredential.prototype.setDerivationKeysList =
  function (value) {
    return jspb.Message.setField(this, 2, value || [])
  }

/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.cosmos.auth.v1beta1.ModuleCredential} returns this
 */
proto.cosmos.auth.v1beta1.ModuleCredential.prototype.addDerivationKeys =
  function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 2, value, opt_index)
  }

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cosmos.auth.v1beta1.ModuleCredential} returns this
 */
proto.cosmos.auth.v1beta1.ModuleCredential.prototype.clearDerivationKeysList =
  function () {
    return this.setDerivationKeysList([])
  }

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.cosmos.auth.v1beta1.Params.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.cosmos.auth.v1beta1.Params.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.cosmos.auth.v1beta1.Params} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.cosmos.auth.v1beta1.Params.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        maxMemoCharacters: jspb.Message.getFieldWithDefault(msg, 1, 0),
        txSigLimit: jspb.Message.getFieldWithDefault(msg, 2, 0),
        txSizeCostPerByte: jspb.Message.getFieldWithDefault(msg, 3, 0),
        sigVerifyCostEd25519: jspb.Message.getFieldWithDefault(msg, 4, 0),
        sigVerifyCostSecp256k1: jspb.Message.getFieldWithDefault(msg, 5, 0),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.auth.v1beta1.Params}
 */
proto.cosmos.auth.v1beta1.Params.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.cosmos.auth.v1beta1.Params()
  return proto.cosmos.auth.v1beta1.Params.deserializeBinaryFromReader(
    msg,
    reader,
  )
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.auth.v1beta1.Params} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.auth.v1beta1.Params}
 */
proto.cosmos.auth.v1beta1.Params.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readUint64())
        msg.setMaxMemoCharacters(value)
        break
      case 2:
        var value = /** @type {number} */ (reader.readUint64())
        msg.setTxSigLimit(value)
        break
      case 3:
        var value = /** @type {number} */ (reader.readUint64())
        msg.setTxSizeCostPerByte(value)
        break
      case 4:
        var value = /** @type {number} */ (reader.readUint64())
        msg.setSigVerifyCostEd25519(value)
        break
      case 5:
        var value = /** @type {number} */ (reader.readUint64())
        msg.setSigVerifyCostSecp256k1(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.auth.v1beta1.Params.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.cosmos.auth.v1beta1.Params.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.auth.v1beta1.Params} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.auth.v1beta1.Params.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined
  f = message.getMaxMemoCharacters()
  if (f !== 0) {
    writer.writeUint64(1, f)
  }
  f = message.getTxSigLimit()
  if (f !== 0) {
    writer.writeUint64(2, f)
  }
  f = message.getTxSizeCostPerByte()
  if (f !== 0) {
    writer.writeUint64(3, f)
  }
  f = message.getSigVerifyCostEd25519()
  if (f !== 0) {
    writer.writeUint64(4, f)
  }
  f = message.getSigVerifyCostSecp256k1()
  if (f !== 0) {
    writer.writeUint64(5, f)
  }
}

/**
 * optional uint64 max_memo_characters = 1;
 * @return {number}
 */
proto.cosmos.auth.v1beta1.Params.prototype.getMaxMemoCharacters = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0))
}

/**
 * @param {number} value
 * @return {!proto.cosmos.auth.v1beta1.Params} returns this
 */
proto.cosmos.auth.v1beta1.Params.prototype.setMaxMemoCharacters = function (
  value,
) {
  return jspb.Message.setProto3IntField(this, 1, value)
}

/**
 * optional uint64 tx_sig_limit = 2;
 * @return {number}
 */
proto.cosmos.auth.v1beta1.Params.prototype.getTxSigLimit = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0))
}

/**
 * @param {number} value
 * @return {!proto.cosmos.auth.v1beta1.Params} returns this
 */
proto.cosmos.auth.v1beta1.Params.prototype.setTxSigLimit = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value)
}

/**
 * optional uint64 tx_size_cost_per_byte = 3;
 * @return {number}
 */
proto.cosmos.auth.v1beta1.Params.prototype.getTxSizeCostPerByte = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0))
}

/**
 * @param {number} value
 * @return {!proto.cosmos.auth.v1beta1.Params} returns this
 */
proto.cosmos.auth.v1beta1.Params.prototype.setTxSizeCostPerByte = function (
  value,
) {
  return jspb.Message.setProto3IntField(this, 3, value)
}

/**
 * optional uint64 sig_verify_cost_ed25519 = 4;
 * @return {number}
 */
proto.cosmos.auth.v1beta1.Params.prototype.getSigVerifyCostEd25519 =
  function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0))
  }

/**
 * @param {number} value
 * @return {!proto.cosmos.auth.v1beta1.Params} returns this
 */
proto.cosmos.auth.v1beta1.Params.prototype.setSigVerifyCostEd25519 = function (
  value,
) {
  return jspb.Message.setProto3IntField(this, 4, value)
}

/**
 * optional uint64 sig_verify_cost_secp256k1 = 5;
 * @return {number}
 */
proto.cosmos.auth.v1beta1.Params.prototype.getSigVerifyCostSecp256k1 =
  function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0))
  }

/**
 * @param {number} value
 * @return {!proto.cosmos.auth.v1beta1.Params} returns this
 */
proto.cosmos.auth.v1beta1.Params.prototype.setSigVerifyCostSecp256k1 =
  function (value) {
    return jspb.Message.setProto3IntField(this, 5, value)
  }

goog.object.extend(exports, proto.cosmos.auth.v1beta1)
