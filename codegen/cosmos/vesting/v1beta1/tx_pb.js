// source: cosmos/vesting/v1beta1/tx.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var gogoproto_gogo_pb = require('../../../gogoproto/gogo_pb.js');
goog.object.extend(proto, gogoproto_gogo_pb);
var cosmos_base_v1beta1_coin_pb = require('../../../cosmos/base/v1beta1/coin_pb.js');
goog.object.extend(proto, cosmos_base_v1beta1_coin_pb);
var cosmos_proto_cosmos_pb = require('../../../cosmos_proto/cosmos_pb.js');
goog.object.extend(proto, cosmos_proto_cosmos_pb);
var cosmos_vesting_v1beta1_vesting_pb = require('../../../cosmos/vesting/v1beta1/vesting_pb.js');
goog.object.extend(proto, cosmos_vesting_v1beta1_vesting_pb);
var cosmos_msg_v1_msg_pb = require('../../../cosmos/msg/v1/msg_pb.js');
goog.object.extend(proto, cosmos_msg_v1_msg_pb);
var amino_amino_pb = require('../../../amino/amino_pb.js');
goog.object.extend(proto, amino_amino_pb);
goog.exportSymbol('proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount', null, global);
goog.exportSymbol('proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccountResponse', null, global);
goog.exportSymbol('proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount', null, global);
goog.exportSymbol('proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccountResponse', null, global);
goog.exportSymbol('proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount', null, global);
goog.exportSymbol('proto.cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount.repeatedFields_, null);
};
goog.inherits(proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount.displayName = 'proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse.displayName = 'proto.cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount.repeatedFields_, null);
};
goog.inherits(proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount.displayName = 'proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccountResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccountResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccountResponse.displayName = 'proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccountResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.repeatedFields_, null);
};
goog.inherits(proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.displayName = 'proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccountResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccountResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccountResponse.displayName = 'proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccountResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount.prototype.toObject = function(opt_includeInstance) {
  return proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount.toObject = function(includeInstance, msg) {
  var f, obj = {
    fromAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    toAddress: jspb.Message.getFieldWithDefault(msg, 2, ""),
    amountList: jspb.Message.toObjectList(msg.getAmountList(),
    cosmos_base_v1beta1_coin_pb.Coin.toObject, includeInstance),
    endTime: jspb.Message.getFieldWithDefault(msg, 4, 0),
    delayed: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount}
 */
proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount;
  return proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount}
 */
proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFromAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setToAddress(value);
      break;
    case 3:
      var value = new cosmos_base_v1beta1_coin_pb.Coin;
      reader.readMessage(value,cosmos_base_v1beta1_coin_pb.Coin.deserializeBinaryFromReader);
      msg.addAmount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEndTime(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDelayed(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFromAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getToAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAmountList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      cosmos_base_v1beta1_coin_pb.Coin.serializeBinaryToWriter
    );
  }
  f = message.getEndTime();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getDelayed();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional string from_address = 1;
 * @return {string}
 */
proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount.prototype.getFromAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount} returns this
 */
proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount.prototype.setFromAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string to_address = 2;
 * @return {string}
 */
proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount.prototype.getToAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount} returns this
 */
proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount.prototype.setToAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated cosmos.base.v1beta1.Coin amount = 3;
 * @return {!Array<!proto.cosmos.base.v1beta1.Coin>}
 */
proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount.prototype.getAmountList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.Coin>} */ (
    jspb.Message.getRepeatedWrapperField(this, cosmos_base_v1beta1_coin_pb.Coin, 3));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.Coin>} value
 * @return {!proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount} returns this
*/
proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount.prototype.setAmountList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.Coin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.Coin}
 */
proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount.prototype.addAmount = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.cosmos.base.v1beta1.Coin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount} returns this
 */
proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount.prototype.clearAmountList = function() {
  return this.setAmountList([]);
};


/**
 * optional int64 end_time = 4;
 * @return {number}
 */
proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount.prototype.getEndTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount} returns this
 */
proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount.prototype.setEndTime = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool delayed = 5;
 * @return {boolean}
 */
proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount.prototype.getDelayed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount} returns this
 */
proto.cosmos.vesting.v1beta1.MsgCreateVestingAccount.prototype.setDelayed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse}
 */
proto.cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse;
  return proto.cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse}
 */
proto.cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount.prototype.toObject = function(opt_includeInstance) {
  return proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount.toObject = function(includeInstance, msg) {
  var f, obj = {
    fromAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    toAddress: jspb.Message.getFieldWithDefault(msg, 2, ""),
    amountList: jspb.Message.toObjectList(msg.getAmountList(),
    cosmos_base_v1beta1_coin_pb.Coin.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount}
 */
proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount;
  return proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount}
 */
proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFromAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setToAddress(value);
      break;
    case 3:
      var value = new cosmos_base_v1beta1_coin_pb.Coin;
      reader.readMessage(value,cosmos_base_v1beta1_coin_pb.Coin.deserializeBinaryFromReader);
      msg.addAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFromAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getToAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAmountList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      cosmos_base_v1beta1_coin_pb.Coin.serializeBinaryToWriter
    );
  }
};


/**
 * optional string from_address = 1;
 * @return {string}
 */
proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount.prototype.getFromAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount} returns this
 */
proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount.prototype.setFromAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string to_address = 2;
 * @return {string}
 */
proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount.prototype.getToAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount} returns this
 */
proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount.prototype.setToAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated cosmos.base.v1beta1.Coin amount = 3;
 * @return {!Array<!proto.cosmos.base.v1beta1.Coin>}
 */
proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount.prototype.getAmountList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.Coin>} */ (
    jspb.Message.getRepeatedWrapperField(this, cosmos_base_v1beta1_coin_pb.Coin, 3));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.Coin>} value
 * @return {!proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount} returns this
*/
proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount.prototype.setAmountList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.Coin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.Coin}
 */
proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount.prototype.addAmount = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.cosmos.base.v1beta1.Coin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount} returns this
 */
proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount.prototype.clearAmountList = function() {
  return this.setAmountList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccountResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccountResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccountResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccountResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccountResponse}
 */
proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccountResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccountResponse;
  return proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccountResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccountResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccountResponse}
 */
proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccountResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccountResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccountResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccountResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccountResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.prototype.toObject = function(opt_includeInstance) {
  return proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.toObject = function(includeInstance, msg) {
  var f, obj = {
    fromAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    toAddress: jspb.Message.getFieldWithDefault(msg, 2, ""),
    startTime: jspb.Message.getFieldWithDefault(msg, 3, 0),
    vestingPeriodsList: jspb.Message.toObjectList(msg.getVestingPeriodsList(),
    cosmos_vesting_v1beta1_vesting_pb.Period.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount}
 */
proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount;
  return proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount}
 */
proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFromAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setToAddress(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartTime(value);
      break;
    case 4:
      var value = new cosmos_vesting_v1beta1_vesting_pb.Period;
      reader.readMessage(value,cosmos_vesting_v1beta1_vesting_pb.Period.deserializeBinaryFromReader);
      msg.addVestingPeriods(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFromAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getToAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStartTime();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getVestingPeriodsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      cosmos_vesting_v1beta1_vesting_pb.Period.serializeBinaryToWriter
    );
  }
};


/**
 * optional string from_address = 1;
 * @return {string}
 */
proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.prototype.getFromAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount} returns this
 */
proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.prototype.setFromAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string to_address = 2;
 * @return {string}
 */
proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.prototype.getToAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount} returns this
 */
proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.prototype.setToAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 start_time = 3;
 * @return {number}
 */
proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.prototype.getStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount} returns this
 */
proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.prototype.setStartTime = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated Period vesting_periods = 4;
 * @return {!Array<!proto.cosmos.vesting.v1beta1.Period>}
 */
proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.prototype.getVestingPeriodsList = function() {
  return /** @type{!Array<!proto.cosmos.vesting.v1beta1.Period>} */ (
    jspb.Message.getRepeatedWrapperField(this, cosmos_vesting_v1beta1_vesting_pb.Period, 4));
};


/**
 * @param {!Array<!proto.cosmos.vesting.v1beta1.Period>} value
 * @return {!proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount} returns this
*/
proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.prototype.setVestingPeriodsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.cosmos.vesting.v1beta1.Period=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.vesting.v1beta1.Period}
 */
proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.prototype.addVestingPeriods = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.cosmos.vesting.v1beta1.Period, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount} returns this
 */
proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.prototype.clearVestingPeriodsList = function() {
  return this.setVestingPeriodsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccountResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccountResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccountResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccountResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccountResponse}
 */
proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccountResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccountResponse;
  return proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccountResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccountResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccountResponse}
 */
proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccountResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccountResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccountResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccountResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccountResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.cosmos.vesting.v1beta1);
