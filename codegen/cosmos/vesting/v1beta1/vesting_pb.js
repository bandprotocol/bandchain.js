// source: cosmos/vesting/v1beta1/vesting.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf')
var goog = jspb
var global = Function('return this')()

var amino_amino_pb = require('../../../amino/amino_pb.js')
goog.object.extend(proto, amino_amino_pb)
var gogoproto_gogo_pb = require('../../../gogoproto/gogo_pb.js')
goog.object.extend(proto, gogoproto_gogo_pb)
var cosmos_base_v1beta1_coin_pb = require('../../../cosmos/base/v1beta1/coin_pb.js')
goog.object.extend(proto, cosmos_base_v1beta1_coin_pb)
var cosmos_auth_v1beta1_auth_pb = require('../../../cosmos/auth/v1beta1/auth_pb.js')
goog.object.extend(proto, cosmos_auth_v1beta1_auth_pb)
goog.exportSymbol(
  'proto.cosmos.vesting.v1beta1.BaseVestingAccount',
  null,
  global,
)
goog.exportSymbol(
  'proto.cosmos.vesting.v1beta1.ContinuousVestingAccount',
  null,
  global,
)
goog.exportSymbol(
  'proto.cosmos.vesting.v1beta1.DelayedVestingAccount',
  null,
  global,
)
goog.exportSymbol('proto.cosmos.vesting.v1beta1.Period', null, global)
goog.exportSymbol(
  'proto.cosmos.vesting.v1beta1.PeriodicVestingAccount',
  null,
  global,
)
goog.exportSymbol(
  'proto.cosmos.vesting.v1beta1.PermanentLockedAccount',
  null,
  global,
)
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.vesting.v1beta1.BaseVestingAccount = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.cosmos.vesting.v1beta1.BaseVestingAccount.repeatedFields_,
    null,
  )
}
goog.inherits(proto.cosmos.vesting.v1beta1.BaseVestingAccount, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.vesting.v1beta1.BaseVestingAccount.displayName =
    'proto.cosmos.vesting.v1beta1.BaseVestingAccount'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.vesting.v1beta1.ContinuousVestingAccount = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(
  proto.cosmos.vesting.v1beta1.ContinuousVestingAccount,
  jspb.Message,
)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.vesting.v1beta1.ContinuousVestingAccount.displayName =
    'proto.cosmos.vesting.v1beta1.ContinuousVestingAccount'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.vesting.v1beta1.DelayedVestingAccount = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.cosmos.vesting.v1beta1.DelayedVestingAccount, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.vesting.v1beta1.DelayedVestingAccount.displayName =
    'proto.cosmos.vesting.v1beta1.DelayedVestingAccount'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.vesting.v1beta1.Period = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.cosmos.vesting.v1beta1.Period.repeatedFields_,
    null,
  )
}
goog.inherits(proto.cosmos.vesting.v1beta1.Period, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.vesting.v1beta1.Period.displayName =
    'proto.cosmos.vesting.v1beta1.Period'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.vesting.v1beta1.PeriodicVestingAccount = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.cosmos.vesting.v1beta1.PeriodicVestingAccount.repeatedFields_,
    null,
  )
}
goog.inherits(proto.cosmos.vesting.v1beta1.PeriodicVestingAccount, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.vesting.v1beta1.PeriodicVestingAccount.displayName =
    'proto.cosmos.vesting.v1beta1.PeriodicVestingAccount'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.vesting.v1beta1.PermanentLockedAccount = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.cosmos.vesting.v1beta1.PermanentLockedAccount, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.vesting.v1beta1.PermanentLockedAccount.displayName =
    'proto.cosmos.vesting.v1beta1.PermanentLockedAccount'
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cosmos.vesting.v1beta1.BaseVestingAccount.repeatedFields_ = [2, 3, 4]

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.cosmos.vesting.v1beta1.BaseVestingAccount.prototype.toObject =
    function (opt_includeInstance) {
      return proto.cosmos.vesting.v1beta1.BaseVestingAccount.toObject(
        opt_includeInstance,
        this,
      )
    }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.cosmos.vesting.v1beta1.BaseVestingAccount} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.cosmos.vesting.v1beta1.BaseVestingAccount.toObject = function (
    includeInstance,
    msg,
  ) {
    var f,
      obj = {
        baseAccount:
          (f = msg.getBaseAccount()) &&
          cosmos_auth_v1beta1_auth_pb.BaseAccount.toObject(includeInstance, f),
        originalVestingList: jspb.Message.toObjectList(
          msg.getOriginalVestingList(),
          cosmos_base_v1beta1_coin_pb.Coin.toObject,
          includeInstance,
        ),
        delegatedFreeList: jspb.Message.toObjectList(
          msg.getDelegatedFreeList(),
          cosmos_base_v1beta1_coin_pb.Coin.toObject,
          includeInstance,
        ),
        delegatedVestingList: jspb.Message.toObjectList(
          msg.getDelegatedVestingList(),
          cosmos_base_v1beta1_coin_pb.Coin.toObject,
          includeInstance,
        ),
        endTime: jspb.Message.getFieldWithDefault(msg, 5, 0),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.vesting.v1beta1.BaseVestingAccount}
 */
proto.cosmos.vesting.v1beta1.BaseVestingAccount.deserializeBinary = function (
  bytes,
) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.cosmos.vesting.v1beta1.BaseVestingAccount()
  return proto.cosmos.vesting.v1beta1.BaseVestingAccount.deserializeBinaryFromReader(
    msg,
    reader,
  )
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.vesting.v1beta1.BaseVestingAccount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.vesting.v1beta1.BaseVestingAccount}
 */
proto.cosmos.vesting.v1beta1.BaseVestingAccount.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break
      }
      var field = reader.getFieldNumber()
      switch (field) {
        case 1:
          var value = new cosmos_auth_v1beta1_auth_pb.BaseAccount()
          reader.readMessage(
            value,
            cosmos_auth_v1beta1_auth_pb.BaseAccount.deserializeBinaryFromReader,
          )
          msg.setBaseAccount(value)
          break
        case 2:
          var value = new cosmos_base_v1beta1_coin_pb.Coin()
          reader.readMessage(
            value,
            cosmos_base_v1beta1_coin_pb.Coin.deserializeBinaryFromReader,
          )
          msg.addOriginalVesting(value)
          break
        case 3:
          var value = new cosmos_base_v1beta1_coin_pb.Coin()
          reader.readMessage(
            value,
            cosmos_base_v1beta1_coin_pb.Coin.deserializeBinaryFromReader,
          )
          msg.addDelegatedFree(value)
          break
        case 4:
          var value = new cosmos_base_v1beta1_coin_pb.Coin()
          reader.readMessage(
            value,
            cosmos_base_v1beta1_coin_pb.Coin.deserializeBinaryFromReader,
          )
          msg.addDelegatedVesting(value)
          break
        case 5:
          var value = /** @type {number} */ (reader.readInt64())
          msg.setEndTime(value)
          break
        default:
          reader.skipField()
          break
      }
    }
    return msg
  }

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.vesting.v1beta1.BaseVestingAccount.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter()
    proto.cosmos.vesting.v1beta1.BaseVestingAccount.serializeBinaryToWriter(
      this,
      writer,
    )
    return writer.getResultBuffer()
  }

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.vesting.v1beta1.BaseVestingAccount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.vesting.v1beta1.BaseVestingAccount.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined
    f = message.getBaseAccount()
    if (f != null) {
      writer.writeMessage(
        1,
        f,
        cosmos_auth_v1beta1_auth_pb.BaseAccount.serializeBinaryToWriter,
      )
    }
    f = message.getOriginalVestingList()
    if (f.length > 0) {
      writer.writeRepeatedMessage(
        2,
        f,
        cosmos_base_v1beta1_coin_pb.Coin.serializeBinaryToWriter,
      )
    }
    f = message.getDelegatedFreeList()
    if (f.length > 0) {
      writer.writeRepeatedMessage(
        3,
        f,
        cosmos_base_v1beta1_coin_pb.Coin.serializeBinaryToWriter,
      )
    }
    f = message.getDelegatedVestingList()
    if (f.length > 0) {
      writer.writeRepeatedMessage(
        4,
        f,
        cosmos_base_v1beta1_coin_pb.Coin.serializeBinaryToWriter,
      )
    }
    f = message.getEndTime()
    if (f !== 0) {
      writer.writeInt64(5, f)
    }
  }

/**
 * optional cosmos.auth.v1beta1.BaseAccount base_account = 1;
 * @return {?proto.cosmos.auth.v1beta1.BaseAccount}
 */
proto.cosmos.vesting.v1beta1.BaseVestingAccount.prototype.getBaseAccount =
  function () {
    return /** @type{?proto.cosmos.auth.v1beta1.BaseAccount} */ (
      jspb.Message.getWrapperField(
        this,
        cosmos_auth_v1beta1_auth_pb.BaseAccount,
        1,
      )
    )
  }

/**
 * @param {?proto.cosmos.auth.v1beta1.BaseAccount|undefined} value
 * @return {!proto.cosmos.vesting.v1beta1.BaseVestingAccount} returns this
 */
proto.cosmos.vesting.v1beta1.BaseVestingAccount.prototype.setBaseAccount =
  function (value) {
    return jspb.Message.setWrapperField(this, 1, value)
  }

/**
 * Clears the message field making it undefined.
 * @return {!proto.cosmos.vesting.v1beta1.BaseVestingAccount} returns this
 */
proto.cosmos.vesting.v1beta1.BaseVestingAccount.prototype.clearBaseAccount =
  function () {
    return this.setBaseAccount(undefined)
  }

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cosmos.vesting.v1beta1.BaseVestingAccount.prototype.hasBaseAccount =
  function () {
    return jspb.Message.getField(this, 1) != null
  }

/**
 * repeated cosmos.base.v1beta1.Coin original_vesting = 2;
 * @return {!Array<!proto.cosmos.base.v1beta1.Coin>}
 */
proto.cosmos.vesting.v1beta1.BaseVestingAccount.prototype.getOriginalVestingList =
  function () {
    return /** @type{!Array<!proto.cosmos.base.v1beta1.Coin>} */ (
      jspb.Message.getRepeatedWrapperField(
        this,
        cosmos_base_v1beta1_coin_pb.Coin,
        2,
      )
    )
  }

/**
 * @param {!Array<!proto.cosmos.base.v1beta1.Coin>} value
 * @return {!proto.cosmos.vesting.v1beta1.BaseVestingAccount} returns this
 */
proto.cosmos.vesting.v1beta1.BaseVestingAccount.prototype.setOriginalVestingList =
  function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value)
  }

/**
 * @param {!proto.cosmos.base.v1beta1.Coin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.Coin}
 */
proto.cosmos.vesting.v1beta1.BaseVestingAccount.prototype.addOriginalVesting =
  function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(
      this,
      2,
      opt_value,
      proto.cosmos.base.v1beta1.Coin,
      opt_index,
    )
  }

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cosmos.vesting.v1beta1.BaseVestingAccount} returns this
 */
proto.cosmos.vesting.v1beta1.BaseVestingAccount.prototype.clearOriginalVestingList =
  function () {
    return this.setOriginalVestingList([])
  }

/**
 * repeated cosmos.base.v1beta1.Coin delegated_free = 3;
 * @return {!Array<!proto.cosmos.base.v1beta1.Coin>}
 */
proto.cosmos.vesting.v1beta1.BaseVestingAccount.prototype.getDelegatedFreeList =
  function () {
    return /** @type{!Array<!proto.cosmos.base.v1beta1.Coin>} */ (
      jspb.Message.getRepeatedWrapperField(
        this,
        cosmos_base_v1beta1_coin_pb.Coin,
        3,
      )
    )
  }

/**
 * @param {!Array<!proto.cosmos.base.v1beta1.Coin>} value
 * @return {!proto.cosmos.vesting.v1beta1.BaseVestingAccount} returns this
 */
proto.cosmos.vesting.v1beta1.BaseVestingAccount.prototype.setDelegatedFreeList =
  function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 3, value)
  }

/**
 * @param {!proto.cosmos.base.v1beta1.Coin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.Coin}
 */
proto.cosmos.vesting.v1beta1.BaseVestingAccount.prototype.addDelegatedFree =
  function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(
      this,
      3,
      opt_value,
      proto.cosmos.base.v1beta1.Coin,
      opt_index,
    )
  }

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cosmos.vesting.v1beta1.BaseVestingAccount} returns this
 */
proto.cosmos.vesting.v1beta1.BaseVestingAccount.prototype.clearDelegatedFreeList =
  function () {
    return this.setDelegatedFreeList([])
  }

/**
 * repeated cosmos.base.v1beta1.Coin delegated_vesting = 4;
 * @return {!Array<!proto.cosmos.base.v1beta1.Coin>}
 */
proto.cosmos.vesting.v1beta1.BaseVestingAccount.prototype.getDelegatedVestingList =
  function () {
    return /** @type{!Array<!proto.cosmos.base.v1beta1.Coin>} */ (
      jspb.Message.getRepeatedWrapperField(
        this,
        cosmos_base_v1beta1_coin_pb.Coin,
        4,
      )
    )
  }

/**
 * @param {!Array<!proto.cosmos.base.v1beta1.Coin>} value
 * @return {!proto.cosmos.vesting.v1beta1.BaseVestingAccount} returns this
 */
proto.cosmos.vesting.v1beta1.BaseVestingAccount.prototype.setDelegatedVestingList =
  function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 4, value)
  }

/**
 * @param {!proto.cosmos.base.v1beta1.Coin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.Coin}
 */
proto.cosmos.vesting.v1beta1.BaseVestingAccount.prototype.addDelegatedVesting =
  function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(
      this,
      4,
      opt_value,
      proto.cosmos.base.v1beta1.Coin,
      opt_index,
    )
  }

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cosmos.vesting.v1beta1.BaseVestingAccount} returns this
 */
proto.cosmos.vesting.v1beta1.BaseVestingAccount.prototype.clearDelegatedVestingList =
  function () {
    return this.setDelegatedVestingList([])
  }

/**
 * optional int64 end_time = 5;
 * @return {number}
 */
proto.cosmos.vesting.v1beta1.BaseVestingAccount.prototype.getEndTime =
  function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0))
  }

/**
 * @param {number} value
 * @return {!proto.cosmos.vesting.v1beta1.BaseVestingAccount} returns this
 */
proto.cosmos.vesting.v1beta1.BaseVestingAccount.prototype.setEndTime =
  function (value) {
    return jspb.Message.setProto3IntField(this, 5, value)
  }

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.cosmos.vesting.v1beta1.ContinuousVestingAccount.prototype.toObject =
    function (opt_includeInstance) {
      return proto.cosmos.vesting.v1beta1.ContinuousVestingAccount.toObject(
        opt_includeInstance,
        this,
      )
    }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.cosmos.vesting.v1beta1.ContinuousVestingAccount} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.cosmos.vesting.v1beta1.ContinuousVestingAccount.toObject = function (
    includeInstance,
    msg,
  ) {
    var f,
      obj = {
        baseVestingAccount:
          (f = msg.getBaseVestingAccount()) &&
          proto.cosmos.vesting.v1beta1.BaseVestingAccount.toObject(
            includeInstance,
            f,
          ),
        startTime: jspb.Message.getFieldWithDefault(msg, 2, 0),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.vesting.v1beta1.ContinuousVestingAccount}
 */
proto.cosmos.vesting.v1beta1.ContinuousVestingAccount.deserializeBinary =
  function (bytes) {
    var reader = new jspb.BinaryReader(bytes)
    var msg = new proto.cosmos.vesting.v1beta1.ContinuousVestingAccount()
    return proto.cosmos.vesting.v1beta1.ContinuousVestingAccount.deserializeBinaryFromReader(
      msg,
      reader,
    )
  }

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.vesting.v1beta1.ContinuousVestingAccount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.vesting.v1beta1.ContinuousVestingAccount}
 */
proto.cosmos.vesting.v1beta1.ContinuousVestingAccount.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break
      }
      var field = reader.getFieldNumber()
      switch (field) {
        case 1:
          var value = new proto.cosmos.vesting.v1beta1.BaseVestingAccount()
          reader.readMessage(
            value,
            proto.cosmos.vesting.v1beta1.BaseVestingAccount
              .deserializeBinaryFromReader,
          )
          msg.setBaseVestingAccount(value)
          break
        case 2:
          var value = /** @type {number} */ (reader.readInt64())
          msg.setStartTime(value)
          break
        default:
          reader.skipField()
          break
      }
    }
    return msg
  }

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.vesting.v1beta1.ContinuousVestingAccount.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter()
    proto.cosmos.vesting.v1beta1.ContinuousVestingAccount.serializeBinaryToWriter(
      this,
      writer,
    )
    return writer.getResultBuffer()
  }

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.vesting.v1beta1.ContinuousVestingAccount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.vesting.v1beta1.ContinuousVestingAccount.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined
    f = message.getBaseVestingAccount()
    if (f != null) {
      writer.writeMessage(
        1,
        f,
        proto.cosmos.vesting.v1beta1.BaseVestingAccount.serializeBinaryToWriter,
      )
    }
    f = message.getStartTime()
    if (f !== 0) {
      writer.writeInt64(2, f)
    }
  }

/**
 * optional BaseVestingAccount base_vesting_account = 1;
 * @return {?proto.cosmos.vesting.v1beta1.BaseVestingAccount}
 */
proto.cosmos.vesting.v1beta1.ContinuousVestingAccount.prototype.getBaseVestingAccount =
  function () {
    return /** @type{?proto.cosmos.vesting.v1beta1.BaseVestingAccount} */ (
      jspb.Message.getWrapperField(
        this,
        proto.cosmos.vesting.v1beta1.BaseVestingAccount,
        1,
      )
    )
  }

/**
 * @param {?proto.cosmos.vesting.v1beta1.BaseVestingAccount|undefined} value
 * @return {!proto.cosmos.vesting.v1beta1.ContinuousVestingAccount} returns this
 */
proto.cosmos.vesting.v1beta1.ContinuousVestingAccount.prototype.setBaseVestingAccount =
  function (value) {
    return jspb.Message.setWrapperField(this, 1, value)
  }

/**
 * Clears the message field making it undefined.
 * @return {!proto.cosmos.vesting.v1beta1.ContinuousVestingAccount} returns this
 */
proto.cosmos.vesting.v1beta1.ContinuousVestingAccount.prototype.clearBaseVestingAccount =
  function () {
    return this.setBaseVestingAccount(undefined)
  }

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cosmos.vesting.v1beta1.ContinuousVestingAccount.prototype.hasBaseVestingAccount =
  function () {
    return jspb.Message.getField(this, 1) != null
  }

/**
 * optional int64 start_time = 2;
 * @return {number}
 */
proto.cosmos.vesting.v1beta1.ContinuousVestingAccount.prototype.getStartTime =
  function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0))
  }

/**
 * @param {number} value
 * @return {!proto.cosmos.vesting.v1beta1.ContinuousVestingAccount} returns this
 */
proto.cosmos.vesting.v1beta1.ContinuousVestingAccount.prototype.setStartTime =
  function (value) {
    return jspb.Message.setProto3IntField(this, 2, value)
  }

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.cosmos.vesting.v1beta1.DelayedVestingAccount.prototype.toObject =
    function (opt_includeInstance) {
      return proto.cosmos.vesting.v1beta1.DelayedVestingAccount.toObject(
        opt_includeInstance,
        this,
      )
    }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.cosmos.vesting.v1beta1.DelayedVestingAccount} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.cosmos.vesting.v1beta1.DelayedVestingAccount.toObject = function (
    includeInstance,
    msg,
  ) {
    var f,
      obj = {
        baseVestingAccount:
          (f = msg.getBaseVestingAccount()) &&
          proto.cosmos.vesting.v1beta1.BaseVestingAccount.toObject(
            includeInstance,
            f,
          ),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.vesting.v1beta1.DelayedVestingAccount}
 */
proto.cosmos.vesting.v1beta1.DelayedVestingAccount.deserializeBinary =
  function (bytes) {
    var reader = new jspb.BinaryReader(bytes)
    var msg = new proto.cosmos.vesting.v1beta1.DelayedVestingAccount()
    return proto.cosmos.vesting.v1beta1.DelayedVestingAccount.deserializeBinaryFromReader(
      msg,
      reader,
    )
  }

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.vesting.v1beta1.DelayedVestingAccount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.vesting.v1beta1.DelayedVestingAccount}
 */
proto.cosmos.vesting.v1beta1.DelayedVestingAccount.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break
      }
      var field = reader.getFieldNumber()
      switch (field) {
        case 1:
          var value = new proto.cosmos.vesting.v1beta1.BaseVestingAccount()
          reader.readMessage(
            value,
            proto.cosmos.vesting.v1beta1.BaseVestingAccount
              .deserializeBinaryFromReader,
          )
          msg.setBaseVestingAccount(value)
          break
        default:
          reader.skipField()
          break
      }
    }
    return msg
  }

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.vesting.v1beta1.DelayedVestingAccount.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter()
    proto.cosmos.vesting.v1beta1.DelayedVestingAccount.serializeBinaryToWriter(
      this,
      writer,
    )
    return writer.getResultBuffer()
  }

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.vesting.v1beta1.DelayedVestingAccount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.vesting.v1beta1.DelayedVestingAccount.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined
    f = message.getBaseVestingAccount()
    if (f != null) {
      writer.writeMessage(
        1,
        f,
        proto.cosmos.vesting.v1beta1.BaseVestingAccount.serializeBinaryToWriter,
      )
    }
  }

/**
 * optional BaseVestingAccount base_vesting_account = 1;
 * @return {?proto.cosmos.vesting.v1beta1.BaseVestingAccount}
 */
proto.cosmos.vesting.v1beta1.DelayedVestingAccount.prototype.getBaseVestingAccount =
  function () {
    return /** @type{?proto.cosmos.vesting.v1beta1.BaseVestingAccount} */ (
      jspb.Message.getWrapperField(
        this,
        proto.cosmos.vesting.v1beta1.BaseVestingAccount,
        1,
      )
    )
  }

/**
 * @param {?proto.cosmos.vesting.v1beta1.BaseVestingAccount|undefined} value
 * @return {!proto.cosmos.vesting.v1beta1.DelayedVestingAccount} returns this
 */
proto.cosmos.vesting.v1beta1.DelayedVestingAccount.prototype.setBaseVestingAccount =
  function (value) {
    return jspb.Message.setWrapperField(this, 1, value)
  }

/**
 * Clears the message field making it undefined.
 * @return {!proto.cosmos.vesting.v1beta1.DelayedVestingAccount} returns this
 */
proto.cosmos.vesting.v1beta1.DelayedVestingAccount.prototype.clearBaseVestingAccount =
  function () {
    return this.setBaseVestingAccount(undefined)
  }

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cosmos.vesting.v1beta1.DelayedVestingAccount.prototype.hasBaseVestingAccount =
  function () {
    return jspb.Message.getField(this, 1) != null
  }

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cosmos.vesting.v1beta1.Period.repeatedFields_ = [2]

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.cosmos.vesting.v1beta1.Period.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.cosmos.vesting.v1beta1.Period.toObject(
      opt_includeInstance,
      this,
    )
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.cosmos.vesting.v1beta1.Period} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.cosmos.vesting.v1beta1.Period.toObject = function (
    includeInstance,
    msg,
  ) {
    var f,
      obj = {
        length: jspb.Message.getFieldWithDefault(msg, 1, 0),
        amountList: jspb.Message.toObjectList(
          msg.getAmountList(),
          cosmos_base_v1beta1_coin_pb.Coin.toObject,
          includeInstance,
        ),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.vesting.v1beta1.Period}
 */
proto.cosmos.vesting.v1beta1.Period.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.cosmos.vesting.v1beta1.Period()
  return proto.cosmos.vesting.v1beta1.Period.deserializeBinaryFromReader(
    msg,
    reader,
  )
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.vesting.v1beta1.Period} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.vesting.v1beta1.Period}
 */
proto.cosmos.vesting.v1beta1.Period.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt64())
        msg.setLength(value)
        break
      case 2:
        var value = new cosmos_base_v1beta1_coin_pb.Coin()
        reader.readMessage(
          value,
          cosmos_base_v1beta1_coin_pb.Coin.deserializeBinaryFromReader,
        )
        msg.addAmount(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.vesting.v1beta1.Period.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.cosmos.vesting.v1beta1.Period.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.vesting.v1beta1.Period} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.vesting.v1beta1.Period.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined
  f = message.getLength()
  if (f !== 0) {
    writer.writeInt64(1, f)
  }
  f = message.getAmountList()
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      cosmos_base_v1beta1_coin_pb.Coin.serializeBinaryToWriter,
    )
  }
}

/**
 * optional int64 length = 1;
 * @return {number}
 */
proto.cosmos.vesting.v1beta1.Period.prototype.getLength = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0))
}

/**
 * @param {number} value
 * @return {!proto.cosmos.vesting.v1beta1.Period} returns this
 */
proto.cosmos.vesting.v1beta1.Period.prototype.setLength = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value)
}

/**
 * repeated cosmos.base.v1beta1.Coin amount = 2;
 * @return {!Array<!proto.cosmos.base.v1beta1.Coin>}
 */
proto.cosmos.vesting.v1beta1.Period.prototype.getAmountList = function () {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.Coin>} */ (
    jspb.Message.getRepeatedWrapperField(
      this,
      cosmos_base_v1beta1_coin_pb.Coin,
      2,
    )
  )
}

/**
 * @param {!Array<!proto.cosmos.base.v1beta1.Coin>} value
 * @return {!proto.cosmos.vesting.v1beta1.Period} returns this
 */
proto.cosmos.vesting.v1beta1.Period.prototype.setAmountList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value)
}

/**
 * @param {!proto.cosmos.base.v1beta1.Coin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.Coin}
 */
proto.cosmos.vesting.v1beta1.Period.prototype.addAmount = function (
  opt_value,
  opt_index,
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    2,
    opt_value,
    proto.cosmos.base.v1beta1.Coin,
    opt_index,
  )
}

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cosmos.vesting.v1beta1.Period} returns this
 */
proto.cosmos.vesting.v1beta1.Period.prototype.clearAmountList = function () {
  return this.setAmountList([])
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cosmos.vesting.v1beta1.PeriodicVestingAccount.repeatedFields_ = [3]

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.cosmos.vesting.v1beta1.PeriodicVestingAccount.prototype.toObject =
    function (opt_includeInstance) {
      return proto.cosmos.vesting.v1beta1.PeriodicVestingAccount.toObject(
        opt_includeInstance,
        this,
      )
    }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.cosmos.vesting.v1beta1.PeriodicVestingAccount} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.cosmos.vesting.v1beta1.PeriodicVestingAccount.toObject = function (
    includeInstance,
    msg,
  ) {
    var f,
      obj = {
        baseVestingAccount:
          (f = msg.getBaseVestingAccount()) &&
          proto.cosmos.vesting.v1beta1.BaseVestingAccount.toObject(
            includeInstance,
            f,
          ),
        startTime: jspb.Message.getFieldWithDefault(msg, 2, 0),
        vestingPeriodsList: jspb.Message.toObjectList(
          msg.getVestingPeriodsList(),
          proto.cosmos.vesting.v1beta1.Period.toObject,
          includeInstance,
        ),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.vesting.v1beta1.PeriodicVestingAccount}
 */
proto.cosmos.vesting.v1beta1.PeriodicVestingAccount.deserializeBinary =
  function (bytes) {
    var reader = new jspb.BinaryReader(bytes)
    var msg = new proto.cosmos.vesting.v1beta1.PeriodicVestingAccount()
    return proto.cosmos.vesting.v1beta1.PeriodicVestingAccount.deserializeBinaryFromReader(
      msg,
      reader,
    )
  }

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.vesting.v1beta1.PeriodicVestingAccount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.vesting.v1beta1.PeriodicVestingAccount}
 */
proto.cosmos.vesting.v1beta1.PeriodicVestingAccount.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break
      }
      var field = reader.getFieldNumber()
      switch (field) {
        case 1:
          var value = new proto.cosmos.vesting.v1beta1.BaseVestingAccount()
          reader.readMessage(
            value,
            proto.cosmos.vesting.v1beta1.BaseVestingAccount
              .deserializeBinaryFromReader,
          )
          msg.setBaseVestingAccount(value)
          break
        case 2:
          var value = /** @type {number} */ (reader.readInt64())
          msg.setStartTime(value)
          break
        case 3:
          var value = new proto.cosmos.vesting.v1beta1.Period()
          reader.readMessage(
            value,
            proto.cosmos.vesting.v1beta1.Period.deserializeBinaryFromReader,
          )
          msg.addVestingPeriods(value)
          break
        default:
          reader.skipField()
          break
      }
    }
    return msg
  }

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.vesting.v1beta1.PeriodicVestingAccount.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter()
    proto.cosmos.vesting.v1beta1.PeriodicVestingAccount.serializeBinaryToWriter(
      this,
      writer,
    )
    return writer.getResultBuffer()
  }

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.vesting.v1beta1.PeriodicVestingAccount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.vesting.v1beta1.PeriodicVestingAccount.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined
    f = message.getBaseVestingAccount()
    if (f != null) {
      writer.writeMessage(
        1,
        f,
        proto.cosmos.vesting.v1beta1.BaseVestingAccount.serializeBinaryToWriter,
      )
    }
    f = message.getStartTime()
    if (f !== 0) {
      writer.writeInt64(2, f)
    }
    f = message.getVestingPeriodsList()
    if (f.length > 0) {
      writer.writeRepeatedMessage(
        3,
        f,
        proto.cosmos.vesting.v1beta1.Period.serializeBinaryToWriter,
      )
    }
  }

/**
 * optional BaseVestingAccount base_vesting_account = 1;
 * @return {?proto.cosmos.vesting.v1beta1.BaseVestingAccount}
 */
proto.cosmos.vesting.v1beta1.PeriodicVestingAccount.prototype.getBaseVestingAccount =
  function () {
    return /** @type{?proto.cosmos.vesting.v1beta1.BaseVestingAccount} */ (
      jspb.Message.getWrapperField(
        this,
        proto.cosmos.vesting.v1beta1.BaseVestingAccount,
        1,
      )
    )
  }

/**
 * @param {?proto.cosmos.vesting.v1beta1.BaseVestingAccount|undefined} value
 * @return {!proto.cosmos.vesting.v1beta1.PeriodicVestingAccount} returns this
 */
proto.cosmos.vesting.v1beta1.PeriodicVestingAccount.prototype.setBaseVestingAccount =
  function (value) {
    return jspb.Message.setWrapperField(this, 1, value)
  }

/**
 * Clears the message field making it undefined.
 * @return {!proto.cosmos.vesting.v1beta1.PeriodicVestingAccount} returns this
 */
proto.cosmos.vesting.v1beta1.PeriodicVestingAccount.prototype.clearBaseVestingAccount =
  function () {
    return this.setBaseVestingAccount(undefined)
  }

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cosmos.vesting.v1beta1.PeriodicVestingAccount.prototype.hasBaseVestingAccount =
  function () {
    return jspb.Message.getField(this, 1) != null
  }

/**
 * optional int64 start_time = 2;
 * @return {number}
 */
proto.cosmos.vesting.v1beta1.PeriodicVestingAccount.prototype.getStartTime =
  function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0))
  }

/**
 * @param {number} value
 * @return {!proto.cosmos.vesting.v1beta1.PeriodicVestingAccount} returns this
 */
proto.cosmos.vesting.v1beta1.PeriodicVestingAccount.prototype.setStartTime =
  function (value) {
    return jspb.Message.setProto3IntField(this, 2, value)
  }

/**
 * repeated Period vesting_periods = 3;
 * @return {!Array<!proto.cosmos.vesting.v1beta1.Period>}
 */
proto.cosmos.vesting.v1beta1.PeriodicVestingAccount.prototype.getVestingPeriodsList =
  function () {
    return /** @type{!Array<!proto.cosmos.vesting.v1beta1.Period>} */ (
      jspb.Message.getRepeatedWrapperField(
        this,
        proto.cosmos.vesting.v1beta1.Period,
        3,
      )
    )
  }

/**
 * @param {!Array<!proto.cosmos.vesting.v1beta1.Period>} value
 * @return {!proto.cosmos.vesting.v1beta1.PeriodicVestingAccount} returns this
 */
proto.cosmos.vesting.v1beta1.PeriodicVestingAccount.prototype.setVestingPeriodsList =
  function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 3, value)
  }

/**
 * @param {!proto.cosmos.vesting.v1beta1.Period=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.vesting.v1beta1.Period}
 */
proto.cosmos.vesting.v1beta1.PeriodicVestingAccount.prototype.addVestingPeriods =
  function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(
      this,
      3,
      opt_value,
      proto.cosmos.vesting.v1beta1.Period,
      opt_index,
    )
  }

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cosmos.vesting.v1beta1.PeriodicVestingAccount} returns this
 */
proto.cosmos.vesting.v1beta1.PeriodicVestingAccount.prototype.clearVestingPeriodsList =
  function () {
    return this.setVestingPeriodsList([])
  }

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.cosmos.vesting.v1beta1.PermanentLockedAccount.prototype.toObject =
    function (opt_includeInstance) {
      return proto.cosmos.vesting.v1beta1.PermanentLockedAccount.toObject(
        opt_includeInstance,
        this,
      )
    }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.cosmos.vesting.v1beta1.PermanentLockedAccount} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.cosmos.vesting.v1beta1.PermanentLockedAccount.toObject = function (
    includeInstance,
    msg,
  ) {
    var f,
      obj = {
        baseVestingAccount:
          (f = msg.getBaseVestingAccount()) &&
          proto.cosmos.vesting.v1beta1.BaseVestingAccount.toObject(
            includeInstance,
            f,
          ),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.vesting.v1beta1.PermanentLockedAccount}
 */
proto.cosmos.vesting.v1beta1.PermanentLockedAccount.deserializeBinary =
  function (bytes) {
    var reader = new jspb.BinaryReader(bytes)
    var msg = new proto.cosmos.vesting.v1beta1.PermanentLockedAccount()
    return proto.cosmos.vesting.v1beta1.PermanentLockedAccount.deserializeBinaryFromReader(
      msg,
      reader,
    )
  }

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.vesting.v1beta1.PermanentLockedAccount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.vesting.v1beta1.PermanentLockedAccount}
 */
proto.cosmos.vesting.v1beta1.PermanentLockedAccount.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break
      }
      var field = reader.getFieldNumber()
      switch (field) {
        case 1:
          var value = new proto.cosmos.vesting.v1beta1.BaseVestingAccount()
          reader.readMessage(
            value,
            proto.cosmos.vesting.v1beta1.BaseVestingAccount
              .deserializeBinaryFromReader,
          )
          msg.setBaseVestingAccount(value)
          break
        default:
          reader.skipField()
          break
      }
    }
    return msg
  }

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.vesting.v1beta1.PermanentLockedAccount.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter()
    proto.cosmos.vesting.v1beta1.PermanentLockedAccount.serializeBinaryToWriter(
      this,
      writer,
    )
    return writer.getResultBuffer()
  }

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.vesting.v1beta1.PermanentLockedAccount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.vesting.v1beta1.PermanentLockedAccount.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined
    f = message.getBaseVestingAccount()
    if (f != null) {
      writer.writeMessage(
        1,
        f,
        proto.cosmos.vesting.v1beta1.BaseVestingAccount.serializeBinaryToWriter,
      )
    }
  }

/**
 * optional BaseVestingAccount base_vesting_account = 1;
 * @return {?proto.cosmos.vesting.v1beta1.BaseVestingAccount}
 */
proto.cosmos.vesting.v1beta1.PermanentLockedAccount.prototype.getBaseVestingAccount =
  function () {
    return /** @type{?proto.cosmos.vesting.v1beta1.BaseVestingAccount} */ (
      jspb.Message.getWrapperField(
        this,
        proto.cosmos.vesting.v1beta1.BaseVestingAccount,
        1,
      )
    )
  }

/**
 * @param {?proto.cosmos.vesting.v1beta1.BaseVestingAccount|undefined} value
 * @return {!proto.cosmos.vesting.v1beta1.PermanentLockedAccount} returns this
 */
proto.cosmos.vesting.v1beta1.PermanentLockedAccount.prototype.setBaseVestingAccount =
  function (value) {
    return jspb.Message.setWrapperField(this, 1, value)
  }

/**
 * Clears the message field making it undefined.
 * @return {!proto.cosmos.vesting.v1beta1.PermanentLockedAccount} returns this
 */
proto.cosmos.vesting.v1beta1.PermanentLockedAccount.prototype.clearBaseVestingAccount =
  function () {
    return this.setBaseVestingAccount(undefined)
  }

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cosmos.vesting.v1beta1.PermanentLockedAccount.prototype.hasBaseVestingAccount =
  function () {
    return jspb.Message.getField(this, 1) != null
  }

goog.object.extend(exports, proto.cosmos.vesting.v1beta1)
