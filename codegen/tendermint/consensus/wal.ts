/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: tendermint/consensus/wal.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../../gogoproto/gogo";
import * as dependency_2 from "./types";
import * as dependency_3 from "./../types/events";
import * as dependency_4 from "./../../google/protobuf/duration";
import * as dependency_5 from "./../../google/protobuf/timestamp";
import * as pb_1 from "google-protobuf";
export namespace tendermint.consensus {
    export class MsgInfo extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            msg?: dependency_2.tendermint.consensus.Message;
            peer_id?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("msg" in data && data.msg != undefined) {
                    this.msg = data.msg;
                }
                if ("peer_id" in data && data.peer_id != undefined) {
                    this.peer_id = data.peer_id;
                }
            }
        }
        get msg() {
            return pb_1.Message.getWrapperField(this, dependency_2.tendermint.consensus.Message, 1) as dependency_2.tendermint.consensus.Message;
        }
        set msg(value: dependency_2.tendermint.consensus.Message) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_msg() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get peer_id() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set peer_id(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data: {
            msg?: ReturnType<typeof dependency_2.tendermint.consensus.Message.prototype.toObject>;
            peer_id?: string;
        }): MsgInfo {
            const message = new MsgInfo({});
            if (data.msg != null) {
                message.msg = dependency_2.tendermint.consensus.Message.fromObject(data.msg);
            }
            if (data.peer_id != null) {
                message.peer_id = data.peer_id;
            }
            return message;
        }
        toObject() {
            const data: {
                msg?: ReturnType<typeof dependency_2.tendermint.consensus.Message.prototype.toObject>;
                peer_id?: string;
            } = {};
            if (this.msg != null) {
                data.msg = this.msg.toObject();
            }
            if (this.peer_id != null) {
                data.peer_id = this.peer_id;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_msg)
                writer.writeMessage(1, this.msg, () => this.msg.serialize(writer));
            if (this.peer_id.length)
                writer.writeString(2, this.peer_id);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): MsgInfo {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgInfo();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.msg, () => message.msg = dependency_2.tendermint.consensus.Message.deserialize(reader));
                        break;
                    case 2:
                        message.peer_id = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): MsgInfo {
            return MsgInfo.deserialize(bytes);
        }
    }
    export class TimeoutInfo extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            duration?: dependency_4.google.protobuf.Duration;
            height?: number;
            round?: number;
            step?: number;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("duration" in data && data.duration != undefined) {
                    this.duration = data.duration;
                }
                if ("height" in data && data.height != undefined) {
                    this.height = data.height;
                }
                if ("round" in data && data.round != undefined) {
                    this.round = data.round;
                }
                if ("step" in data && data.step != undefined) {
                    this.step = data.step;
                }
            }
        }
        get duration() {
            return pb_1.Message.getWrapperField(this, dependency_4.google.protobuf.Duration, 1) as dependency_4.google.protobuf.Duration;
        }
        set duration(value: dependency_4.google.protobuf.Duration) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_duration() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get height() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set height(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get round() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;
        }
        set round(value: number) {
            pb_1.Message.setField(this, 3, value);
        }
        get step() {
            return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;
        }
        set step(value: number) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data: {
            duration?: ReturnType<typeof dependency_4.google.protobuf.Duration.prototype.toObject>;
            height?: number;
            round?: number;
            step?: number;
        }): TimeoutInfo {
            const message = new TimeoutInfo({});
            if (data.duration != null) {
                message.duration = dependency_4.google.protobuf.Duration.fromObject(data.duration);
            }
            if (data.height != null) {
                message.height = data.height;
            }
            if (data.round != null) {
                message.round = data.round;
            }
            if (data.step != null) {
                message.step = data.step;
            }
            return message;
        }
        toObject() {
            const data: {
                duration?: ReturnType<typeof dependency_4.google.protobuf.Duration.prototype.toObject>;
                height?: number;
                round?: number;
                step?: number;
            } = {};
            if (this.duration != null) {
                data.duration = this.duration.toObject();
            }
            if (this.height != null) {
                data.height = this.height;
            }
            if (this.round != null) {
                data.round = this.round;
            }
            if (this.step != null) {
                data.step = this.step;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_duration)
                writer.writeMessage(1, this.duration, () => this.duration.serialize(writer));
            if (this.height != 0)
                writer.writeInt64(2, this.height);
            if (this.round != 0)
                writer.writeInt32(3, this.round);
            if (this.step != 0)
                writer.writeUint32(4, this.step);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): TimeoutInfo {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new TimeoutInfo();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.duration, () => message.duration = dependency_4.google.protobuf.Duration.deserialize(reader));
                        break;
                    case 2:
                        message.height = reader.readInt64();
                        break;
                    case 3:
                        message.round = reader.readInt32();
                        break;
                    case 4:
                        message.step = reader.readUint32();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): TimeoutInfo {
            return TimeoutInfo.deserialize(bytes);
        }
    }
    export class EndHeight extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            height?: number;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("height" in data && data.height != undefined) {
                    this.height = data.height;
                }
            }
        }
        get height() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set height(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data: {
            height?: number;
        }): EndHeight {
            const message = new EndHeight({});
            if (data.height != null) {
                message.height = data.height;
            }
            return message;
        }
        toObject() {
            const data: {
                height?: number;
            } = {};
            if (this.height != null) {
                data.height = this.height;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.height != 0)
                writer.writeInt64(1, this.height);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): EndHeight {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new EndHeight();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.height = reader.readInt64();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): EndHeight {
            return EndHeight.deserialize(bytes);
        }
    }
    export class WALMessage extends pb_1.Message {
        #one_of_decls: number[][] = [[1, 2, 3, 4]];
        constructor(data?: any[] | ({} & (({
            event_data_round_state?: dependency_3.tendermint.types.EventDataRoundState;
            msg_info?: never;
            timeout_info?: never;
            end_height?: never;
        } | {
            event_data_round_state?: never;
            msg_info?: MsgInfo;
            timeout_info?: never;
            end_height?: never;
        } | {
            event_data_round_state?: never;
            msg_info?: never;
            timeout_info?: TimeoutInfo;
            end_height?: never;
        } | {
            event_data_round_state?: never;
            msg_info?: never;
            timeout_info?: never;
            end_height?: EndHeight;
        })))) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("event_data_round_state" in data && data.event_data_round_state != undefined) {
                    this.event_data_round_state = data.event_data_round_state;
                }
                if ("msg_info" in data && data.msg_info != undefined) {
                    this.msg_info = data.msg_info;
                }
                if ("timeout_info" in data && data.timeout_info != undefined) {
                    this.timeout_info = data.timeout_info;
                }
                if ("end_height" in data && data.end_height != undefined) {
                    this.end_height = data.end_height;
                }
            }
        }
        get event_data_round_state() {
            return pb_1.Message.getWrapperField(this, dependency_3.tendermint.types.EventDataRoundState, 1) as dependency_3.tendermint.types.EventDataRoundState;
        }
        set event_data_round_state(value: dependency_3.tendermint.types.EventDataRoundState) {
            pb_1.Message.setOneofWrapperField(this, 1, this.#one_of_decls[0], value);
        }
        get has_event_data_round_state() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get msg_info() {
            return pb_1.Message.getWrapperField(this, MsgInfo, 2) as MsgInfo;
        }
        set msg_info(value: MsgInfo) {
            pb_1.Message.setOneofWrapperField(this, 2, this.#one_of_decls[0], value);
        }
        get has_msg_info() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get timeout_info() {
            return pb_1.Message.getWrapperField(this, TimeoutInfo, 3) as TimeoutInfo;
        }
        set timeout_info(value: TimeoutInfo) {
            pb_1.Message.setOneofWrapperField(this, 3, this.#one_of_decls[0], value);
        }
        get has_timeout_info() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get end_height() {
            return pb_1.Message.getWrapperField(this, EndHeight, 4) as EndHeight;
        }
        set end_height(value: EndHeight) {
            pb_1.Message.setOneofWrapperField(this, 4, this.#one_of_decls[0], value);
        }
        get has_end_height() {
            return pb_1.Message.getField(this, 4) != null;
        }
        get sum() {
            const cases: {
                [index: number]: "none" | "event_data_round_state" | "msg_info" | "timeout_info" | "end_height";
            } = {
                0: "none",
                1: "event_data_round_state",
                2: "msg_info",
                3: "timeout_info",
                4: "end_height"
            };
            return cases[pb_1.Message.computeOneofCase(this, [1, 2, 3, 4])];
        }
        static fromObject(data: {
            event_data_round_state?: ReturnType<typeof dependency_3.tendermint.types.EventDataRoundState.prototype.toObject>;
            msg_info?: ReturnType<typeof MsgInfo.prototype.toObject>;
            timeout_info?: ReturnType<typeof TimeoutInfo.prototype.toObject>;
            end_height?: ReturnType<typeof EndHeight.prototype.toObject>;
        }): WALMessage {
            const message = new WALMessage({});
            if (data.event_data_round_state != null) {
                message.event_data_round_state = dependency_3.tendermint.types.EventDataRoundState.fromObject(data.event_data_round_state);
            }
            if (data.msg_info != null) {
                message.msg_info = MsgInfo.fromObject(data.msg_info);
            }
            if (data.timeout_info != null) {
                message.timeout_info = TimeoutInfo.fromObject(data.timeout_info);
            }
            if (data.end_height != null) {
                message.end_height = EndHeight.fromObject(data.end_height);
            }
            return message;
        }
        toObject() {
            const data: {
                event_data_round_state?: ReturnType<typeof dependency_3.tendermint.types.EventDataRoundState.prototype.toObject>;
                msg_info?: ReturnType<typeof MsgInfo.prototype.toObject>;
                timeout_info?: ReturnType<typeof TimeoutInfo.prototype.toObject>;
                end_height?: ReturnType<typeof EndHeight.prototype.toObject>;
            } = {};
            if (this.event_data_round_state != null) {
                data.event_data_round_state = this.event_data_round_state.toObject();
            }
            if (this.msg_info != null) {
                data.msg_info = this.msg_info.toObject();
            }
            if (this.timeout_info != null) {
                data.timeout_info = this.timeout_info.toObject();
            }
            if (this.end_height != null) {
                data.end_height = this.end_height.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_event_data_round_state)
                writer.writeMessage(1, this.event_data_round_state, () => this.event_data_round_state.serialize(writer));
            if (this.has_msg_info)
                writer.writeMessage(2, this.msg_info, () => this.msg_info.serialize(writer));
            if (this.has_timeout_info)
                writer.writeMessage(3, this.timeout_info, () => this.timeout_info.serialize(writer));
            if (this.has_end_height)
                writer.writeMessage(4, this.end_height, () => this.end_height.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): WALMessage {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new WALMessage();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.event_data_round_state, () => message.event_data_round_state = dependency_3.tendermint.types.EventDataRoundState.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.msg_info, () => message.msg_info = MsgInfo.deserialize(reader));
                        break;
                    case 3:
                        reader.readMessage(message.timeout_info, () => message.timeout_info = TimeoutInfo.deserialize(reader));
                        break;
                    case 4:
                        reader.readMessage(message.end_height, () => message.end_height = EndHeight.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): WALMessage {
            return WALMessage.deserialize(bytes);
        }
    }
    export class TimedWALMessage extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            time?: dependency_5.google.protobuf.Timestamp;
            msg?: WALMessage;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("time" in data && data.time != undefined) {
                    this.time = data.time;
                }
                if ("msg" in data && data.msg != undefined) {
                    this.msg = data.msg;
                }
            }
        }
        get time() {
            return pb_1.Message.getWrapperField(this, dependency_5.google.protobuf.Timestamp, 1) as dependency_5.google.protobuf.Timestamp;
        }
        set time(value: dependency_5.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_time() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get msg() {
            return pb_1.Message.getWrapperField(this, WALMessage, 2) as WALMessage;
        }
        set msg(value: WALMessage) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_msg() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            time?: ReturnType<typeof dependency_5.google.protobuf.Timestamp.prototype.toObject>;
            msg?: ReturnType<typeof WALMessage.prototype.toObject>;
        }): TimedWALMessage {
            const message = new TimedWALMessage({});
            if (data.time != null) {
                message.time = dependency_5.google.protobuf.Timestamp.fromObject(data.time);
            }
            if (data.msg != null) {
                message.msg = WALMessage.fromObject(data.msg);
            }
            return message;
        }
        toObject() {
            const data: {
                time?: ReturnType<typeof dependency_5.google.protobuf.Timestamp.prototype.toObject>;
                msg?: ReturnType<typeof WALMessage.prototype.toObject>;
            } = {};
            if (this.time != null) {
                data.time = this.time.toObject();
            }
            if (this.msg != null) {
                data.msg = this.msg.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_time)
                writer.writeMessage(1, this.time, () => this.time.serialize(writer));
            if (this.has_msg)
                writer.writeMessage(2, this.msg, () => this.msg.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): TimedWALMessage {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new TimedWALMessage();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.time, () => message.time = dependency_5.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.msg, () => message.msg = WALMessage.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): TimedWALMessage {
            return TimedWALMessage.deserialize(bytes);
        }
    }
}
