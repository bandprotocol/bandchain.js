/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: band/bandtss/v1beta1/tx.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../../../gogoproto/gogo";
import * as dependency_2 from "./../../../google/protobuf/any";
import * as dependency_3 from "./../../../google/protobuf/timestamp";
import * as dependency_4 from "./../../../amino/amino";
import * as dependency_5 from "./../../../cosmos/base/v1beta1/coin";
import * as dependency_6 from "./../../../cosmos_proto/cosmos";
import * as dependency_7 from "./../../../cosmos/msg/v1/msg";
import * as dependency_8 from "./genesis";
import * as pb_1 from "google-protobuf";
import * as grpc_1 from "@grpc/grpc-js";
export namespace band.bandtss.v1beta1 {
    export class MsgRequestSignature extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            content?: dependency_2.google.protobuf.Any;
            memo?: string;
            fee_limit?: dependency_5.cosmos.base.v1beta1.Coin[];
            sender?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("content" in data && data.content != undefined) {
                    this.content = data.content;
                }
                if ("memo" in data && data.memo != undefined) {
                    this.memo = data.memo;
                }
                if ("fee_limit" in data && data.fee_limit != undefined) {
                    this.fee_limit = data.fee_limit;
                }
                if ("sender" in data && data.sender != undefined) {
                    this.sender = data.sender;
                }
            }
        }
        get content() {
            return pb_1.Message.getWrapperField(this, dependency_2.google.protobuf.Any, 1) as dependency_2.google.protobuf.Any;
        }
        set content(value: dependency_2.google.protobuf.Any) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_content() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get memo() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set memo(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get fee_limit() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_5.cosmos.base.v1beta1.Coin, 3) as dependency_5.cosmos.base.v1beta1.Coin[];
        }
        set fee_limit(value: dependency_5.cosmos.base.v1beta1.Coin[]) {
            pb_1.Message.setRepeatedWrapperField(this, 3, value);
        }
        get sender() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set sender(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data: {
            content?: ReturnType<typeof dependency_2.google.protobuf.Any.prototype.toObject>;
            memo?: string;
            fee_limit?: ReturnType<typeof dependency_5.cosmos.base.v1beta1.Coin.prototype.toObject>[];
            sender?: string;
        }): MsgRequestSignature {
            const message = new MsgRequestSignature({});
            if (data.content != null) {
                message.content = dependency_2.google.protobuf.Any.fromObject(data.content);
            }
            if (data.memo != null) {
                message.memo = data.memo;
            }
            if (data.fee_limit != null) {
                message.fee_limit = data.fee_limit.map(item => dependency_5.cosmos.base.v1beta1.Coin.fromObject(item));
            }
            if (data.sender != null) {
                message.sender = data.sender;
            }
            return message;
        }
        toObject() {
            const data: {
                content?: ReturnType<typeof dependency_2.google.protobuf.Any.prototype.toObject>;
                memo?: string;
                fee_limit?: ReturnType<typeof dependency_5.cosmos.base.v1beta1.Coin.prototype.toObject>[];
                sender?: string;
            } = {};
            if (this.content != null) {
                data.content = this.content.toObject();
            }
            if (this.memo != null) {
                data.memo = this.memo;
            }
            if (this.fee_limit != null) {
                data.fee_limit = this.fee_limit.map((item: dependency_5.cosmos.base.v1beta1.Coin) => item.toObject());
            }
            if (this.sender != null) {
                data.sender = this.sender;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_content)
                writer.writeMessage(1, this.content, () => this.content.serialize(writer));
            if (this.memo.length)
                writer.writeString(2, this.memo);
            if (this.fee_limit.length)
                writer.writeRepeatedMessage(3, this.fee_limit, (item: dependency_5.cosmos.base.v1beta1.Coin) => item.serialize(writer));
            if (this.sender.length)
                writer.writeString(4, this.sender);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): MsgRequestSignature {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgRequestSignature();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.content, () => message.content = dependency_2.google.protobuf.Any.deserialize(reader));
                        break;
                    case 2:
                        message.memo = reader.readString();
                        break;
                    case 3:
                        reader.readMessage(message.fee_limit, () => pb_1.Message.addToRepeatedWrapperField(message, 3, dependency_5.cosmos.base.v1beta1.Coin.deserialize(reader), dependency_5.cosmos.base.v1beta1.Coin));
                        break;
                    case 4:
                        message.sender = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): MsgRequestSignature {
            return MsgRequestSignature.deserialize(bytes);
        }
    }
    export class MsgRequestSignatureResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {}) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data: {}): MsgRequestSignatureResponse {
            const message = new MsgRequestSignatureResponse({});
            return message;
        }
        toObject() {
            const data: {} = {};
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): MsgRequestSignatureResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgRequestSignatureResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): MsgRequestSignatureResponse {
            return MsgRequestSignatureResponse.deserialize(bytes);
        }
    }
    export class MsgActivate extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            sender?: string;
            group_id?: number;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("sender" in data && data.sender != undefined) {
                    this.sender = data.sender;
                }
                if ("group_id" in data && data.group_id != undefined) {
                    this.group_id = data.group_id;
                }
            }
        }
        get sender() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set sender(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get group_id() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set group_id(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data: {
            sender?: string;
            group_id?: number;
        }): MsgActivate {
            const message = new MsgActivate({});
            if (data.sender != null) {
                message.sender = data.sender;
            }
            if (data.group_id != null) {
                message.group_id = data.group_id;
            }
            return message;
        }
        toObject() {
            const data: {
                sender?: string;
                group_id?: number;
            } = {};
            if (this.sender != null) {
                data.sender = this.sender;
            }
            if (this.group_id != null) {
                data.group_id = this.group_id;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.sender.length)
                writer.writeString(1, this.sender);
            if (this.group_id != 0)
                writer.writeUint64(2, this.group_id);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): MsgActivate {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgActivate();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.sender = reader.readString();
                        break;
                    case 2:
                        message.group_id = reader.readUint64();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): MsgActivate {
            return MsgActivate.deserialize(bytes);
        }
    }
    export class MsgActivateResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {}) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data: {}): MsgActivateResponse {
            const message = new MsgActivateResponse({});
            return message;
        }
        toObject() {
            const data: {} = {};
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): MsgActivateResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgActivateResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): MsgActivateResponse {
            return MsgActivateResponse.deserialize(bytes);
        }
    }
    export class MsgUpdateParams extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            params?: dependency_8.band.bandtss.v1beta1.Params;
            authority?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("params" in data && data.params != undefined) {
                    this.params = data.params;
                }
                if ("authority" in data && data.authority != undefined) {
                    this.authority = data.authority;
                }
            }
        }
        get params() {
            return pb_1.Message.getWrapperField(this, dependency_8.band.bandtss.v1beta1.Params, 1) as dependency_8.band.bandtss.v1beta1.Params;
        }
        set params(value: dependency_8.band.bandtss.v1beta1.Params) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_params() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get authority() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set authority(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data: {
            params?: ReturnType<typeof dependency_8.band.bandtss.v1beta1.Params.prototype.toObject>;
            authority?: string;
        }): MsgUpdateParams {
            const message = new MsgUpdateParams({});
            if (data.params != null) {
                message.params = dependency_8.band.bandtss.v1beta1.Params.fromObject(data.params);
            }
            if (data.authority != null) {
                message.authority = data.authority;
            }
            return message;
        }
        toObject() {
            const data: {
                params?: ReturnType<typeof dependency_8.band.bandtss.v1beta1.Params.prototype.toObject>;
                authority?: string;
            } = {};
            if (this.params != null) {
                data.params = this.params.toObject();
            }
            if (this.authority != null) {
                data.authority = this.authority;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_params)
                writer.writeMessage(1, this.params, () => this.params.serialize(writer));
            if (this.authority.length)
                writer.writeString(2, this.authority);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): MsgUpdateParams {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgUpdateParams();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.params, () => message.params = dependency_8.band.bandtss.v1beta1.Params.deserialize(reader));
                        break;
                    case 2:
                        message.authority = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): MsgUpdateParams {
            return MsgUpdateParams.deserialize(bytes);
        }
    }
    export class MsgUpdateParamsResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {}) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data: {}): MsgUpdateParamsResponse {
            const message = new MsgUpdateParamsResponse({});
            return message;
        }
        toObject() {
            const data: {} = {};
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): MsgUpdateParamsResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgUpdateParamsResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): MsgUpdateParamsResponse {
            return MsgUpdateParamsResponse.deserialize(bytes);
        }
    }
    export class MsgTransitionGroup extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            members?: string[];
            threshold?: number;
            exec_time?: dependency_3.google.protobuf.Timestamp;
            authority?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("members" in data && data.members != undefined) {
                    this.members = data.members;
                }
                if ("threshold" in data && data.threshold != undefined) {
                    this.threshold = data.threshold;
                }
                if ("exec_time" in data && data.exec_time != undefined) {
                    this.exec_time = data.exec_time;
                }
                if ("authority" in data && data.authority != undefined) {
                    this.authority = data.authority;
                }
            }
        }
        get members() {
            return pb_1.Message.getFieldWithDefault(this, 1, []) as string[];
        }
        set members(value: string[]) {
            pb_1.Message.setField(this, 1, value);
        }
        get threshold() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set threshold(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get exec_time() {
            return pb_1.Message.getWrapperField(this, dependency_3.google.protobuf.Timestamp, 3) as dependency_3.google.protobuf.Timestamp;
        }
        set exec_time(value: dependency_3.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_exec_time() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get authority() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set authority(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data: {
            members?: string[];
            threshold?: number;
            exec_time?: ReturnType<typeof dependency_3.google.protobuf.Timestamp.prototype.toObject>;
            authority?: string;
        }): MsgTransitionGroup {
            const message = new MsgTransitionGroup({});
            if (data.members != null) {
                message.members = data.members;
            }
            if (data.threshold != null) {
                message.threshold = data.threshold;
            }
            if (data.exec_time != null) {
                message.exec_time = dependency_3.google.protobuf.Timestamp.fromObject(data.exec_time);
            }
            if (data.authority != null) {
                message.authority = data.authority;
            }
            return message;
        }
        toObject() {
            const data: {
                members?: string[];
                threshold?: number;
                exec_time?: ReturnType<typeof dependency_3.google.protobuf.Timestamp.prototype.toObject>;
                authority?: string;
            } = {};
            if (this.members != null) {
                data.members = this.members;
            }
            if (this.threshold != null) {
                data.threshold = this.threshold;
            }
            if (this.exec_time != null) {
                data.exec_time = this.exec_time.toObject();
            }
            if (this.authority != null) {
                data.authority = this.authority;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.members.length)
                writer.writeRepeatedString(1, this.members);
            if (this.threshold != 0)
                writer.writeUint64(2, this.threshold);
            if (this.has_exec_time)
                writer.writeMessage(3, this.exec_time, () => this.exec_time.serialize(writer));
            if (this.authority.length)
                writer.writeString(4, this.authority);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): MsgTransitionGroup {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgTransitionGroup();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        pb_1.Message.addToRepeatedField(message, 1, reader.readString());
                        break;
                    case 2:
                        message.threshold = reader.readUint64();
                        break;
                    case 3:
                        reader.readMessage(message.exec_time, () => message.exec_time = dependency_3.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 4:
                        message.authority = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): MsgTransitionGroup {
            return MsgTransitionGroup.deserialize(bytes);
        }
    }
    export class MsgTransitionGroupResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {}) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data: {}): MsgTransitionGroupResponse {
            const message = new MsgTransitionGroupResponse({});
            return message;
        }
        toObject() {
            const data: {} = {};
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): MsgTransitionGroupResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgTransitionGroupResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): MsgTransitionGroupResponse {
            return MsgTransitionGroupResponse.deserialize(bytes);
        }
    }
    export class MsgForceTransitionGroup extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            incoming_group_id?: number;
            exec_time?: dependency_3.google.protobuf.Timestamp;
            authority?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("incoming_group_id" in data && data.incoming_group_id != undefined) {
                    this.incoming_group_id = data.incoming_group_id;
                }
                if ("exec_time" in data && data.exec_time != undefined) {
                    this.exec_time = data.exec_time;
                }
                if ("authority" in data && data.authority != undefined) {
                    this.authority = data.authority;
                }
            }
        }
        get incoming_group_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set incoming_group_id(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get exec_time() {
            return pb_1.Message.getWrapperField(this, dependency_3.google.protobuf.Timestamp, 2) as dependency_3.google.protobuf.Timestamp;
        }
        set exec_time(value: dependency_3.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_exec_time() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get authority() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set authority(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        static fromObject(data: {
            incoming_group_id?: number;
            exec_time?: ReturnType<typeof dependency_3.google.protobuf.Timestamp.prototype.toObject>;
            authority?: string;
        }): MsgForceTransitionGroup {
            const message = new MsgForceTransitionGroup({});
            if (data.incoming_group_id != null) {
                message.incoming_group_id = data.incoming_group_id;
            }
            if (data.exec_time != null) {
                message.exec_time = dependency_3.google.protobuf.Timestamp.fromObject(data.exec_time);
            }
            if (data.authority != null) {
                message.authority = data.authority;
            }
            return message;
        }
        toObject() {
            const data: {
                incoming_group_id?: number;
                exec_time?: ReturnType<typeof dependency_3.google.protobuf.Timestamp.prototype.toObject>;
                authority?: string;
            } = {};
            if (this.incoming_group_id != null) {
                data.incoming_group_id = this.incoming_group_id;
            }
            if (this.exec_time != null) {
                data.exec_time = this.exec_time.toObject();
            }
            if (this.authority != null) {
                data.authority = this.authority;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.incoming_group_id != 0)
                writer.writeUint64(1, this.incoming_group_id);
            if (this.has_exec_time)
                writer.writeMessage(2, this.exec_time, () => this.exec_time.serialize(writer));
            if (this.authority.length)
                writer.writeString(3, this.authority);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): MsgForceTransitionGroup {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgForceTransitionGroup();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.incoming_group_id = reader.readUint64();
                        break;
                    case 2:
                        reader.readMessage(message.exec_time, () => message.exec_time = dependency_3.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 3:
                        message.authority = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): MsgForceTransitionGroup {
            return MsgForceTransitionGroup.deserialize(bytes);
        }
    }
    export class MsgForceTransitionGroupResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {}) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data: {}): MsgForceTransitionGroupResponse {
            const message = new MsgForceTransitionGroupResponse({});
            return message;
        }
        toObject() {
            const data: {} = {};
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): MsgForceTransitionGroupResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgForceTransitionGroupResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): MsgForceTransitionGroupResponse {
            return MsgForceTransitionGroupResponse.deserialize(bytes);
        }
    }
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    interface GrpcStreamServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
        (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
    }
    interface GrpWritableServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
    }
    interface GrpcChunkServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
        (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
    }
    interface GrpcPromiseServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): Promise<R>;
        (message: P, options?: grpc_1.CallOptions): Promise<R>;
    }
    export abstract class UnimplementedMsgService {
        static definition = {
            RequestSignature: {
                path: "/band.bandtss.v1beta1.Msg/RequestSignature",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: MsgRequestSignature) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => MsgRequestSignature.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: MsgRequestSignatureResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => MsgRequestSignatureResponse.deserialize(new Uint8Array(bytes))
            },
            Activate: {
                path: "/band.bandtss.v1beta1.Msg/Activate",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: MsgActivate) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => MsgActivate.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: MsgActivateResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => MsgActivateResponse.deserialize(new Uint8Array(bytes))
            },
            UpdateParams: {
                path: "/band.bandtss.v1beta1.Msg/UpdateParams",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: MsgUpdateParams) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => MsgUpdateParams.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: MsgUpdateParamsResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => MsgUpdateParamsResponse.deserialize(new Uint8Array(bytes))
            },
            TransitionGroup: {
                path: "/band.bandtss.v1beta1.Msg/TransitionGroup",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: MsgTransitionGroup) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => MsgTransitionGroup.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: MsgTransitionGroupResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => MsgTransitionGroupResponse.deserialize(new Uint8Array(bytes))
            },
            ForceTransitionGroup: {
                path: "/band.bandtss.v1beta1.Msg/ForceTransitionGroup",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: MsgForceTransitionGroup) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => MsgForceTransitionGroup.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: MsgForceTransitionGroupResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => MsgForceTransitionGroupResponse.deserialize(new Uint8Array(bytes))
            }
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract RequestSignature(call: grpc_1.ServerUnaryCall<MsgRequestSignature, MsgRequestSignatureResponse>, callback: grpc_1.sendUnaryData<MsgRequestSignatureResponse>): void;
        abstract Activate(call: grpc_1.ServerUnaryCall<MsgActivate, MsgActivateResponse>, callback: grpc_1.sendUnaryData<MsgActivateResponse>): void;
        abstract UpdateParams(call: grpc_1.ServerUnaryCall<MsgUpdateParams, MsgUpdateParamsResponse>, callback: grpc_1.sendUnaryData<MsgUpdateParamsResponse>): void;
        abstract TransitionGroup(call: grpc_1.ServerUnaryCall<MsgTransitionGroup, MsgTransitionGroupResponse>, callback: grpc_1.sendUnaryData<MsgTransitionGroupResponse>): void;
        abstract ForceTransitionGroup(call: grpc_1.ServerUnaryCall<MsgForceTransitionGroup, MsgForceTransitionGroupResponse>, callback: grpc_1.sendUnaryData<MsgForceTransitionGroupResponse>): void;
    }
    export class MsgClient extends grpc_1.makeGenericClientConstructor(UnimplementedMsgService.definition, "Msg", {}) {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>) {
            super(address, credentials, options);
        }
        RequestSignature: GrpcUnaryServiceInterface<MsgRequestSignature, MsgRequestSignatureResponse> = (message: MsgRequestSignature, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<MsgRequestSignatureResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<MsgRequestSignatureResponse>, callback?: grpc_1.requestCallback<MsgRequestSignatureResponse>): grpc_1.ClientUnaryCall => {
            return super.RequestSignature(message, metadata, options, callback);
        };
        Activate: GrpcUnaryServiceInterface<MsgActivate, MsgActivateResponse> = (message: MsgActivate, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<MsgActivateResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<MsgActivateResponse>, callback?: grpc_1.requestCallback<MsgActivateResponse>): grpc_1.ClientUnaryCall => {
            return super.Activate(message, metadata, options, callback);
        };
        UpdateParams: GrpcUnaryServiceInterface<MsgUpdateParams, MsgUpdateParamsResponse> = (message: MsgUpdateParams, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<MsgUpdateParamsResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<MsgUpdateParamsResponse>, callback?: grpc_1.requestCallback<MsgUpdateParamsResponse>): grpc_1.ClientUnaryCall => {
            return super.UpdateParams(message, metadata, options, callback);
        };
        TransitionGroup: GrpcUnaryServiceInterface<MsgTransitionGroup, MsgTransitionGroupResponse> = (message: MsgTransitionGroup, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<MsgTransitionGroupResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<MsgTransitionGroupResponse>, callback?: grpc_1.requestCallback<MsgTransitionGroupResponse>): grpc_1.ClientUnaryCall => {
            return super.TransitionGroup(message, metadata, options, callback);
        };
        ForceTransitionGroup: GrpcUnaryServiceInterface<MsgForceTransitionGroup, MsgForceTransitionGroupResponse> = (message: MsgForceTransitionGroup, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<MsgForceTransitionGroupResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<MsgForceTransitionGroupResponse>, callback?: grpc_1.requestCallback<MsgForceTransitionGroupResponse>): grpc_1.ClientUnaryCall => {
            return super.ForceTransitionGroup(message, metadata, options, callback);
        };
    }
}
