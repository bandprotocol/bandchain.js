/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: band/bandtss/v1beta1/query.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../../../gogoproto/gogo";
import * as dependency_2 from "./../../../google/protobuf/timestamp";
import * as dependency_3 from "./../../../cosmos/base/query/v1beta1/pagination";
import * as dependency_4 from "./../../../cosmos/base/v1beta1/coin";
import * as dependency_5 from "./../../../google/api/annotations";
import * as dependency_6 from "./../../tss/v1beta1/tss";
import * as dependency_7 from "./bandtss";
import * as dependency_8 from "./genesis";
import * as pb_1 from "google-protobuf";
import * as grpc_1 from "@grpc/grpc-js";
export namespace band.bandtss.v1beta1 {
    export enum MemberStatusFilter {
        MEMBER_STATUS_FILTER_UNSPECIFIED = 0,
        MEMBER_STATUS_FILTER_ACTIVE = 1,
        MEMBER_STATUS_FILTER_INACTIVE = 2
    }
    export class QueryCountsRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {}) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data: {}): QueryCountsRequest {
            const message = new QueryCountsRequest({});
            return message;
        }
        toObject() {
            const data: {} = {};
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryCountsRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryCountsRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryCountsRequest {
            return QueryCountsRequest.deserialize(bytes);
        }
    }
    export class QueryCountsResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            signing_count?: number;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("signing_count" in data && data.signing_count != undefined) {
                    this.signing_count = data.signing_count;
                }
            }
        }
        get signing_count() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set signing_count(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data: {
            signing_count?: number;
        }): QueryCountsResponse {
            const message = new QueryCountsResponse({});
            if (data.signing_count != null) {
                message.signing_count = data.signing_count;
            }
            return message;
        }
        toObject() {
            const data: {
                signing_count?: number;
            } = {};
            if (this.signing_count != null) {
                data.signing_count = this.signing_count;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.signing_count != 0)
                writer.writeUint64(1, this.signing_count);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryCountsResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryCountsResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.signing_count = reader.readUint64();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryCountsResponse {
            return QueryCountsResponse.deserialize(bytes);
        }
    }
    export class QueryMembersRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            status?: MemberStatusFilter;
            is_incoming_group?: boolean;
            pagination?: dependency_3.cosmos.base.query.v1beta1.PageRequest;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("status" in data && data.status != undefined) {
                    this.status = data.status;
                }
                if ("is_incoming_group" in data && data.is_incoming_group != undefined) {
                    this.is_incoming_group = data.is_incoming_group;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get status() {
            return pb_1.Message.getFieldWithDefault(this, 1, MemberStatusFilter.MEMBER_STATUS_FILTER_UNSPECIFIED) as MemberStatusFilter;
        }
        set status(value: MemberStatusFilter) {
            pb_1.Message.setField(this, 1, value);
        }
        get is_incoming_group() {
            return pb_1.Message.getFieldWithDefault(this, 2, false) as boolean;
        }
        set is_incoming_group(value: boolean) {
            pb_1.Message.setField(this, 2, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_3.cosmos.base.query.v1beta1.PageRequest, 3) as dependency_3.cosmos.base.query.v1beta1.PageRequest;
        }
        set pagination(value: dependency_3.cosmos.base.query.v1beta1.PageRequest) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_pagination() {
            return pb_1.Message.getField(this, 3) != null;
        }
        static fromObject(data: {
            status?: MemberStatusFilter;
            is_incoming_group?: boolean;
            pagination?: ReturnType<typeof dependency_3.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
        }): QueryMembersRequest {
            const message = new QueryMembersRequest({});
            if (data.status != null) {
                message.status = data.status;
            }
            if (data.is_incoming_group != null) {
                message.is_incoming_group = data.is_incoming_group;
            }
            if (data.pagination != null) {
                message.pagination = dependency_3.cosmos.base.query.v1beta1.PageRequest.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                status?: MemberStatusFilter;
                is_incoming_group?: boolean;
                pagination?: ReturnType<typeof dependency_3.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
            } = {};
            if (this.status != null) {
                data.status = this.status;
            }
            if (this.is_incoming_group != null) {
                data.is_incoming_group = this.is_incoming_group;
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.status != MemberStatusFilter.MEMBER_STATUS_FILTER_UNSPECIFIED)
                writer.writeEnum(1, this.status);
            if (this.is_incoming_group != false)
                writer.writeBool(2, this.is_incoming_group);
            if (this.has_pagination)
                writer.writeMessage(3, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryMembersRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryMembersRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.status = reader.readEnum();
                        break;
                    case 2:
                        message.is_incoming_group = reader.readBool();
                        break;
                    case 3:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_3.cosmos.base.query.v1beta1.PageRequest.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryMembersRequest {
            return QueryMembersRequest.deserialize(bytes);
        }
    }
    export class QueryMembersResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            members?: dependency_7.band.bandtss.v1beta1.Member[];
            pagination?: dependency_3.cosmos.base.query.v1beta1.PageResponse;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("members" in data && data.members != undefined) {
                    this.members = data.members;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get members() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_7.band.bandtss.v1beta1.Member, 1) as dependency_7.band.bandtss.v1beta1.Member[];
        }
        set members(value: dependency_7.band.bandtss.v1beta1.Member[]) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_3.cosmos.base.query.v1beta1.PageResponse, 2) as dependency_3.cosmos.base.query.v1beta1.PageResponse;
        }
        set pagination(value: dependency_3.cosmos.base.query.v1beta1.PageResponse) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_pagination() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            members?: ReturnType<typeof dependency_7.band.bandtss.v1beta1.Member.prototype.toObject>[];
            pagination?: ReturnType<typeof dependency_3.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
        }): QueryMembersResponse {
            const message = new QueryMembersResponse({});
            if (data.members != null) {
                message.members = data.members.map(item => dependency_7.band.bandtss.v1beta1.Member.fromObject(item));
            }
            if (data.pagination != null) {
                message.pagination = dependency_3.cosmos.base.query.v1beta1.PageResponse.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                members?: ReturnType<typeof dependency_7.band.bandtss.v1beta1.Member.prototype.toObject>[];
                pagination?: ReturnType<typeof dependency_3.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
            } = {};
            if (this.members != null) {
                data.members = this.members.map((item: dependency_7.band.bandtss.v1beta1.Member) => item.toObject());
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.members.length)
                writer.writeRepeatedMessage(1, this.members, (item: dependency_7.band.bandtss.v1beta1.Member) => item.serialize(writer));
            if (this.has_pagination)
                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryMembersResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryMembersResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.members, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_7.band.bandtss.v1beta1.Member.deserialize(reader), dependency_7.band.bandtss.v1beta1.Member));
                        break;
                    case 2:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_3.cosmos.base.query.v1beta1.PageResponse.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryMembersResponse {
            return QueryMembersResponse.deserialize(bytes);
        }
    }
    export class QueryMemberRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            address?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("address" in data && data.address != undefined) {
                    this.address = data.address;
                }
            }
        }
        get address() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set address(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data: {
            address?: string;
        }): QueryMemberRequest {
            const message = new QueryMemberRequest({});
            if (data.address != null) {
                message.address = data.address;
            }
            return message;
        }
        toObject() {
            const data: {
                address?: string;
            } = {};
            if (this.address != null) {
                data.address = this.address;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.address.length)
                writer.writeString(1, this.address);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryMemberRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryMemberRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.address = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryMemberRequest {
            return QueryMemberRequest.deserialize(bytes);
        }
    }
    export class QueryMemberResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            current_group_member?: dependency_7.band.bandtss.v1beta1.Member;
            incoming_group_member?: dependency_7.band.bandtss.v1beta1.Member;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("current_group_member" in data && data.current_group_member != undefined) {
                    this.current_group_member = data.current_group_member;
                }
                if ("incoming_group_member" in data && data.incoming_group_member != undefined) {
                    this.incoming_group_member = data.incoming_group_member;
                }
            }
        }
        get current_group_member() {
            return pb_1.Message.getWrapperField(this, dependency_7.band.bandtss.v1beta1.Member, 1) as dependency_7.band.bandtss.v1beta1.Member;
        }
        set current_group_member(value: dependency_7.band.bandtss.v1beta1.Member) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_current_group_member() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get incoming_group_member() {
            return pb_1.Message.getWrapperField(this, dependency_7.band.bandtss.v1beta1.Member, 2) as dependency_7.band.bandtss.v1beta1.Member;
        }
        set incoming_group_member(value: dependency_7.band.bandtss.v1beta1.Member) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_incoming_group_member() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            current_group_member?: ReturnType<typeof dependency_7.band.bandtss.v1beta1.Member.prototype.toObject>;
            incoming_group_member?: ReturnType<typeof dependency_7.band.bandtss.v1beta1.Member.prototype.toObject>;
        }): QueryMemberResponse {
            const message = new QueryMemberResponse({});
            if (data.current_group_member != null) {
                message.current_group_member = dependency_7.band.bandtss.v1beta1.Member.fromObject(data.current_group_member);
            }
            if (data.incoming_group_member != null) {
                message.incoming_group_member = dependency_7.band.bandtss.v1beta1.Member.fromObject(data.incoming_group_member);
            }
            return message;
        }
        toObject() {
            const data: {
                current_group_member?: ReturnType<typeof dependency_7.band.bandtss.v1beta1.Member.prototype.toObject>;
                incoming_group_member?: ReturnType<typeof dependency_7.band.bandtss.v1beta1.Member.prototype.toObject>;
            } = {};
            if (this.current_group_member != null) {
                data.current_group_member = this.current_group_member.toObject();
            }
            if (this.incoming_group_member != null) {
                data.incoming_group_member = this.incoming_group_member.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_current_group_member)
                writer.writeMessage(1, this.current_group_member, () => this.current_group_member.serialize(writer));
            if (this.has_incoming_group_member)
                writer.writeMessage(2, this.incoming_group_member, () => this.incoming_group_member.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryMemberResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryMemberResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.current_group_member, () => message.current_group_member = dependency_7.band.bandtss.v1beta1.Member.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.incoming_group_member, () => message.incoming_group_member = dependency_7.band.bandtss.v1beta1.Member.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryMemberResponse {
            return QueryMemberResponse.deserialize(bytes);
        }
    }
    export class QueryCurrentGroupRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {}) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data: {}): QueryCurrentGroupRequest {
            const message = new QueryCurrentGroupRequest({});
            return message;
        }
        toObject() {
            const data: {} = {};
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryCurrentGroupRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryCurrentGroupRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryCurrentGroupRequest {
            return QueryCurrentGroupRequest.deserialize(bytes);
        }
    }
    export class QueryCurrentGroupResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            group_id?: number;
            size?: number;
            threshold?: number;
            pub_key?: Uint8Array;
            status?: dependency_6.band.tss.v1beta1.GroupStatus;
            active_time?: dependency_2.google.protobuf.Timestamp;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("group_id" in data && data.group_id != undefined) {
                    this.group_id = data.group_id;
                }
                if ("size" in data && data.size != undefined) {
                    this.size = data.size;
                }
                if ("threshold" in data && data.threshold != undefined) {
                    this.threshold = data.threshold;
                }
                if ("pub_key" in data && data.pub_key != undefined) {
                    this.pub_key = data.pub_key;
                }
                if ("status" in data && data.status != undefined) {
                    this.status = data.status;
                }
                if ("active_time" in data && data.active_time != undefined) {
                    this.active_time = data.active_time;
                }
            }
        }
        get group_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set group_id(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get size() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set size(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get threshold() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;
        }
        set threshold(value: number) {
            pb_1.Message.setField(this, 3, value);
        }
        get pub_key() {
            return pb_1.Message.getFieldWithDefault(this, 4, new Uint8Array(0)) as Uint8Array;
        }
        set pub_key(value: Uint8Array) {
            pb_1.Message.setField(this, 4, value);
        }
        get status() {
            return pb_1.Message.getFieldWithDefault(this, 5, dependency_6.band.tss.v1beta1.GroupStatus.GROUP_STATUS_UNSPECIFIED) as dependency_6.band.tss.v1beta1.GroupStatus;
        }
        set status(value: dependency_6.band.tss.v1beta1.GroupStatus) {
            pb_1.Message.setField(this, 5, value);
        }
        get active_time() {
            return pb_1.Message.getWrapperField(this, dependency_2.google.protobuf.Timestamp, 6) as dependency_2.google.protobuf.Timestamp;
        }
        set active_time(value: dependency_2.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 6, value);
        }
        get has_active_time() {
            return pb_1.Message.getField(this, 6) != null;
        }
        static fromObject(data: {
            group_id?: number;
            size?: number;
            threshold?: number;
            pub_key?: Uint8Array;
            status?: dependency_6.band.tss.v1beta1.GroupStatus;
            active_time?: ReturnType<typeof dependency_2.google.protobuf.Timestamp.prototype.toObject>;
        }): QueryCurrentGroupResponse {
            const message = new QueryCurrentGroupResponse({});
            if (data.group_id != null) {
                message.group_id = data.group_id;
            }
            if (data.size != null) {
                message.size = data.size;
            }
            if (data.threshold != null) {
                message.threshold = data.threshold;
            }
            if (data.pub_key != null) {
                message.pub_key = data.pub_key;
            }
            if (data.status != null) {
                message.status = data.status;
            }
            if (data.active_time != null) {
                message.active_time = dependency_2.google.protobuf.Timestamp.fromObject(data.active_time);
            }
            return message;
        }
        toObject() {
            const data: {
                group_id?: number;
                size?: number;
                threshold?: number;
                pub_key?: Uint8Array;
                status?: dependency_6.band.tss.v1beta1.GroupStatus;
                active_time?: ReturnType<typeof dependency_2.google.protobuf.Timestamp.prototype.toObject>;
            } = {};
            if (this.group_id != null) {
                data.group_id = this.group_id;
            }
            if (this.size != null) {
                data.size = this.size;
            }
            if (this.threshold != null) {
                data.threshold = this.threshold;
            }
            if (this.pub_key != null) {
                data.pub_key = this.pub_key;
            }
            if (this.status != null) {
                data.status = this.status;
            }
            if (this.active_time != null) {
                data.active_time = this.active_time.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.group_id != 0)
                writer.writeUint64(1, this.group_id);
            if (this.size != 0)
                writer.writeUint64(2, this.size);
            if (this.threshold != 0)
                writer.writeUint64(3, this.threshold);
            if (this.pub_key.length)
                writer.writeBytes(4, this.pub_key);
            if (this.status != dependency_6.band.tss.v1beta1.GroupStatus.GROUP_STATUS_UNSPECIFIED)
                writer.writeEnum(5, this.status);
            if (this.has_active_time)
                writer.writeMessage(6, this.active_time, () => this.active_time.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryCurrentGroupResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryCurrentGroupResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.group_id = reader.readUint64();
                        break;
                    case 2:
                        message.size = reader.readUint64();
                        break;
                    case 3:
                        message.threshold = reader.readUint64();
                        break;
                    case 4:
                        message.pub_key = reader.readBytes();
                        break;
                    case 5:
                        message.status = reader.readEnum();
                        break;
                    case 6:
                        reader.readMessage(message.active_time, () => message.active_time = dependency_2.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryCurrentGroupResponse {
            return QueryCurrentGroupResponse.deserialize(bytes);
        }
    }
    export class QueryIncomingGroupRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {}) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data: {}): QueryIncomingGroupRequest {
            const message = new QueryIncomingGroupRequest({});
            return message;
        }
        toObject() {
            const data: {} = {};
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryIncomingGroupRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryIncomingGroupRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryIncomingGroupRequest {
            return QueryIncomingGroupRequest.deserialize(bytes);
        }
    }
    export class QueryIncomingGroupResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            group_id?: number;
            size?: number;
            threshold?: number;
            pub_key?: Uint8Array;
            status?: dependency_6.band.tss.v1beta1.GroupStatus;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("group_id" in data && data.group_id != undefined) {
                    this.group_id = data.group_id;
                }
                if ("size" in data && data.size != undefined) {
                    this.size = data.size;
                }
                if ("threshold" in data && data.threshold != undefined) {
                    this.threshold = data.threshold;
                }
                if ("pub_key" in data && data.pub_key != undefined) {
                    this.pub_key = data.pub_key;
                }
                if ("status" in data && data.status != undefined) {
                    this.status = data.status;
                }
            }
        }
        get group_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set group_id(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get size() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set size(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get threshold() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;
        }
        set threshold(value: number) {
            pb_1.Message.setField(this, 3, value);
        }
        get pub_key() {
            return pb_1.Message.getFieldWithDefault(this, 4, new Uint8Array(0)) as Uint8Array;
        }
        set pub_key(value: Uint8Array) {
            pb_1.Message.setField(this, 4, value);
        }
        get status() {
            return pb_1.Message.getFieldWithDefault(this, 5, dependency_6.band.tss.v1beta1.GroupStatus.GROUP_STATUS_UNSPECIFIED) as dependency_6.band.tss.v1beta1.GroupStatus;
        }
        set status(value: dependency_6.band.tss.v1beta1.GroupStatus) {
            pb_1.Message.setField(this, 5, value);
        }
        static fromObject(data: {
            group_id?: number;
            size?: number;
            threshold?: number;
            pub_key?: Uint8Array;
            status?: dependency_6.band.tss.v1beta1.GroupStatus;
        }): QueryIncomingGroupResponse {
            const message = new QueryIncomingGroupResponse({});
            if (data.group_id != null) {
                message.group_id = data.group_id;
            }
            if (data.size != null) {
                message.size = data.size;
            }
            if (data.threshold != null) {
                message.threshold = data.threshold;
            }
            if (data.pub_key != null) {
                message.pub_key = data.pub_key;
            }
            if (data.status != null) {
                message.status = data.status;
            }
            return message;
        }
        toObject() {
            const data: {
                group_id?: number;
                size?: number;
                threshold?: number;
                pub_key?: Uint8Array;
                status?: dependency_6.band.tss.v1beta1.GroupStatus;
            } = {};
            if (this.group_id != null) {
                data.group_id = this.group_id;
            }
            if (this.size != null) {
                data.size = this.size;
            }
            if (this.threshold != null) {
                data.threshold = this.threshold;
            }
            if (this.pub_key != null) {
                data.pub_key = this.pub_key;
            }
            if (this.status != null) {
                data.status = this.status;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.group_id != 0)
                writer.writeUint64(1, this.group_id);
            if (this.size != 0)
                writer.writeUint64(2, this.size);
            if (this.threshold != 0)
                writer.writeUint64(3, this.threshold);
            if (this.pub_key.length)
                writer.writeBytes(4, this.pub_key);
            if (this.status != dependency_6.band.tss.v1beta1.GroupStatus.GROUP_STATUS_UNSPECIFIED)
                writer.writeEnum(5, this.status);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryIncomingGroupResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryIncomingGroupResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.group_id = reader.readUint64();
                        break;
                    case 2:
                        message.size = reader.readUint64();
                        break;
                    case 3:
                        message.threshold = reader.readUint64();
                        break;
                    case 4:
                        message.pub_key = reader.readBytes();
                        break;
                    case 5:
                        message.status = reader.readEnum();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryIncomingGroupResponse {
            return QueryIncomingGroupResponse.deserialize(bytes);
        }
    }
    export class QuerySigningRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            signing_id?: number;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("signing_id" in data && data.signing_id != undefined) {
                    this.signing_id = data.signing_id;
                }
            }
        }
        get signing_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set signing_id(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data: {
            signing_id?: number;
        }): QuerySigningRequest {
            const message = new QuerySigningRequest({});
            if (data.signing_id != null) {
                message.signing_id = data.signing_id;
            }
            return message;
        }
        toObject() {
            const data: {
                signing_id?: number;
            } = {};
            if (this.signing_id != null) {
                data.signing_id = this.signing_id;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.signing_id != 0)
                writer.writeUint64(1, this.signing_id);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QuerySigningRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QuerySigningRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.signing_id = reader.readUint64();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QuerySigningRequest {
            return QuerySigningRequest.deserialize(bytes);
        }
    }
    export class QuerySigningResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            fee_per_signer?: dependency_4.cosmos.base.v1beta1.Coin[];
            requester?: string;
            current_group_signing_result?: dependency_6.band.tss.v1beta1.SigningResult;
            incoming_group_signing_result?: dependency_6.band.tss.v1beta1.SigningResult;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("fee_per_signer" in data && data.fee_per_signer != undefined) {
                    this.fee_per_signer = data.fee_per_signer;
                }
                if ("requester" in data && data.requester != undefined) {
                    this.requester = data.requester;
                }
                if ("current_group_signing_result" in data && data.current_group_signing_result != undefined) {
                    this.current_group_signing_result = data.current_group_signing_result;
                }
                if ("incoming_group_signing_result" in data && data.incoming_group_signing_result != undefined) {
                    this.incoming_group_signing_result = data.incoming_group_signing_result;
                }
            }
        }
        get fee_per_signer() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_4.cosmos.base.v1beta1.Coin, 1) as dependency_4.cosmos.base.v1beta1.Coin[];
        }
        set fee_per_signer(value: dependency_4.cosmos.base.v1beta1.Coin[]) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        get requester() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set requester(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get current_group_signing_result() {
            return pb_1.Message.getWrapperField(this, dependency_6.band.tss.v1beta1.SigningResult, 3) as dependency_6.band.tss.v1beta1.SigningResult;
        }
        set current_group_signing_result(value: dependency_6.band.tss.v1beta1.SigningResult) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_current_group_signing_result() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get incoming_group_signing_result() {
            return pb_1.Message.getWrapperField(this, dependency_6.band.tss.v1beta1.SigningResult, 4) as dependency_6.band.tss.v1beta1.SigningResult;
        }
        set incoming_group_signing_result(value: dependency_6.band.tss.v1beta1.SigningResult) {
            pb_1.Message.setWrapperField(this, 4, value);
        }
        get has_incoming_group_signing_result() {
            return pb_1.Message.getField(this, 4) != null;
        }
        static fromObject(data: {
            fee_per_signer?: ReturnType<typeof dependency_4.cosmos.base.v1beta1.Coin.prototype.toObject>[];
            requester?: string;
            current_group_signing_result?: ReturnType<typeof dependency_6.band.tss.v1beta1.SigningResult.prototype.toObject>;
            incoming_group_signing_result?: ReturnType<typeof dependency_6.band.tss.v1beta1.SigningResult.prototype.toObject>;
        }): QuerySigningResponse {
            const message = new QuerySigningResponse({});
            if (data.fee_per_signer != null) {
                message.fee_per_signer = data.fee_per_signer.map(item => dependency_4.cosmos.base.v1beta1.Coin.fromObject(item));
            }
            if (data.requester != null) {
                message.requester = data.requester;
            }
            if (data.current_group_signing_result != null) {
                message.current_group_signing_result = dependency_6.band.tss.v1beta1.SigningResult.fromObject(data.current_group_signing_result);
            }
            if (data.incoming_group_signing_result != null) {
                message.incoming_group_signing_result = dependency_6.band.tss.v1beta1.SigningResult.fromObject(data.incoming_group_signing_result);
            }
            return message;
        }
        toObject() {
            const data: {
                fee_per_signer?: ReturnType<typeof dependency_4.cosmos.base.v1beta1.Coin.prototype.toObject>[];
                requester?: string;
                current_group_signing_result?: ReturnType<typeof dependency_6.band.tss.v1beta1.SigningResult.prototype.toObject>;
                incoming_group_signing_result?: ReturnType<typeof dependency_6.band.tss.v1beta1.SigningResult.prototype.toObject>;
            } = {};
            if (this.fee_per_signer != null) {
                data.fee_per_signer = this.fee_per_signer.map((item: dependency_4.cosmos.base.v1beta1.Coin) => item.toObject());
            }
            if (this.requester != null) {
                data.requester = this.requester;
            }
            if (this.current_group_signing_result != null) {
                data.current_group_signing_result = this.current_group_signing_result.toObject();
            }
            if (this.incoming_group_signing_result != null) {
                data.incoming_group_signing_result = this.incoming_group_signing_result.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.fee_per_signer.length)
                writer.writeRepeatedMessage(1, this.fee_per_signer, (item: dependency_4.cosmos.base.v1beta1.Coin) => item.serialize(writer));
            if (this.requester.length)
                writer.writeString(2, this.requester);
            if (this.has_current_group_signing_result)
                writer.writeMessage(3, this.current_group_signing_result, () => this.current_group_signing_result.serialize(writer));
            if (this.has_incoming_group_signing_result)
                writer.writeMessage(4, this.incoming_group_signing_result, () => this.incoming_group_signing_result.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QuerySigningResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QuerySigningResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.fee_per_signer, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_4.cosmos.base.v1beta1.Coin.deserialize(reader), dependency_4.cosmos.base.v1beta1.Coin));
                        break;
                    case 2:
                        message.requester = reader.readString();
                        break;
                    case 3:
                        reader.readMessage(message.current_group_signing_result, () => message.current_group_signing_result = dependency_6.band.tss.v1beta1.SigningResult.deserialize(reader));
                        break;
                    case 4:
                        reader.readMessage(message.incoming_group_signing_result, () => message.incoming_group_signing_result = dependency_6.band.tss.v1beta1.SigningResult.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QuerySigningResponse {
            return QuerySigningResponse.deserialize(bytes);
        }
    }
    export class QueryGroupTransitionRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {}) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data: {}): QueryGroupTransitionRequest {
            const message = new QueryGroupTransitionRequest({});
            return message;
        }
        toObject() {
            const data: {} = {};
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryGroupTransitionRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryGroupTransitionRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryGroupTransitionRequest {
            return QueryGroupTransitionRequest.deserialize(bytes);
        }
    }
    export class QueryGroupTransitionResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            group_transition?: dependency_7.band.bandtss.v1beta1.GroupTransition;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("group_transition" in data && data.group_transition != undefined) {
                    this.group_transition = data.group_transition;
                }
            }
        }
        get group_transition() {
            return pb_1.Message.getWrapperField(this, dependency_7.band.bandtss.v1beta1.GroupTransition, 1) as dependency_7.band.bandtss.v1beta1.GroupTransition;
        }
        set group_transition(value: dependency_7.band.bandtss.v1beta1.GroupTransition) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_group_transition() {
            return pb_1.Message.getField(this, 1) != null;
        }
        static fromObject(data: {
            group_transition?: ReturnType<typeof dependency_7.band.bandtss.v1beta1.GroupTransition.prototype.toObject>;
        }): QueryGroupTransitionResponse {
            const message = new QueryGroupTransitionResponse({});
            if (data.group_transition != null) {
                message.group_transition = dependency_7.band.bandtss.v1beta1.GroupTransition.fromObject(data.group_transition);
            }
            return message;
        }
        toObject() {
            const data: {
                group_transition?: ReturnType<typeof dependency_7.band.bandtss.v1beta1.GroupTransition.prototype.toObject>;
            } = {};
            if (this.group_transition != null) {
                data.group_transition = this.group_transition.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_group_transition)
                writer.writeMessage(1, this.group_transition, () => this.group_transition.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryGroupTransitionResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryGroupTransitionResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.group_transition, () => message.group_transition = dependency_7.band.bandtss.v1beta1.GroupTransition.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryGroupTransitionResponse {
            return QueryGroupTransitionResponse.deserialize(bytes);
        }
    }
    export class QueryParamsRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {}) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data: {}): QueryParamsRequest {
            const message = new QueryParamsRequest({});
            return message;
        }
        toObject() {
            const data: {} = {};
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryParamsRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryParamsRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryParamsRequest {
            return QueryParamsRequest.deserialize(bytes);
        }
    }
    export class QueryParamsResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            params?: dependency_8.band.bandtss.v1beta1.Params;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("params" in data && data.params != undefined) {
                    this.params = data.params;
                }
            }
        }
        get params() {
            return pb_1.Message.getWrapperField(this, dependency_8.band.bandtss.v1beta1.Params, 1) as dependency_8.band.bandtss.v1beta1.Params;
        }
        set params(value: dependency_8.band.bandtss.v1beta1.Params) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_params() {
            return pb_1.Message.getField(this, 1) != null;
        }
        static fromObject(data: {
            params?: ReturnType<typeof dependency_8.band.bandtss.v1beta1.Params.prototype.toObject>;
        }): QueryParamsResponse {
            const message = new QueryParamsResponse({});
            if (data.params != null) {
                message.params = dependency_8.band.bandtss.v1beta1.Params.fromObject(data.params);
            }
            return message;
        }
        toObject() {
            const data: {
                params?: ReturnType<typeof dependency_8.band.bandtss.v1beta1.Params.prototype.toObject>;
            } = {};
            if (this.params != null) {
                data.params = this.params.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_params)
                writer.writeMessage(1, this.params, () => this.params.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryParamsResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryParamsResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.params, () => message.params = dependency_8.band.bandtss.v1beta1.Params.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryParamsResponse {
            return QueryParamsResponse.deserialize(bytes);
        }
    }
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    interface GrpcStreamServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
        (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
    }
    interface GrpWritableServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
    }
    interface GrpcChunkServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
        (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
    }
    interface GrpcPromiseServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): Promise<R>;
        (message: P, options?: grpc_1.CallOptions): Promise<R>;
    }
    export abstract class UnimplementedQueryService {
        static definition = {
            Counts: {
                path: "/band.bandtss.v1beta1.Query/Counts",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: QueryCountsRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => QueryCountsRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: QueryCountsResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => QueryCountsResponse.deserialize(new Uint8Array(bytes))
            },
            Members: {
                path: "/band.bandtss.v1beta1.Query/Members",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: QueryMembersRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => QueryMembersRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: QueryMembersResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => QueryMembersResponse.deserialize(new Uint8Array(bytes))
            },
            Member: {
                path: "/band.bandtss.v1beta1.Query/Member",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: QueryMemberRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => QueryMemberRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: QueryMemberResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => QueryMemberResponse.deserialize(new Uint8Array(bytes))
            },
            CurrentGroup: {
                path: "/band.bandtss.v1beta1.Query/CurrentGroup",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: QueryCurrentGroupRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => QueryCurrentGroupRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: QueryCurrentGroupResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => QueryCurrentGroupResponse.deserialize(new Uint8Array(bytes))
            },
            IncomingGroup: {
                path: "/band.bandtss.v1beta1.Query/IncomingGroup",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: QueryIncomingGroupRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => QueryIncomingGroupRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: QueryIncomingGroupResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => QueryIncomingGroupResponse.deserialize(new Uint8Array(bytes))
            },
            Signing: {
                path: "/band.bandtss.v1beta1.Query/Signing",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: QuerySigningRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => QuerySigningRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: QuerySigningResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => QuerySigningResponse.deserialize(new Uint8Array(bytes))
            },
            GroupTransition: {
                path: "/band.bandtss.v1beta1.Query/GroupTransition",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: QueryGroupTransitionRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => QueryGroupTransitionRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: QueryGroupTransitionResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => QueryGroupTransitionResponse.deserialize(new Uint8Array(bytes))
            },
            Params: {
                path: "/band.bandtss.v1beta1.Query/Params",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: QueryParamsRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => QueryParamsRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: QueryParamsResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => QueryParamsResponse.deserialize(new Uint8Array(bytes))
            }
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract Counts(call: grpc_1.ServerUnaryCall<QueryCountsRequest, QueryCountsResponse>, callback: grpc_1.sendUnaryData<QueryCountsResponse>): void;
        abstract Members(call: grpc_1.ServerUnaryCall<QueryMembersRequest, QueryMembersResponse>, callback: grpc_1.sendUnaryData<QueryMembersResponse>): void;
        abstract Member(call: grpc_1.ServerUnaryCall<QueryMemberRequest, QueryMemberResponse>, callback: grpc_1.sendUnaryData<QueryMemberResponse>): void;
        abstract CurrentGroup(call: grpc_1.ServerUnaryCall<QueryCurrentGroupRequest, QueryCurrentGroupResponse>, callback: grpc_1.sendUnaryData<QueryCurrentGroupResponse>): void;
        abstract IncomingGroup(call: grpc_1.ServerUnaryCall<QueryIncomingGroupRequest, QueryIncomingGroupResponse>, callback: grpc_1.sendUnaryData<QueryIncomingGroupResponse>): void;
        abstract Signing(call: grpc_1.ServerUnaryCall<QuerySigningRequest, QuerySigningResponse>, callback: grpc_1.sendUnaryData<QuerySigningResponse>): void;
        abstract GroupTransition(call: grpc_1.ServerUnaryCall<QueryGroupTransitionRequest, QueryGroupTransitionResponse>, callback: grpc_1.sendUnaryData<QueryGroupTransitionResponse>): void;
        abstract Params(call: grpc_1.ServerUnaryCall<QueryParamsRequest, QueryParamsResponse>, callback: grpc_1.sendUnaryData<QueryParamsResponse>): void;
    }
    export class QueryClient extends grpc_1.makeGenericClientConstructor(UnimplementedQueryService.definition, "Query", {}) {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>) {
            super(address, credentials, options);
        }
        Counts: GrpcUnaryServiceInterface<QueryCountsRequest, QueryCountsResponse> = (message: QueryCountsRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<QueryCountsResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<QueryCountsResponse>, callback?: grpc_1.requestCallback<QueryCountsResponse>): grpc_1.ClientUnaryCall => {
            return super.Counts(message, metadata, options, callback);
        };
        Members: GrpcUnaryServiceInterface<QueryMembersRequest, QueryMembersResponse> = (message: QueryMembersRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<QueryMembersResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<QueryMembersResponse>, callback?: grpc_1.requestCallback<QueryMembersResponse>): grpc_1.ClientUnaryCall => {
            return super.Members(message, metadata, options, callback);
        };
        Member: GrpcUnaryServiceInterface<QueryMemberRequest, QueryMemberResponse> = (message: QueryMemberRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<QueryMemberResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<QueryMemberResponse>, callback?: grpc_1.requestCallback<QueryMemberResponse>): grpc_1.ClientUnaryCall => {
            return super.Member(message, metadata, options, callback);
        };
        CurrentGroup: GrpcUnaryServiceInterface<QueryCurrentGroupRequest, QueryCurrentGroupResponse> = (message: QueryCurrentGroupRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<QueryCurrentGroupResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<QueryCurrentGroupResponse>, callback?: grpc_1.requestCallback<QueryCurrentGroupResponse>): grpc_1.ClientUnaryCall => {
            return super.CurrentGroup(message, metadata, options, callback);
        };
        IncomingGroup: GrpcUnaryServiceInterface<QueryIncomingGroupRequest, QueryIncomingGroupResponse> = (message: QueryIncomingGroupRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<QueryIncomingGroupResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<QueryIncomingGroupResponse>, callback?: grpc_1.requestCallback<QueryIncomingGroupResponse>): grpc_1.ClientUnaryCall => {
            return super.IncomingGroup(message, metadata, options, callback);
        };
        Signing: GrpcUnaryServiceInterface<QuerySigningRequest, QuerySigningResponse> = (message: QuerySigningRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<QuerySigningResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<QuerySigningResponse>, callback?: grpc_1.requestCallback<QuerySigningResponse>): grpc_1.ClientUnaryCall => {
            return super.Signing(message, metadata, options, callback);
        };
        GroupTransition: GrpcUnaryServiceInterface<QueryGroupTransitionRequest, QueryGroupTransitionResponse> = (message: QueryGroupTransitionRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<QueryGroupTransitionResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<QueryGroupTransitionResponse>, callback?: grpc_1.requestCallback<QueryGroupTransitionResponse>): grpc_1.ClientUnaryCall => {
            return super.GroupTransition(message, metadata, options, callback);
        };
        Params: GrpcUnaryServiceInterface<QueryParamsRequest, QueryParamsResponse> = (message: QueryParamsRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<QueryParamsResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<QueryParamsResponse>, callback?: grpc_1.requestCallback<QueryParamsResponse>): grpc_1.ClientUnaryCall => {
            return super.Params(message, metadata, options, callback);
        };
    }
}
