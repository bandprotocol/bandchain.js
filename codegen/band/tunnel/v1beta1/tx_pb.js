// source: band/tunnel/v1beta1/tx.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
var gogoproto_gogo_pb = require('../../../gogoproto/gogo_pb.js');
goog.object.extend(proto, gogoproto_gogo_pb);
var cosmos_proto_cosmos_pb = require('../../../cosmos_proto/cosmos_pb.js');
goog.object.extend(proto, cosmos_proto_cosmos_pb);
var cosmos_base_v1beta1_coin_pb = require('../../../cosmos/base/v1beta1/coin_pb.js');
goog.object.extend(proto, cosmos_base_v1beta1_coin_pb);
var cosmos_msg_v1_msg_pb = require('../../../cosmos/msg/v1/msg_pb.js');
goog.object.extend(proto, cosmos_msg_v1_msg_pb);
var amino_amino_pb = require('../../../amino/amino_pb.js');
goog.object.extend(proto, amino_amino_pb);
var band_tunnel_v1beta1_params_pb = require('../../../band/tunnel/v1beta1/params_pb.js');
goog.object.extend(proto, band_tunnel_v1beta1_params_pb);
var band_tunnel_v1beta1_tunnel_pb = require('../../../band/tunnel/v1beta1/tunnel_pb.js');
goog.object.extend(proto, band_tunnel_v1beta1_tunnel_pb);
goog.exportSymbol('proto.band.tunnel.v1beta1.MsgActivate', null, global);
goog.exportSymbol('proto.band.tunnel.v1beta1.MsgActivateResponse', null, global);
goog.exportSymbol('proto.band.tunnel.v1beta1.MsgCreateTunnel', null, global);
goog.exportSymbol('proto.band.tunnel.v1beta1.MsgCreateTunnelResponse', null, global);
goog.exportSymbol('proto.band.tunnel.v1beta1.MsgDeactivate', null, global);
goog.exportSymbol('proto.band.tunnel.v1beta1.MsgDeactivateResponse', null, global);
goog.exportSymbol('proto.band.tunnel.v1beta1.MsgDepositToTunnel', null, global);
goog.exportSymbol('proto.band.tunnel.v1beta1.MsgDepositToTunnelResponse', null, global);
goog.exportSymbol('proto.band.tunnel.v1beta1.MsgTriggerTunnel', null, global);
goog.exportSymbol('proto.band.tunnel.v1beta1.MsgTriggerTunnelResponse', null, global);
goog.exportSymbol('proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnel', null, global);
goog.exportSymbol('proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnelResponse', null, global);
goog.exportSymbol('proto.band.tunnel.v1beta1.MsgUpdateParams', null, global);
goog.exportSymbol('proto.band.tunnel.v1beta1.MsgUpdateParamsResponse', null, global);
goog.exportSymbol('proto.band.tunnel.v1beta1.MsgWithdrawFromTunnel', null, global);
goog.exportSymbol('proto.band.tunnel.v1beta1.MsgWithdrawFromTunnelResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.band.tunnel.v1beta1.MsgCreateTunnel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.band.tunnel.v1beta1.MsgCreateTunnel.repeatedFields_, null);
};
goog.inherits(proto.band.tunnel.v1beta1.MsgCreateTunnel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.band.tunnel.v1beta1.MsgCreateTunnel.displayName = 'proto.band.tunnel.v1beta1.MsgCreateTunnel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.band.tunnel.v1beta1.MsgCreateTunnelResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.band.tunnel.v1beta1.MsgCreateTunnelResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.band.tunnel.v1beta1.MsgCreateTunnelResponse.displayName = 'proto.band.tunnel.v1beta1.MsgCreateTunnelResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnel.repeatedFields_, null);
};
goog.inherits(proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnel.displayName = 'proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnelResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnelResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnelResponse.displayName = 'proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnelResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.band.tunnel.v1beta1.MsgActivate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.band.tunnel.v1beta1.MsgActivate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.band.tunnel.v1beta1.MsgActivate.displayName = 'proto.band.tunnel.v1beta1.MsgActivate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.band.tunnel.v1beta1.MsgActivateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.band.tunnel.v1beta1.MsgActivateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.band.tunnel.v1beta1.MsgActivateResponse.displayName = 'proto.band.tunnel.v1beta1.MsgActivateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.band.tunnel.v1beta1.MsgDeactivate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.band.tunnel.v1beta1.MsgDeactivate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.band.tunnel.v1beta1.MsgDeactivate.displayName = 'proto.band.tunnel.v1beta1.MsgDeactivate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.band.tunnel.v1beta1.MsgDeactivateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.band.tunnel.v1beta1.MsgDeactivateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.band.tunnel.v1beta1.MsgDeactivateResponse.displayName = 'proto.band.tunnel.v1beta1.MsgDeactivateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.band.tunnel.v1beta1.MsgTriggerTunnel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.band.tunnel.v1beta1.MsgTriggerTunnel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.band.tunnel.v1beta1.MsgTriggerTunnel.displayName = 'proto.band.tunnel.v1beta1.MsgTriggerTunnel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.band.tunnel.v1beta1.MsgTriggerTunnelResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.band.tunnel.v1beta1.MsgTriggerTunnelResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.band.tunnel.v1beta1.MsgTriggerTunnelResponse.displayName = 'proto.band.tunnel.v1beta1.MsgTriggerTunnelResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.band.tunnel.v1beta1.MsgDepositToTunnel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.band.tunnel.v1beta1.MsgDepositToTunnel.repeatedFields_, null);
};
goog.inherits(proto.band.tunnel.v1beta1.MsgDepositToTunnel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.band.tunnel.v1beta1.MsgDepositToTunnel.displayName = 'proto.band.tunnel.v1beta1.MsgDepositToTunnel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.band.tunnel.v1beta1.MsgDepositToTunnelResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.band.tunnel.v1beta1.MsgDepositToTunnelResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.band.tunnel.v1beta1.MsgDepositToTunnelResponse.displayName = 'proto.band.tunnel.v1beta1.MsgDepositToTunnelResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.band.tunnel.v1beta1.MsgWithdrawFromTunnel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.band.tunnel.v1beta1.MsgWithdrawFromTunnel.repeatedFields_, null);
};
goog.inherits(proto.band.tunnel.v1beta1.MsgWithdrawFromTunnel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.band.tunnel.v1beta1.MsgWithdrawFromTunnel.displayName = 'proto.band.tunnel.v1beta1.MsgWithdrawFromTunnel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.band.tunnel.v1beta1.MsgWithdrawFromTunnelResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.band.tunnel.v1beta1.MsgWithdrawFromTunnelResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.band.tunnel.v1beta1.MsgWithdrawFromTunnelResponse.displayName = 'proto.band.tunnel.v1beta1.MsgWithdrawFromTunnelResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.band.tunnel.v1beta1.MsgUpdateParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.band.tunnel.v1beta1.MsgUpdateParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.band.tunnel.v1beta1.MsgUpdateParams.displayName = 'proto.band.tunnel.v1beta1.MsgUpdateParams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.band.tunnel.v1beta1.MsgUpdateParamsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.band.tunnel.v1beta1.MsgUpdateParamsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.band.tunnel.v1beta1.MsgUpdateParamsResponse.displayName = 'proto.band.tunnel.v1beta1.MsgUpdateParamsResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.band.tunnel.v1beta1.MsgCreateTunnel.repeatedFields_ = [1,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.band.tunnel.v1beta1.MsgCreateTunnel.prototype.toObject = function(opt_includeInstance) {
  return proto.band.tunnel.v1beta1.MsgCreateTunnel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.band.tunnel.v1beta1.MsgCreateTunnel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.MsgCreateTunnel.toObject = function(includeInstance, msg) {
  var f, obj = {
    signalDeviationsList: jspb.Message.toObjectList(msg.getSignalDeviationsList(),
    band_tunnel_v1beta1_tunnel_pb.SignalDeviation.toObject, includeInstance),
    interval: jspb.Message.getFieldWithDefault(msg, 2, 0),
    route: (f = msg.getRoute()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    initialDepositList: jspb.Message.toObjectList(msg.getInitialDepositList(),
    cosmos_base_v1beta1_coin_pb.Coin.toObject, includeInstance),
    creator: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.band.tunnel.v1beta1.MsgCreateTunnel}
 */
proto.band.tunnel.v1beta1.MsgCreateTunnel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.band.tunnel.v1beta1.MsgCreateTunnel;
  return proto.band.tunnel.v1beta1.MsgCreateTunnel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.band.tunnel.v1beta1.MsgCreateTunnel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.band.tunnel.v1beta1.MsgCreateTunnel}
 */
proto.band.tunnel.v1beta1.MsgCreateTunnel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new band_tunnel_v1beta1_tunnel_pb.SignalDeviation;
      reader.readMessage(value,band_tunnel_v1beta1_tunnel_pb.SignalDeviation.deserializeBinaryFromReader);
      msg.addSignalDeviations(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInterval(value);
      break;
    case 3:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setRoute(value);
      break;
    case 4:
      var value = new cosmos_base_v1beta1_coin_pb.Coin;
      reader.readMessage(value,cosmos_base_v1beta1_coin_pb.Coin.deserializeBinaryFromReader);
      msg.addInitialDeposit(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreator(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.band.tunnel.v1beta1.MsgCreateTunnel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.band.tunnel.v1beta1.MsgCreateTunnel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.band.tunnel.v1beta1.MsgCreateTunnel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.MsgCreateTunnel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSignalDeviationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      band_tunnel_v1beta1_tunnel_pb.SignalDeviation.serializeBinaryToWriter
    );
  }
  f = message.getInterval();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getRoute();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getInitialDepositList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      cosmos_base_v1beta1_coin_pb.Coin.serializeBinaryToWriter
    );
  }
  f = message.getCreator();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * repeated SignalDeviation signal_deviations = 1;
 * @return {!Array<!proto.band.tunnel.v1beta1.SignalDeviation>}
 */
proto.band.tunnel.v1beta1.MsgCreateTunnel.prototype.getSignalDeviationsList = function() {
  return /** @type{!Array<!proto.band.tunnel.v1beta1.SignalDeviation>} */ (
    jspb.Message.getRepeatedWrapperField(this, band_tunnel_v1beta1_tunnel_pb.SignalDeviation, 1));
};


/**
 * @param {!Array<!proto.band.tunnel.v1beta1.SignalDeviation>} value
 * @return {!proto.band.tunnel.v1beta1.MsgCreateTunnel} returns this
*/
proto.band.tunnel.v1beta1.MsgCreateTunnel.prototype.setSignalDeviationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.band.tunnel.v1beta1.SignalDeviation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.band.tunnel.v1beta1.SignalDeviation}
 */
proto.band.tunnel.v1beta1.MsgCreateTunnel.prototype.addSignalDeviations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.band.tunnel.v1beta1.SignalDeviation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.band.tunnel.v1beta1.MsgCreateTunnel} returns this
 */
proto.band.tunnel.v1beta1.MsgCreateTunnel.prototype.clearSignalDeviationsList = function() {
  return this.setSignalDeviationsList([]);
};


/**
 * optional uint64 interval = 2;
 * @return {number}
 */
proto.band.tunnel.v1beta1.MsgCreateTunnel.prototype.getInterval = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.band.tunnel.v1beta1.MsgCreateTunnel} returns this
 */
proto.band.tunnel.v1beta1.MsgCreateTunnel.prototype.setInterval = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional google.protobuf.Any route = 3;
 * @return {?proto.google.protobuf.Any}
 */
proto.band.tunnel.v1beta1.MsgCreateTunnel.prototype.getRoute = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 3));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.band.tunnel.v1beta1.MsgCreateTunnel} returns this
*/
proto.band.tunnel.v1beta1.MsgCreateTunnel.prototype.setRoute = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.band.tunnel.v1beta1.MsgCreateTunnel} returns this
 */
proto.band.tunnel.v1beta1.MsgCreateTunnel.prototype.clearRoute = function() {
  return this.setRoute(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.band.tunnel.v1beta1.MsgCreateTunnel.prototype.hasRoute = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated cosmos.base.v1beta1.Coin initial_deposit = 4;
 * @return {!Array<!proto.cosmos.base.v1beta1.Coin>}
 */
proto.band.tunnel.v1beta1.MsgCreateTunnel.prototype.getInitialDepositList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.Coin>} */ (
    jspb.Message.getRepeatedWrapperField(this, cosmos_base_v1beta1_coin_pb.Coin, 4));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.Coin>} value
 * @return {!proto.band.tunnel.v1beta1.MsgCreateTunnel} returns this
*/
proto.band.tunnel.v1beta1.MsgCreateTunnel.prototype.setInitialDepositList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.Coin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.Coin}
 */
proto.band.tunnel.v1beta1.MsgCreateTunnel.prototype.addInitialDeposit = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.cosmos.base.v1beta1.Coin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.band.tunnel.v1beta1.MsgCreateTunnel} returns this
 */
proto.band.tunnel.v1beta1.MsgCreateTunnel.prototype.clearInitialDepositList = function() {
  return this.setInitialDepositList([]);
};


/**
 * optional string creator = 5;
 * @return {string}
 */
proto.band.tunnel.v1beta1.MsgCreateTunnel.prototype.getCreator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.band.tunnel.v1beta1.MsgCreateTunnel} returns this
 */
proto.band.tunnel.v1beta1.MsgCreateTunnel.prototype.setCreator = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.band.tunnel.v1beta1.MsgCreateTunnelResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.band.tunnel.v1beta1.MsgCreateTunnelResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.band.tunnel.v1beta1.MsgCreateTunnelResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.MsgCreateTunnelResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    tunnelId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.band.tunnel.v1beta1.MsgCreateTunnelResponse}
 */
proto.band.tunnel.v1beta1.MsgCreateTunnelResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.band.tunnel.v1beta1.MsgCreateTunnelResponse;
  return proto.band.tunnel.v1beta1.MsgCreateTunnelResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.band.tunnel.v1beta1.MsgCreateTunnelResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.band.tunnel.v1beta1.MsgCreateTunnelResponse}
 */
proto.band.tunnel.v1beta1.MsgCreateTunnelResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTunnelId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.band.tunnel.v1beta1.MsgCreateTunnelResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.band.tunnel.v1beta1.MsgCreateTunnelResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.band.tunnel.v1beta1.MsgCreateTunnelResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.MsgCreateTunnelResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTunnelId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 tunnel_id = 1;
 * @return {number}
 */
proto.band.tunnel.v1beta1.MsgCreateTunnelResponse.prototype.getTunnelId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.band.tunnel.v1beta1.MsgCreateTunnelResponse} returns this
 */
proto.band.tunnel.v1beta1.MsgCreateTunnelResponse.prototype.setTunnelId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnel.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnel.prototype.toObject = function(opt_includeInstance) {
  return proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnel.toObject = function(includeInstance, msg) {
  var f, obj = {
    tunnelId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    signalDeviationsList: jspb.Message.toObjectList(msg.getSignalDeviationsList(),
    band_tunnel_v1beta1_tunnel_pb.SignalDeviation.toObject, includeInstance),
    interval: jspb.Message.getFieldWithDefault(msg, 3, 0),
    creator: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnel}
 */
proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnel;
  return proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnel}
 */
proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTunnelId(value);
      break;
    case 2:
      var value = new band_tunnel_v1beta1_tunnel_pb.SignalDeviation;
      reader.readMessage(value,band_tunnel_v1beta1_tunnel_pb.SignalDeviation.deserializeBinaryFromReader);
      msg.addSignalDeviations(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInterval(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreator(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTunnelId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getSignalDeviationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      band_tunnel_v1beta1_tunnel_pb.SignalDeviation.serializeBinaryToWriter
    );
  }
  f = message.getInterval();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getCreator();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional uint64 tunnel_id = 1;
 * @return {number}
 */
proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnel.prototype.getTunnelId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnel} returns this
 */
proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnel.prototype.setTunnelId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated SignalDeviation signal_deviations = 2;
 * @return {!Array<!proto.band.tunnel.v1beta1.SignalDeviation>}
 */
proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnel.prototype.getSignalDeviationsList = function() {
  return /** @type{!Array<!proto.band.tunnel.v1beta1.SignalDeviation>} */ (
    jspb.Message.getRepeatedWrapperField(this, band_tunnel_v1beta1_tunnel_pb.SignalDeviation, 2));
};


/**
 * @param {!Array<!proto.band.tunnel.v1beta1.SignalDeviation>} value
 * @return {!proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnel} returns this
*/
proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnel.prototype.setSignalDeviationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.band.tunnel.v1beta1.SignalDeviation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.band.tunnel.v1beta1.SignalDeviation}
 */
proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnel.prototype.addSignalDeviations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.band.tunnel.v1beta1.SignalDeviation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnel} returns this
 */
proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnel.prototype.clearSignalDeviationsList = function() {
  return this.setSignalDeviationsList([]);
};


/**
 * optional uint64 interval = 3;
 * @return {number}
 */
proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnel.prototype.getInterval = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnel} returns this
 */
proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnel.prototype.setInterval = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string creator = 4;
 * @return {string}
 */
proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnel.prototype.getCreator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnel} returns this
 */
proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnel.prototype.setCreator = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnelResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnelResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnelResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnelResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnelResponse}
 */
proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnelResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnelResponse;
  return proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnelResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnelResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnelResponse}
 */
proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnelResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnelResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnelResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnelResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.MsgUpdateAndResetTunnelResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.band.tunnel.v1beta1.MsgActivate.prototype.toObject = function(opt_includeInstance) {
  return proto.band.tunnel.v1beta1.MsgActivate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.band.tunnel.v1beta1.MsgActivate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.MsgActivate.toObject = function(includeInstance, msg) {
  var f, obj = {
    tunnelId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    creator: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.band.tunnel.v1beta1.MsgActivate}
 */
proto.band.tunnel.v1beta1.MsgActivate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.band.tunnel.v1beta1.MsgActivate;
  return proto.band.tunnel.v1beta1.MsgActivate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.band.tunnel.v1beta1.MsgActivate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.band.tunnel.v1beta1.MsgActivate}
 */
proto.band.tunnel.v1beta1.MsgActivate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTunnelId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreator(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.band.tunnel.v1beta1.MsgActivate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.band.tunnel.v1beta1.MsgActivate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.band.tunnel.v1beta1.MsgActivate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.MsgActivate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTunnelId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getCreator();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint64 tunnel_id = 1;
 * @return {number}
 */
proto.band.tunnel.v1beta1.MsgActivate.prototype.getTunnelId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.band.tunnel.v1beta1.MsgActivate} returns this
 */
proto.band.tunnel.v1beta1.MsgActivate.prototype.setTunnelId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string creator = 2;
 * @return {string}
 */
proto.band.tunnel.v1beta1.MsgActivate.prototype.getCreator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.band.tunnel.v1beta1.MsgActivate} returns this
 */
proto.band.tunnel.v1beta1.MsgActivate.prototype.setCreator = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.band.tunnel.v1beta1.MsgActivateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.band.tunnel.v1beta1.MsgActivateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.band.tunnel.v1beta1.MsgActivateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.MsgActivateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.band.tunnel.v1beta1.MsgActivateResponse}
 */
proto.band.tunnel.v1beta1.MsgActivateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.band.tunnel.v1beta1.MsgActivateResponse;
  return proto.band.tunnel.v1beta1.MsgActivateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.band.tunnel.v1beta1.MsgActivateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.band.tunnel.v1beta1.MsgActivateResponse}
 */
proto.band.tunnel.v1beta1.MsgActivateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.band.tunnel.v1beta1.MsgActivateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.band.tunnel.v1beta1.MsgActivateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.band.tunnel.v1beta1.MsgActivateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.MsgActivateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.band.tunnel.v1beta1.MsgDeactivate.prototype.toObject = function(opt_includeInstance) {
  return proto.band.tunnel.v1beta1.MsgDeactivate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.band.tunnel.v1beta1.MsgDeactivate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.MsgDeactivate.toObject = function(includeInstance, msg) {
  var f, obj = {
    tunnelId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    creator: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.band.tunnel.v1beta1.MsgDeactivate}
 */
proto.band.tunnel.v1beta1.MsgDeactivate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.band.tunnel.v1beta1.MsgDeactivate;
  return proto.band.tunnel.v1beta1.MsgDeactivate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.band.tunnel.v1beta1.MsgDeactivate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.band.tunnel.v1beta1.MsgDeactivate}
 */
proto.band.tunnel.v1beta1.MsgDeactivate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTunnelId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreator(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.band.tunnel.v1beta1.MsgDeactivate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.band.tunnel.v1beta1.MsgDeactivate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.band.tunnel.v1beta1.MsgDeactivate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.MsgDeactivate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTunnelId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getCreator();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint64 tunnel_id = 1;
 * @return {number}
 */
proto.band.tunnel.v1beta1.MsgDeactivate.prototype.getTunnelId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.band.tunnel.v1beta1.MsgDeactivate} returns this
 */
proto.band.tunnel.v1beta1.MsgDeactivate.prototype.setTunnelId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string creator = 2;
 * @return {string}
 */
proto.band.tunnel.v1beta1.MsgDeactivate.prototype.getCreator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.band.tunnel.v1beta1.MsgDeactivate} returns this
 */
proto.band.tunnel.v1beta1.MsgDeactivate.prototype.setCreator = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.band.tunnel.v1beta1.MsgDeactivateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.band.tunnel.v1beta1.MsgDeactivateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.band.tunnel.v1beta1.MsgDeactivateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.MsgDeactivateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.band.tunnel.v1beta1.MsgDeactivateResponse}
 */
proto.band.tunnel.v1beta1.MsgDeactivateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.band.tunnel.v1beta1.MsgDeactivateResponse;
  return proto.band.tunnel.v1beta1.MsgDeactivateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.band.tunnel.v1beta1.MsgDeactivateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.band.tunnel.v1beta1.MsgDeactivateResponse}
 */
proto.band.tunnel.v1beta1.MsgDeactivateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.band.tunnel.v1beta1.MsgDeactivateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.band.tunnel.v1beta1.MsgDeactivateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.band.tunnel.v1beta1.MsgDeactivateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.MsgDeactivateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.band.tunnel.v1beta1.MsgTriggerTunnel.prototype.toObject = function(opt_includeInstance) {
  return proto.band.tunnel.v1beta1.MsgTriggerTunnel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.band.tunnel.v1beta1.MsgTriggerTunnel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.MsgTriggerTunnel.toObject = function(includeInstance, msg) {
  var f, obj = {
    tunnelId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    creator: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.band.tunnel.v1beta1.MsgTriggerTunnel}
 */
proto.band.tunnel.v1beta1.MsgTriggerTunnel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.band.tunnel.v1beta1.MsgTriggerTunnel;
  return proto.band.tunnel.v1beta1.MsgTriggerTunnel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.band.tunnel.v1beta1.MsgTriggerTunnel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.band.tunnel.v1beta1.MsgTriggerTunnel}
 */
proto.band.tunnel.v1beta1.MsgTriggerTunnel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTunnelId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreator(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.band.tunnel.v1beta1.MsgTriggerTunnel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.band.tunnel.v1beta1.MsgTriggerTunnel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.band.tunnel.v1beta1.MsgTriggerTunnel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.MsgTriggerTunnel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTunnelId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getCreator();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint64 tunnel_id = 1;
 * @return {number}
 */
proto.band.tunnel.v1beta1.MsgTriggerTunnel.prototype.getTunnelId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.band.tunnel.v1beta1.MsgTriggerTunnel} returns this
 */
proto.band.tunnel.v1beta1.MsgTriggerTunnel.prototype.setTunnelId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string creator = 2;
 * @return {string}
 */
proto.band.tunnel.v1beta1.MsgTriggerTunnel.prototype.getCreator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.band.tunnel.v1beta1.MsgTriggerTunnel} returns this
 */
proto.band.tunnel.v1beta1.MsgTriggerTunnel.prototype.setCreator = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.band.tunnel.v1beta1.MsgTriggerTunnelResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.band.tunnel.v1beta1.MsgTriggerTunnelResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.band.tunnel.v1beta1.MsgTriggerTunnelResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.MsgTriggerTunnelResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.band.tunnel.v1beta1.MsgTriggerTunnelResponse}
 */
proto.band.tunnel.v1beta1.MsgTriggerTunnelResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.band.tunnel.v1beta1.MsgTriggerTunnelResponse;
  return proto.band.tunnel.v1beta1.MsgTriggerTunnelResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.band.tunnel.v1beta1.MsgTriggerTunnelResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.band.tunnel.v1beta1.MsgTriggerTunnelResponse}
 */
proto.band.tunnel.v1beta1.MsgTriggerTunnelResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.band.tunnel.v1beta1.MsgTriggerTunnelResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.band.tunnel.v1beta1.MsgTriggerTunnelResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.band.tunnel.v1beta1.MsgTriggerTunnelResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.MsgTriggerTunnelResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.band.tunnel.v1beta1.MsgDepositToTunnel.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.band.tunnel.v1beta1.MsgDepositToTunnel.prototype.toObject = function(opt_includeInstance) {
  return proto.band.tunnel.v1beta1.MsgDepositToTunnel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.band.tunnel.v1beta1.MsgDepositToTunnel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.MsgDepositToTunnel.toObject = function(includeInstance, msg) {
  var f, obj = {
    tunnelId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    amountList: jspb.Message.toObjectList(msg.getAmountList(),
    cosmos_base_v1beta1_coin_pb.Coin.toObject, includeInstance),
    depositor: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.band.tunnel.v1beta1.MsgDepositToTunnel}
 */
proto.band.tunnel.v1beta1.MsgDepositToTunnel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.band.tunnel.v1beta1.MsgDepositToTunnel;
  return proto.band.tunnel.v1beta1.MsgDepositToTunnel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.band.tunnel.v1beta1.MsgDepositToTunnel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.band.tunnel.v1beta1.MsgDepositToTunnel}
 */
proto.band.tunnel.v1beta1.MsgDepositToTunnel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTunnelId(value);
      break;
    case 2:
      var value = new cosmos_base_v1beta1_coin_pb.Coin;
      reader.readMessage(value,cosmos_base_v1beta1_coin_pb.Coin.deserializeBinaryFromReader);
      msg.addAmount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDepositor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.band.tunnel.v1beta1.MsgDepositToTunnel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.band.tunnel.v1beta1.MsgDepositToTunnel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.band.tunnel.v1beta1.MsgDepositToTunnel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.MsgDepositToTunnel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTunnelId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getAmountList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      cosmos_base_v1beta1_coin_pb.Coin.serializeBinaryToWriter
    );
  }
  f = message.getDepositor();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional uint64 tunnel_id = 1;
 * @return {number}
 */
proto.band.tunnel.v1beta1.MsgDepositToTunnel.prototype.getTunnelId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.band.tunnel.v1beta1.MsgDepositToTunnel} returns this
 */
proto.band.tunnel.v1beta1.MsgDepositToTunnel.prototype.setTunnelId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated cosmos.base.v1beta1.Coin amount = 2;
 * @return {!Array<!proto.cosmos.base.v1beta1.Coin>}
 */
proto.band.tunnel.v1beta1.MsgDepositToTunnel.prototype.getAmountList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.Coin>} */ (
    jspb.Message.getRepeatedWrapperField(this, cosmos_base_v1beta1_coin_pb.Coin, 2));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.Coin>} value
 * @return {!proto.band.tunnel.v1beta1.MsgDepositToTunnel} returns this
*/
proto.band.tunnel.v1beta1.MsgDepositToTunnel.prototype.setAmountList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.Coin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.Coin}
 */
proto.band.tunnel.v1beta1.MsgDepositToTunnel.prototype.addAmount = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.cosmos.base.v1beta1.Coin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.band.tunnel.v1beta1.MsgDepositToTunnel} returns this
 */
proto.band.tunnel.v1beta1.MsgDepositToTunnel.prototype.clearAmountList = function() {
  return this.setAmountList([]);
};


/**
 * optional string depositor = 3;
 * @return {string}
 */
proto.band.tunnel.v1beta1.MsgDepositToTunnel.prototype.getDepositor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.band.tunnel.v1beta1.MsgDepositToTunnel} returns this
 */
proto.band.tunnel.v1beta1.MsgDepositToTunnel.prototype.setDepositor = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.band.tunnel.v1beta1.MsgDepositToTunnelResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.band.tunnel.v1beta1.MsgDepositToTunnelResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.band.tunnel.v1beta1.MsgDepositToTunnelResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.MsgDepositToTunnelResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.band.tunnel.v1beta1.MsgDepositToTunnelResponse}
 */
proto.band.tunnel.v1beta1.MsgDepositToTunnelResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.band.tunnel.v1beta1.MsgDepositToTunnelResponse;
  return proto.band.tunnel.v1beta1.MsgDepositToTunnelResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.band.tunnel.v1beta1.MsgDepositToTunnelResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.band.tunnel.v1beta1.MsgDepositToTunnelResponse}
 */
proto.band.tunnel.v1beta1.MsgDepositToTunnelResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.band.tunnel.v1beta1.MsgDepositToTunnelResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.band.tunnel.v1beta1.MsgDepositToTunnelResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.band.tunnel.v1beta1.MsgDepositToTunnelResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.MsgDepositToTunnelResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.band.tunnel.v1beta1.MsgWithdrawFromTunnel.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.band.tunnel.v1beta1.MsgWithdrawFromTunnel.prototype.toObject = function(opt_includeInstance) {
  return proto.band.tunnel.v1beta1.MsgWithdrawFromTunnel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.band.tunnel.v1beta1.MsgWithdrawFromTunnel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.MsgWithdrawFromTunnel.toObject = function(includeInstance, msg) {
  var f, obj = {
    tunnelId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    amountList: jspb.Message.toObjectList(msg.getAmountList(),
    cosmos_base_v1beta1_coin_pb.Coin.toObject, includeInstance),
    withdrawer: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.band.tunnel.v1beta1.MsgWithdrawFromTunnel}
 */
proto.band.tunnel.v1beta1.MsgWithdrawFromTunnel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.band.tunnel.v1beta1.MsgWithdrawFromTunnel;
  return proto.band.tunnel.v1beta1.MsgWithdrawFromTunnel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.band.tunnel.v1beta1.MsgWithdrawFromTunnel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.band.tunnel.v1beta1.MsgWithdrawFromTunnel}
 */
proto.band.tunnel.v1beta1.MsgWithdrawFromTunnel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTunnelId(value);
      break;
    case 2:
      var value = new cosmos_base_v1beta1_coin_pb.Coin;
      reader.readMessage(value,cosmos_base_v1beta1_coin_pb.Coin.deserializeBinaryFromReader);
      msg.addAmount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setWithdrawer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.band.tunnel.v1beta1.MsgWithdrawFromTunnel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.band.tunnel.v1beta1.MsgWithdrawFromTunnel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.band.tunnel.v1beta1.MsgWithdrawFromTunnel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.MsgWithdrawFromTunnel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTunnelId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getAmountList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      cosmos_base_v1beta1_coin_pb.Coin.serializeBinaryToWriter
    );
  }
  f = message.getWithdrawer();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional uint64 tunnel_id = 1;
 * @return {number}
 */
proto.band.tunnel.v1beta1.MsgWithdrawFromTunnel.prototype.getTunnelId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.band.tunnel.v1beta1.MsgWithdrawFromTunnel} returns this
 */
proto.band.tunnel.v1beta1.MsgWithdrawFromTunnel.prototype.setTunnelId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated cosmos.base.v1beta1.Coin amount = 2;
 * @return {!Array<!proto.cosmos.base.v1beta1.Coin>}
 */
proto.band.tunnel.v1beta1.MsgWithdrawFromTunnel.prototype.getAmountList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.Coin>} */ (
    jspb.Message.getRepeatedWrapperField(this, cosmos_base_v1beta1_coin_pb.Coin, 2));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.Coin>} value
 * @return {!proto.band.tunnel.v1beta1.MsgWithdrawFromTunnel} returns this
*/
proto.band.tunnel.v1beta1.MsgWithdrawFromTunnel.prototype.setAmountList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.Coin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.Coin}
 */
proto.band.tunnel.v1beta1.MsgWithdrawFromTunnel.prototype.addAmount = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.cosmos.base.v1beta1.Coin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.band.tunnel.v1beta1.MsgWithdrawFromTunnel} returns this
 */
proto.band.tunnel.v1beta1.MsgWithdrawFromTunnel.prototype.clearAmountList = function() {
  return this.setAmountList([]);
};


/**
 * optional string withdrawer = 3;
 * @return {string}
 */
proto.band.tunnel.v1beta1.MsgWithdrawFromTunnel.prototype.getWithdrawer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.band.tunnel.v1beta1.MsgWithdrawFromTunnel} returns this
 */
proto.band.tunnel.v1beta1.MsgWithdrawFromTunnel.prototype.setWithdrawer = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.band.tunnel.v1beta1.MsgWithdrawFromTunnelResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.band.tunnel.v1beta1.MsgWithdrawFromTunnelResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.band.tunnel.v1beta1.MsgWithdrawFromTunnelResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.MsgWithdrawFromTunnelResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.band.tunnel.v1beta1.MsgWithdrawFromTunnelResponse}
 */
proto.band.tunnel.v1beta1.MsgWithdrawFromTunnelResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.band.tunnel.v1beta1.MsgWithdrawFromTunnelResponse;
  return proto.band.tunnel.v1beta1.MsgWithdrawFromTunnelResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.band.tunnel.v1beta1.MsgWithdrawFromTunnelResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.band.tunnel.v1beta1.MsgWithdrawFromTunnelResponse}
 */
proto.band.tunnel.v1beta1.MsgWithdrawFromTunnelResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.band.tunnel.v1beta1.MsgWithdrawFromTunnelResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.band.tunnel.v1beta1.MsgWithdrawFromTunnelResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.band.tunnel.v1beta1.MsgWithdrawFromTunnelResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.MsgWithdrawFromTunnelResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.band.tunnel.v1beta1.MsgUpdateParams.prototype.toObject = function(opt_includeInstance) {
  return proto.band.tunnel.v1beta1.MsgUpdateParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.band.tunnel.v1beta1.MsgUpdateParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.MsgUpdateParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    authority: jspb.Message.getFieldWithDefault(msg, 1, ""),
    params: (f = msg.getParams()) && band_tunnel_v1beta1_params_pb.Params.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.band.tunnel.v1beta1.MsgUpdateParams}
 */
proto.band.tunnel.v1beta1.MsgUpdateParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.band.tunnel.v1beta1.MsgUpdateParams;
  return proto.band.tunnel.v1beta1.MsgUpdateParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.band.tunnel.v1beta1.MsgUpdateParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.band.tunnel.v1beta1.MsgUpdateParams}
 */
proto.band.tunnel.v1beta1.MsgUpdateParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthority(value);
      break;
    case 2:
      var value = new band_tunnel_v1beta1_params_pb.Params;
      reader.readMessage(value,band_tunnel_v1beta1_params_pb.Params.deserializeBinaryFromReader);
      msg.setParams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.band.tunnel.v1beta1.MsgUpdateParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.band.tunnel.v1beta1.MsgUpdateParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.band.tunnel.v1beta1.MsgUpdateParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.MsgUpdateParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthority();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getParams();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      band_tunnel_v1beta1_params_pb.Params.serializeBinaryToWriter
    );
  }
};


/**
 * optional string authority = 1;
 * @return {string}
 */
proto.band.tunnel.v1beta1.MsgUpdateParams.prototype.getAuthority = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.band.tunnel.v1beta1.MsgUpdateParams} returns this
 */
proto.band.tunnel.v1beta1.MsgUpdateParams.prototype.setAuthority = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Params params = 2;
 * @return {?proto.band.tunnel.v1beta1.Params}
 */
proto.band.tunnel.v1beta1.MsgUpdateParams.prototype.getParams = function() {
  return /** @type{?proto.band.tunnel.v1beta1.Params} */ (
    jspb.Message.getWrapperField(this, band_tunnel_v1beta1_params_pb.Params, 2));
};


/**
 * @param {?proto.band.tunnel.v1beta1.Params|undefined} value
 * @return {!proto.band.tunnel.v1beta1.MsgUpdateParams} returns this
*/
proto.band.tunnel.v1beta1.MsgUpdateParams.prototype.setParams = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.band.tunnel.v1beta1.MsgUpdateParams} returns this
 */
proto.band.tunnel.v1beta1.MsgUpdateParams.prototype.clearParams = function() {
  return this.setParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.band.tunnel.v1beta1.MsgUpdateParams.prototype.hasParams = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.band.tunnel.v1beta1.MsgUpdateParamsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.band.tunnel.v1beta1.MsgUpdateParamsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.band.tunnel.v1beta1.MsgUpdateParamsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.MsgUpdateParamsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.band.tunnel.v1beta1.MsgUpdateParamsResponse}
 */
proto.band.tunnel.v1beta1.MsgUpdateParamsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.band.tunnel.v1beta1.MsgUpdateParamsResponse;
  return proto.band.tunnel.v1beta1.MsgUpdateParamsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.band.tunnel.v1beta1.MsgUpdateParamsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.band.tunnel.v1beta1.MsgUpdateParamsResponse}
 */
proto.band.tunnel.v1beta1.MsgUpdateParamsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.band.tunnel.v1beta1.MsgUpdateParamsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.band.tunnel.v1beta1.MsgUpdateParamsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.band.tunnel.v1beta1.MsgUpdateParamsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.MsgUpdateParamsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.band.tunnel.v1beta1);
