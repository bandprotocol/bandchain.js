/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: band/tunnel/v1beta1/params.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../../../gogoproto/gogo";
import * as dependency_2 from "./../../../cosmos/base/v1beta1/coin";
import * as pb_1 from "google-protobuf";
export namespace band.tunnel.v1beta1 {
    export class Params extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            min_deposit?: dependency_2.cosmos.base.v1beta1.Coin[];
            min_interval?: number;
            max_interval?: number;
            min_deviation_bps?: number;
            max_deviation_bps?: number;
            max_signals?: number;
            base_packet_fee?: dependency_2.cosmos.base.v1beta1.Coin[];
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1, 7], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("min_deposit" in data && data.min_deposit != undefined) {
                    this.min_deposit = data.min_deposit;
                }
                if ("min_interval" in data && data.min_interval != undefined) {
                    this.min_interval = data.min_interval;
                }
                if ("max_interval" in data && data.max_interval != undefined) {
                    this.max_interval = data.max_interval;
                }
                if ("min_deviation_bps" in data && data.min_deviation_bps != undefined) {
                    this.min_deviation_bps = data.min_deviation_bps;
                }
                if ("max_deviation_bps" in data && data.max_deviation_bps != undefined) {
                    this.max_deviation_bps = data.max_deviation_bps;
                }
                if ("max_signals" in data && data.max_signals != undefined) {
                    this.max_signals = data.max_signals;
                }
                if ("base_packet_fee" in data && data.base_packet_fee != undefined) {
                    this.base_packet_fee = data.base_packet_fee;
                }
            }
        }
        get min_deposit() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_2.cosmos.base.v1beta1.Coin, 1) as dependency_2.cosmos.base.v1beta1.Coin[];
        }
        set min_deposit(value: dependency_2.cosmos.base.v1beta1.Coin[]) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        get min_interval() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set min_interval(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get max_interval() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;
        }
        set max_interval(value: number) {
            pb_1.Message.setField(this, 3, value);
        }
        get min_deviation_bps() {
            return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;
        }
        set min_deviation_bps(value: number) {
            pb_1.Message.setField(this, 4, value);
        }
        get max_deviation_bps() {
            return pb_1.Message.getFieldWithDefault(this, 5, 0) as number;
        }
        set max_deviation_bps(value: number) {
            pb_1.Message.setField(this, 5, value);
        }
        get max_signals() {
            return pb_1.Message.getFieldWithDefault(this, 6, 0) as number;
        }
        set max_signals(value: number) {
            pb_1.Message.setField(this, 6, value);
        }
        get base_packet_fee() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_2.cosmos.base.v1beta1.Coin, 7) as dependency_2.cosmos.base.v1beta1.Coin[];
        }
        set base_packet_fee(value: dependency_2.cosmos.base.v1beta1.Coin[]) {
            pb_1.Message.setRepeatedWrapperField(this, 7, value);
        }
        static fromObject(data: {
            min_deposit?: ReturnType<typeof dependency_2.cosmos.base.v1beta1.Coin.prototype.toObject>[];
            min_interval?: number;
            max_interval?: number;
            min_deviation_bps?: number;
            max_deviation_bps?: number;
            max_signals?: number;
            base_packet_fee?: ReturnType<typeof dependency_2.cosmos.base.v1beta1.Coin.prototype.toObject>[];
        }): Params {
            const message = new Params({});
            if (data.min_deposit != null) {
                message.min_deposit = data.min_deposit.map(item => dependency_2.cosmos.base.v1beta1.Coin.fromObject(item));
            }
            if (data.min_interval != null) {
                message.min_interval = data.min_interval;
            }
            if (data.max_interval != null) {
                message.max_interval = data.max_interval;
            }
            if (data.min_deviation_bps != null) {
                message.min_deviation_bps = data.min_deviation_bps;
            }
            if (data.max_deviation_bps != null) {
                message.max_deviation_bps = data.max_deviation_bps;
            }
            if (data.max_signals != null) {
                message.max_signals = data.max_signals;
            }
            if (data.base_packet_fee != null) {
                message.base_packet_fee = data.base_packet_fee.map(item => dependency_2.cosmos.base.v1beta1.Coin.fromObject(item));
            }
            return message;
        }
        toObject() {
            const data: {
                min_deposit?: ReturnType<typeof dependency_2.cosmos.base.v1beta1.Coin.prototype.toObject>[];
                min_interval?: number;
                max_interval?: number;
                min_deviation_bps?: number;
                max_deviation_bps?: number;
                max_signals?: number;
                base_packet_fee?: ReturnType<typeof dependency_2.cosmos.base.v1beta1.Coin.prototype.toObject>[];
            } = {};
            if (this.min_deposit != null) {
                data.min_deposit = this.min_deposit.map((item: dependency_2.cosmos.base.v1beta1.Coin) => item.toObject());
            }
            if (this.min_interval != null) {
                data.min_interval = this.min_interval;
            }
            if (this.max_interval != null) {
                data.max_interval = this.max_interval;
            }
            if (this.min_deviation_bps != null) {
                data.min_deviation_bps = this.min_deviation_bps;
            }
            if (this.max_deviation_bps != null) {
                data.max_deviation_bps = this.max_deviation_bps;
            }
            if (this.max_signals != null) {
                data.max_signals = this.max_signals;
            }
            if (this.base_packet_fee != null) {
                data.base_packet_fee = this.base_packet_fee.map((item: dependency_2.cosmos.base.v1beta1.Coin) => item.toObject());
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.min_deposit.length)
                writer.writeRepeatedMessage(1, this.min_deposit, (item: dependency_2.cosmos.base.v1beta1.Coin) => item.serialize(writer));
            if (this.min_interval != 0)
                writer.writeUint64(2, this.min_interval);
            if (this.max_interval != 0)
                writer.writeUint64(3, this.max_interval);
            if (this.min_deviation_bps != 0)
                writer.writeUint64(4, this.min_deviation_bps);
            if (this.max_deviation_bps != 0)
                writer.writeUint64(5, this.max_deviation_bps);
            if (this.max_signals != 0)
                writer.writeUint64(6, this.max_signals);
            if (this.base_packet_fee.length)
                writer.writeRepeatedMessage(7, this.base_packet_fee, (item: dependency_2.cosmos.base.v1beta1.Coin) => item.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Params {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Params();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.min_deposit, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_2.cosmos.base.v1beta1.Coin.deserialize(reader), dependency_2.cosmos.base.v1beta1.Coin));
                        break;
                    case 2:
                        message.min_interval = reader.readUint64();
                        break;
                    case 3:
                        message.max_interval = reader.readUint64();
                        break;
                    case 4:
                        message.min_deviation_bps = reader.readUint64();
                        break;
                    case 5:
                        message.max_deviation_bps = reader.readUint64();
                        break;
                    case 6:
                        message.max_signals = reader.readUint64();
                        break;
                    case 7:
                        reader.readMessage(message.base_packet_fee, () => pb_1.Message.addToRepeatedWrapperField(message, 7, dependency_2.cosmos.base.v1beta1.Coin.deserialize(reader), dependency_2.cosmos.base.v1beta1.Coin));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): Params {
            return Params.deserialize(bytes);
        }
    }
}
