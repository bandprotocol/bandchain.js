// source: band/tunnel/v1beta1/tunnel.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var amino_amino_pb = require('../../../amino/amino_pb.js');
goog.object.extend(proto, amino_amino_pb);
var cosmos_base_v1beta1_coin_pb = require('../../../cosmos/base/v1beta1/coin_pb.js');
goog.object.extend(proto, cosmos_base_v1beta1_coin_pb);
var cosmos_proto_cosmos_pb = require('../../../cosmos_proto/cosmos_pb.js');
goog.object.extend(proto, cosmos_proto_cosmos_pb);
var gogoproto_gogo_pb = require('../../../gogoproto/gogo_pb.js');
goog.object.extend(proto, gogoproto_gogo_pb);
var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
var band_feeds_v1beta1_feeds_pb = require('../../../band/feeds/v1beta1/feeds_pb.js');
goog.object.extend(proto, band_feeds_v1beta1_feeds_pb);
goog.exportSymbol('proto.band.tunnel.v1beta1.Deposit', null, global);
goog.exportSymbol('proto.band.tunnel.v1beta1.LatestPrices', null, global);
goog.exportSymbol('proto.band.tunnel.v1beta1.Packet', null, global);
goog.exportSymbol('proto.band.tunnel.v1beta1.SignalDeviation', null, global);
goog.exportSymbol('proto.band.tunnel.v1beta1.TotalFees', null, global);
goog.exportSymbol('proto.band.tunnel.v1beta1.Tunnel', null, global);
goog.exportSymbol('proto.band.tunnel.v1beta1.TunnelSignatureOrder', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.band.tunnel.v1beta1.Tunnel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.band.tunnel.v1beta1.Tunnel.repeatedFields_, null);
};
goog.inherits(proto.band.tunnel.v1beta1.Tunnel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.band.tunnel.v1beta1.Tunnel.displayName = 'proto.band.tunnel.v1beta1.Tunnel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.band.tunnel.v1beta1.LatestPrices = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.band.tunnel.v1beta1.LatestPrices.repeatedFields_, null);
};
goog.inherits(proto.band.tunnel.v1beta1.LatestPrices, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.band.tunnel.v1beta1.LatestPrices.displayName = 'proto.band.tunnel.v1beta1.LatestPrices';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.band.tunnel.v1beta1.TotalFees = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.band.tunnel.v1beta1.TotalFees.repeatedFields_, null);
};
goog.inherits(proto.band.tunnel.v1beta1.TotalFees, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.band.tunnel.v1beta1.TotalFees.displayName = 'proto.band.tunnel.v1beta1.TotalFees';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.band.tunnel.v1beta1.Packet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.band.tunnel.v1beta1.Packet.repeatedFields_, null);
};
goog.inherits(proto.band.tunnel.v1beta1.Packet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.band.tunnel.v1beta1.Packet.displayName = 'proto.band.tunnel.v1beta1.Packet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.band.tunnel.v1beta1.Deposit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.band.tunnel.v1beta1.Deposit.repeatedFields_, null);
};
goog.inherits(proto.band.tunnel.v1beta1.Deposit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.band.tunnel.v1beta1.Deposit.displayName = 'proto.band.tunnel.v1beta1.Deposit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.band.tunnel.v1beta1.SignalDeviation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.band.tunnel.v1beta1.SignalDeviation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.band.tunnel.v1beta1.SignalDeviation.displayName = 'proto.band.tunnel.v1beta1.SignalDeviation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.band.tunnel.v1beta1.TunnelSignatureOrder = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.band.tunnel.v1beta1.TunnelSignatureOrder, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.band.tunnel.v1beta1.TunnelSignatureOrder.displayName = 'proto.band.tunnel.v1beta1.TunnelSignatureOrder';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.band.tunnel.v1beta1.Tunnel.repeatedFields_ = [6,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.band.tunnel.v1beta1.Tunnel.prototype.toObject = function(opt_includeInstance) {
  return proto.band.tunnel.v1beta1.Tunnel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.band.tunnel.v1beta1.Tunnel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.Tunnel.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    sequence: jspb.Message.getFieldWithDefault(msg, 2, 0),
    route: (f = msg.getRoute()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    encoder: jspb.Message.getFieldWithDefault(msg, 4, 0),
    feePayer: jspb.Message.getFieldWithDefault(msg, 5, ""),
    signalDeviationsList: jspb.Message.toObjectList(msg.getSignalDeviationsList(),
    proto.band.tunnel.v1beta1.SignalDeviation.toObject, includeInstance),
    interval: jspb.Message.getFieldWithDefault(msg, 7, 0),
    totalDepositList: jspb.Message.toObjectList(msg.getTotalDepositList(),
    cosmos_base_v1beta1_coin_pb.Coin.toObject, includeInstance),
    isActive: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    createdAt: jspb.Message.getFieldWithDefault(msg, 10, 0),
    creator: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.band.tunnel.v1beta1.Tunnel}
 */
proto.band.tunnel.v1beta1.Tunnel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.band.tunnel.v1beta1.Tunnel;
  return proto.band.tunnel.v1beta1.Tunnel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.band.tunnel.v1beta1.Tunnel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.band.tunnel.v1beta1.Tunnel}
 */
proto.band.tunnel.v1beta1.Tunnel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSequence(value);
      break;
    case 3:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setRoute(value);
      break;
    case 4:
      var value = /** @type {!proto.band.feeds.v1beta1.Encoder} */ (reader.readEnum());
      msg.setEncoder(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeePayer(value);
      break;
    case 6:
      var value = new proto.band.tunnel.v1beta1.SignalDeviation;
      reader.readMessage(value,proto.band.tunnel.v1beta1.SignalDeviation.deserializeBinaryFromReader);
      msg.addSignalDeviations(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInterval(value);
      break;
    case 8:
      var value = new cosmos_base_v1beta1_coin_pb.Coin;
      reader.readMessage(value,cosmos_base_v1beta1_coin_pb.Coin.deserializeBinaryFromReader);
      msg.addTotalDeposit(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsActive(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAt(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreator(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.band.tunnel.v1beta1.Tunnel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.band.tunnel.v1beta1.Tunnel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.band.tunnel.v1beta1.Tunnel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.Tunnel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getRoute();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getEncoder();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getFeePayer();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSignalDeviationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.band.tunnel.v1beta1.SignalDeviation.serializeBinaryToWriter
    );
  }
  f = message.getInterval();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getTotalDepositList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      cosmos_base_v1beta1_coin_pb.Coin.serializeBinaryToWriter
    );
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getCreator();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.band.tunnel.v1beta1.Tunnel.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.band.tunnel.v1beta1.Tunnel} returns this
 */
proto.band.tunnel.v1beta1.Tunnel.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 sequence = 2;
 * @return {number}
 */
proto.band.tunnel.v1beta1.Tunnel.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.band.tunnel.v1beta1.Tunnel} returns this
 */
proto.band.tunnel.v1beta1.Tunnel.prototype.setSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional google.protobuf.Any route = 3;
 * @return {?proto.google.protobuf.Any}
 */
proto.band.tunnel.v1beta1.Tunnel.prototype.getRoute = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 3));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.band.tunnel.v1beta1.Tunnel} returns this
*/
proto.band.tunnel.v1beta1.Tunnel.prototype.setRoute = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.band.tunnel.v1beta1.Tunnel} returns this
 */
proto.band.tunnel.v1beta1.Tunnel.prototype.clearRoute = function() {
  return this.setRoute(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.band.tunnel.v1beta1.Tunnel.prototype.hasRoute = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional band.feeds.v1beta1.Encoder encoder = 4;
 * @return {!proto.band.feeds.v1beta1.Encoder}
 */
proto.band.tunnel.v1beta1.Tunnel.prototype.getEncoder = function() {
  return /** @type {!proto.band.feeds.v1beta1.Encoder} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.band.feeds.v1beta1.Encoder} value
 * @return {!proto.band.tunnel.v1beta1.Tunnel} returns this
 */
proto.band.tunnel.v1beta1.Tunnel.prototype.setEncoder = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional string fee_payer = 5;
 * @return {string}
 */
proto.band.tunnel.v1beta1.Tunnel.prototype.getFeePayer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.band.tunnel.v1beta1.Tunnel} returns this
 */
proto.band.tunnel.v1beta1.Tunnel.prototype.setFeePayer = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated SignalDeviation signal_deviations = 6;
 * @return {!Array<!proto.band.tunnel.v1beta1.SignalDeviation>}
 */
proto.band.tunnel.v1beta1.Tunnel.prototype.getSignalDeviationsList = function() {
  return /** @type{!Array<!proto.band.tunnel.v1beta1.SignalDeviation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.band.tunnel.v1beta1.SignalDeviation, 6));
};


/**
 * @param {!Array<!proto.band.tunnel.v1beta1.SignalDeviation>} value
 * @return {!proto.band.tunnel.v1beta1.Tunnel} returns this
*/
proto.band.tunnel.v1beta1.Tunnel.prototype.setSignalDeviationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.band.tunnel.v1beta1.SignalDeviation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.band.tunnel.v1beta1.SignalDeviation}
 */
proto.band.tunnel.v1beta1.Tunnel.prototype.addSignalDeviations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.band.tunnel.v1beta1.SignalDeviation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.band.tunnel.v1beta1.Tunnel} returns this
 */
proto.band.tunnel.v1beta1.Tunnel.prototype.clearSignalDeviationsList = function() {
  return this.setSignalDeviationsList([]);
};


/**
 * optional uint64 interval = 7;
 * @return {number}
 */
proto.band.tunnel.v1beta1.Tunnel.prototype.getInterval = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.band.tunnel.v1beta1.Tunnel} returns this
 */
proto.band.tunnel.v1beta1.Tunnel.prototype.setInterval = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * repeated cosmos.base.v1beta1.Coin total_deposit = 8;
 * @return {!Array<!proto.cosmos.base.v1beta1.Coin>}
 */
proto.band.tunnel.v1beta1.Tunnel.prototype.getTotalDepositList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.Coin>} */ (
    jspb.Message.getRepeatedWrapperField(this, cosmos_base_v1beta1_coin_pb.Coin, 8));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.Coin>} value
 * @return {!proto.band.tunnel.v1beta1.Tunnel} returns this
*/
proto.band.tunnel.v1beta1.Tunnel.prototype.setTotalDepositList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.Coin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.Coin}
 */
proto.band.tunnel.v1beta1.Tunnel.prototype.addTotalDeposit = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.cosmos.base.v1beta1.Coin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.band.tunnel.v1beta1.Tunnel} returns this
 */
proto.band.tunnel.v1beta1.Tunnel.prototype.clearTotalDepositList = function() {
  return this.setTotalDepositList([]);
};


/**
 * optional bool is_active = 9;
 * @return {boolean}
 */
proto.band.tunnel.v1beta1.Tunnel.prototype.getIsActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.band.tunnel.v1beta1.Tunnel} returns this
 */
proto.band.tunnel.v1beta1.Tunnel.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional int64 created_at = 10;
 * @return {number}
 */
proto.band.tunnel.v1beta1.Tunnel.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.band.tunnel.v1beta1.Tunnel} returns this
 */
proto.band.tunnel.v1beta1.Tunnel.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string creator = 11;
 * @return {string}
 */
proto.band.tunnel.v1beta1.Tunnel.prototype.getCreator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.band.tunnel.v1beta1.Tunnel} returns this
 */
proto.band.tunnel.v1beta1.Tunnel.prototype.setCreator = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.band.tunnel.v1beta1.LatestPrices.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.band.tunnel.v1beta1.LatestPrices.prototype.toObject = function(opt_includeInstance) {
  return proto.band.tunnel.v1beta1.LatestPrices.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.band.tunnel.v1beta1.LatestPrices} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.LatestPrices.toObject = function(includeInstance, msg) {
  var f, obj = {
    tunnelId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pricesList: jspb.Message.toObjectList(msg.getPricesList(),
    band_feeds_v1beta1_feeds_pb.Price.toObject, includeInstance),
    lastInterval: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.band.tunnel.v1beta1.LatestPrices}
 */
proto.band.tunnel.v1beta1.LatestPrices.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.band.tunnel.v1beta1.LatestPrices;
  return proto.band.tunnel.v1beta1.LatestPrices.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.band.tunnel.v1beta1.LatestPrices} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.band.tunnel.v1beta1.LatestPrices}
 */
proto.band.tunnel.v1beta1.LatestPrices.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTunnelId(value);
      break;
    case 2:
      var value = new band_feeds_v1beta1_feeds_pb.Price;
      reader.readMessage(value,band_feeds_v1beta1_feeds_pb.Price.deserializeBinaryFromReader);
      msg.addPrices(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastInterval(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.band.tunnel.v1beta1.LatestPrices.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.band.tunnel.v1beta1.LatestPrices.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.band.tunnel.v1beta1.LatestPrices} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.LatestPrices.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTunnelId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getPricesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      band_feeds_v1beta1_feeds_pb.Price.serializeBinaryToWriter
    );
  }
  f = message.getLastInterval();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional uint64 tunnel_id = 1;
 * @return {number}
 */
proto.band.tunnel.v1beta1.LatestPrices.prototype.getTunnelId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.band.tunnel.v1beta1.LatestPrices} returns this
 */
proto.band.tunnel.v1beta1.LatestPrices.prototype.setTunnelId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated band.feeds.v1beta1.Price prices = 2;
 * @return {!Array<!proto.band.feeds.v1beta1.Price>}
 */
proto.band.tunnel.v1beta1.LatestPrices.prototype.getPricesList = function() {
  return /** @type{!Array<!proto.band.feeds.v1beta1.Price>} */ (
    jspb.Message.getRepeatedWrapperField(this, band_feeds_v1beta1_feeds_pb.Price, 2));
};


/**
 * @param {!Array<!proto.band.feeds.v1beta1.Price>} value
 * @return {!proto.band.tunnel.v1beta1.LatestPrices} returns this
*/
proto.band.tunnel.v1beta1.LatestPrices.prototype.setPricesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.band.feeds.v1beta1.Price=} opt_value
 * @param {number=} opt_index
 * @return {!proto.band.feeds.v1beta1.Price}
 */
proto.band.tunnel.v1beta1.LatestPrices.prototype.addPrices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.band.feeds.v1beta1.Price, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.band.tunnel.v1beta1.LatestPrices} returns this
 */
proto.band.tunnel.v1beta1.LatestPrices.prototype.clearPricesList = function() {
  return this.setPricesList([]);
};


/**
 * optional int64 last_interval = 3;
 * @return {number}
 */
proto.band.tunnel.v1beta1.LatestPrices.prototype.getLastInterval = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.band.tunnel.v1beta1.LatestPrices} returns this
 */
proto.band.tunnel.v1beta1.LatestPrices.prototype.setLastInterval = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.band.tunnel.v1beta1.TotalFees.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.band.tunnel.v1beta1.TotalFees.prototype.toObject = function(opt_includeInstance) {
  return proto.band.tunnel.v1beta1.TotalFees.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.band.tunnel.v1beta1.TotalFees} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.TotalFees.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalBasePacketFeeList: jspb.Message.toObjectList(msg.getTotalBasePacketFeeList(),
    cosmos_base_v1beta1_coin_pb.Coin.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.band.tunnel.v1beta1.TotalFees}
 */
proto.band.tunnel.v1beta1.TotalFees.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.band.tunnel.v1beta1.TotalFees;
  return proto.band.tunnel.v1beta1.TotalFees.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.band.tunnel.v1beta1.TotalFees} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.band.tunnel.v1beta1.TotalFees}
 */
proto.band.tunnel.v1beta1.TotalFees.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cosmos_base_v1beta1_coin_pb.Coin;
      reader.readMessage(value,cosmos_base_v1beta1_coin_pb.Coin.deserializeBinaryFromReader);
      msg.addTotalBasePacketFee(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.band.tunnel.v1beta1.TotalFees.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.band.tunnel.v1beta1.TotalFees.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.band.tunnel.v1beta1.TotalFees} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.TotalFees.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotalBasePacketFeeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      cosmos_base_v1beta1_coin_pb.Coin.serializeBinaryToWriter
    );
  }
};


/**
 * repeated cosmos.base.v1beta1.Coin total_base_packet_fee = 1;
 * @return {!Array<!proto.cosmos.base.v1beta1.Coin>}
 */
proto.band.tunnel.v1beta1.TotalFees.prototype.getTotalBasePacketFeeList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.Coin>} */ (
    jspb.Message.getRepeatedWrapperField(this, cosmos_base_v1beta1_coin_pb.Coin, 1));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.Coin>} value
 * @return {!proto.band.tunnel.v1beta1.TotalFees} returns this
*/
proto.band.tunnel.v1beta1.TotalFees.prototype.setTotalBasePacketFeeList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.Coin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.Coin}
 */
proto.band.tunnel.v1beta1.TotalFees.prototype.addTotalBasePacketFee = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cosmos.base.v1beta1.Coin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.band.tunnel.v1beta1.TotalFees} returns this
 */
proto.band.tunnel.v1beta1.TotalFees.prototype.clearTotalBasePacketFeeList = function() {
  return this.setTotalBasePacketFeeList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.band.tunnel.v1beta1.Packet.repeatedFields_ = [3,5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.band.tunnel.v1beta1.Packet.prototype.toObject = function(opt_includeInstance) {
  return proto.band.tunnel.v1beta1.Packet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.band.tunnel.v1beta1.Packet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.Packet.toObject = function(includeInstance, msg) {
  var f, obj = {
    tunnelId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    sequence: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pricesList: jspb.Message.toObjectList(msg.getPricesList(),
    band_feeds_v1beta1_feeds_pb.Price.toObject, includeInstance),
    receipt: (f = msg.getReceipt()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    baseFeeList: jspb.Message.toObjectList(msg.getBaseFeeList(),
    cosmos_base_v1beta1_coin_pb.Coin.toObject, includeInstance),
    routeFeeList: jspb.Message.toObjectList(msg.getRouteFeeList(),
    cosmos_base_v1beta1_coin_pb.Coin.toObject, includeInstance),
    createdAt: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.band.tunnel.v1beta1.Packet}
 */
proto.band.tunnel.v1beta1.Packet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.band.tunnel.v1beta1.Packet;
  return proto.band.tunnel.v1beta1.Packet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.band.tunnel.v1beta1.Packet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.band.tunnel.v1beta1.Packet}
 */
proto.band.tunnel.v1beta1.Packet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTunnelId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSequence(value);
      break;
    case 3:
      var value = new band_feeds_v1beta1_feeds_pb.Price;
      reader.readMessage(value,band_feeds_v1beta1_feeds_pb.Price.deserializeBinaryFromReader);
      msg.addPrices(value);
      break;
    case 4:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setReceipt(value);
      break;
    case 5:
      var value = new cosmos_base_v1beta1_coin_pb.Coin;
      reader.readMessage(value,cosmos_base_v1beta1_coin_pb.Coin.deserializeBinaryFromReader);
      msg.addBaseFee(value);
      break;
    case 6:
      var value = new cosmos_base_v1beta1_coin_pb.Coin;
      reader.readMessage(value,cosmos_base_v1beta1_coin_pb.Coin.deserializeBinaryFromReader);
      msg.addRouteFee(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.band.tunnel.v1beta1.Packet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.band.tunnel.v1beta1.Packet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.band.tunnel.v1beta1.Packet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.Packet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTunnelId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getPricesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      band_feeds_v1beta1_feeds_pb.Price.serializeBinaryToWriter
    );
  }
  f = message.getReceipt();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getBaseFeeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      cosmos_base_v1beta1_coin_pb.Coin.serializeBinaryToWriter
    );
  }
  f = message.getRouteFeeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      cosmos_base_v1beta1_coin_pb.Coin.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
};


/**
 * optional uint64 tunnel_id = 1;
 * @return {number}
 */
proto.band.tunnel.v1beta1.Packet.prototype.getTunnelId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.band.tunnel.v1beta1.Packet} returns this
 */
proto.band.tunnel.v1beta1.Packet.prototype.setTunnelId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 sequence = 2;
 * @return {number}
 */
proto.band.tunnel.v1beta1.Packet.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.band.tunnel.v1beta1.Packet} returns this
 */
proto.band.tunnel.v1beta1.Packet.prototype.setSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated band.feeds.v1beta1.Price prices = 3;
 * @return {!Array<!proto.band.feeds.v1beta1.Price>}
 */
proto.band.tunnel.v1beta1.Packet.prototype.getPricesList = function() {
  return /** @type{!Array<!proto.band.feeds.v1beta1.Price>} */ (
    jspb.Message.getRepeatedWrapperField(this, band_feeds_v1beta1_feeds_pb.Price, 3));
};


/**
 * @param {!Array<!proto.band.feeds.v1beta1.Price>} value
 * @return {!proto.band.tunnel.v1beta1.Packet} returns this
*/
proto.band.tunnel.v1beta1.Packet.prototype.setPricesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.band.feeds.v1beta1.Price=} opt_value
 * @param {number=} opt_index
 * @return {!proto.band.feeds.v1beta1.Price}
 */
proto.band.tunnel.v1beta1.Packet.prototype.addPrices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.band.feeds.v1beta1.Price, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.band.tunnel.v1beta1.Packet} returns this
 */
proto.band.tunnel.v1beta1.Packet.prototype.clearPricesList = function() {
  return this.setPricesList([]);
};


/**
 * optional google.protobuf.Any receipt = 4;
 * @return {?proto.google.protobuf.Any}
 */
proto.band.tunnel.v1beta1.Packet.prototype.getReceipt = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 4));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.band.tunnel.v1beta1.Packet} returns this
*/
proto.band.tunnel.v1beta1.Packet.prototype.setReceipt = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.band.tunnel.v1beta1.Packet} returns this
 */
proto.band.tunnel.v1beta1.Packet.prototype.clearReceipt = function() {
  return this.setReceipt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.band.tunnel.v1beta1.Packet.prototype.hasReceipt = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated cosmos.base.v1beta1.Coin base_fee = 5;
 * @return {!Array<!proto.cosmos.base.v1beta1.Coin>}
 */
proto.band.tunnel.v1beta1.Packet.prototype.getBaseFeeList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.Coin>} */ (
    jspb.Message.getRepeatedWrapperField(this, cosmos_base_v1beta1_coin_pb.Coin, 5));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.Coin>} value
 * @return {!proto.band.tunnel.v1beta1.Packet} returns this
*/
proto.band.tunnel.v1beta1.Packet.prototype.setBaseFeeList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.Coin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.Coin}
 */
proto.band.tunnel.v1beta1.Packet.prototype.addBaseFee = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.cosmos.base.v1beta1.Coin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.band.tunnel.v1beta1.Packet} returns this
 */
proto.band.tunnel.v1beta1.Packet.prototype.clearBaseFeeList = function() {
  return this.setBaseFeeList([]);
};


/**
 * repeated cosmos.base.v1beta1.Coin route_fee = 6;
 * @return {!Array<!proto.cosmos.base.v1beta1.Coin>}
 */
proto.band.tunnel.v1beta1.Packet.prototype.getRouteFeeList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.Coin>} */ (
    jspb.Message.getRepeatedWrapperField(this, cosmos_base_v1beta1_coin_pb.Coin, 6));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.Coin>} value
 * @return {!proto.band.tunnel.v1beta1.Packet} returns this
*/
proto.band.tunnel.v1beta1.Packet.prototype.setRouteFeeList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.Coin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.Coin}
 */
proto.band.tunnel.v1beta1.Packet.prototype.addRouteFee = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.cosmos.base.v1beta1.Coin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.band.tunnel.v1beta1.Packet} returns this
 */
proto.band.tunnel.v1beta1.Packet.prototype.clearRouteFeeList = function() {
  return this.setRouteFeeList([]);
};


/**
 * optional int64 created_at = 7;
 * @return {number}
 */
proto.band.tunnel.v1beta1.Packet.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.band.tunnel.v1beta1.Packet} returns this
 */
proto.band.tunnel.v1beta1.Packet.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.band.tunnel.v1beta1.Deposit.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.band.tunnel.v1beta1.Deposit.prototype.toObject = function(opt_includeInstance) {
  return proto.band.tunnel.v1beta1.Deposit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.band.tunnel.v1beta1.Deposit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.Deposit.toObject = function(includeInstance, msg) {
  var f, obj = {
    tunnelId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    depositor: jspb.Message.getFieldWithDefault(msg, 2, ""),
    amountList: jspb.Message.toObjectList(msg.getAmountList(),
    cosmos_base_v1beta1_coin_pb.Coin.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.band.tunnel.v1beta1.Deposit}
 */
proto.band.tunnel.v1beta1.Deposit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.band.tunnel.v1beta1.Deposit;
  return proto.band.tunnel.v1beta1.Deposit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.band.tunnel.v1beta1.Deposit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.band.tunnel.v1beta1.Deposit}
 */
proto.band.tunnel.v1beta1.Deposit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTunnelId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDepositor(value);
      break;
    case 3:
      var value = new cosmos_base_v1beta1_coin_pb.Coin;
      reader.readMessage(value,cosmos_base_v1beta1_coin_pb.Coin.deserializeBinaryFromReader);
      msg.addAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.band.tunnel.v1beta1.Deposit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.band.tunnel.v1beta1.Deposit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.band.tunnel.v1beta1.Deposit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.Deposit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTunnelId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getDepositor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAmountList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      cosmos_base_v1beta1_coin_pb.Coin.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 tunnel_id = 1;
 * @return {number}
 */
proto.band.tunnel.v1beta1.Deposit.prototype.getTunnelId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.band.tunnel.v1beta1.Deposit} returns this
 */
proto.band.tunnel.v1beta1.Deposit.prototype.setTunnelId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string depositor = 2;
 * @return {string}
 */
proto.band.tunnel.v1beta1.Deposit.prototype.getDepositor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.band.tunnel.v1beta1.Deposit} returns this
 */
proto.band.tunnel.v1beta1.Deposit.prototype.setDepositor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated cosmos.base.v1beta1.Coin amount = 3;
 * @return {!Array<!proto.cosmos.base.v1beta1.Coin>}
 */
proto.band.tunnel.v1beta1.Deposit.prototype.getAmountList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.Coin>} */ (
    jspb.Message.getRepeatedWrapperField(this, cosmos_base_v1beta1_coin_pb.Coin, 3));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.Coin>} value
 * @return {!proto.band.tunnel.v1beta1.Deposit} returns this
*/
proto.band.tunnel.v1beta1.Deposit.prototype.setAmountList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.Coin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.Coin}
 */
proto.band.tunnel.v1beta1.Deposit.prototype.addAmount = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.cosmos.base.v1beta1.Coin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.band.tunnel.v1beta1.Deposit} returns this
 */
proto.band.tunnel.v1beta1.Deposit.prototype.clearAmountList = function() {
  return this.setAmountList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.band.tunnel.v1beta1.SignalDeviation.prototype.toObject = function(opt_includeInstance) {
  return proto.band.tunnel.v1beta1.SignalDeviation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.band.tunnel.v1beta1.SignalDeviation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.SignalDeviation.toObject = function(includeInstance, msg) {
  var f, obj = {
    signalId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    softDeviationBps: jspb.Message.getFieldWithDefault(msg, 2, 0),
    hardDeviationBps: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.band.tunnel.v1beta1.SignalDeviation}
 */
proto.band.tunnel.v1beta1.SignalDeviation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.band.tunnel.v1beta1.SignalDeviation;
  return proto.band.tunnel.v1beta1.SignalDeviation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.band.tunnel.v1beta1.SignalDeviation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.band.tunnel.v1beta1.SignalDeviation}
 */
proto.band.tunnel.v1beta1.SignalDeviation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignalId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSoftDeviationBps(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setHardDeviationBps(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.band.tunnel.v1beta1.SignalDeviation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.band.tunnel.v1beta1.SignalDeviation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.band.tunnel.v1beta1.SignalDeviation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.SignalDeviation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSignalId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSoftDeviationBps();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getHardDeviationBps();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional string signal_id = 1;
 * @return {string}
 */
proto.band.tunnel.v1beta1.SignalDeviation.prototype.getSignalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.band.tunnel.v1beta1.SignalDeviation} returns this
 */
proto.band.tunnel.v1beta1.SignalDeviation.prototype.setSignalId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 soft_deviation_bps = 2;
 * @return {number}
 */
proto.band.tunnel.v1beta1.SignalDeviation.prototype.getSoftDeviationBps = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.band.tunnel.v1beta1.SignalDeviation} returns this
 */
proto.band.tunnel.v1beta1.SignalDeviation.prototype.setSoftDeviationBps = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 hard_deviation_bps = 3;
 * @return {number}
 */
proto.band.tunnel.v1beta1.SignalDeviation.prototype.getHardDeviationBps = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.band.tunnel.v1beta1.SignalDeviation} returns this
 */
proto.band.tunnel.v1beta1.SignalDeviation.prototype.setHardDeviationBps = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.band.tunnel.v1beta1.TunnelSignatureOrder.prototype.toObject = function(opt_includeInstance) {
  return proto.band.tunnel.v1beta1.TunnelSignatureOrder.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.band.tunnel.v1beta1.TunnelSignatureOrder} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.TunnelSignatureOrder.toObject = function(includeInstance, msg) {
  var f, obj = {
    tunnelId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    sequence: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.band.tunnel.v1beta1.TunnelSignatureOrder}
 */
proto.band.tunnel.v1beta1.TunnelSignatureOrder.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.band.tunnel.v1beta1.TunnelSignatureOrder;
  return proto.band.tunnel.v1beta1.TunnelSignatureOrder.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.band.tunnel.v1beta1.TunnelSignatureOrder} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.band.tunnel.v1beta1.TunnelSignatureOrder}
 */
proto.band.tunnel.v1beta1.TunnelSignatureOrder.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTunnelId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSequence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.band.tunnel.v1beta1.TunnelSignatureOrder.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.band.tunnel.v1beta1.TunnelSignatureOrder.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.band.tunnel.v1beta1.TunnelSignatureOrder} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.tunnel.v1beta1.TunnelSignatureOrder.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTunnelId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 tunnel_id = 1;
 * @return {number}
 */
proto.band.tunnel.v1beta1.TunnelSignatureOrder.prototype.getTunnelId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.band.tunnel.v1beta1.TunnelSignatureOrder} returns this
 */
proto.band.tunnel.v1beta1.TunnelSignatureOrder.prototype.setTunnelId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 sequence = 2;
 * @return {number}
 */
proto.band.tunnel.v1beta1.TunnelSignatureOrder.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.band.tunnel.v1beta1.TunnelSignatureOrder} returns this
 */
proto.band.tunnel.v1beta1.TunnelSignatureOrder.prototype.setSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


goog.object.extend(exports, proto.band.tunnel.v1beta1);
