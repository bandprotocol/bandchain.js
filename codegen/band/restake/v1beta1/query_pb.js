// source: band/restake/v1beta1/query.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var gogoproto_gogo_pb = require('../../../gogoproto/gogo_pb.js');
goog.object.extend(proto, gogoproto_gogo_pb);
var google_api_annotations_pb = require('../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var cosmos_base_query_v1beta1_pagination_pb = require('../../../cosmos/base/query/v1beta1/pagination_pb.js');
goog.object.extend(proto, cosmos_base_query_v1beta1_pagination_pb);
var cosmos_proto_cosmos_pb = require('../../../cosmos_proto/cosmos_pb.js');
goog.object.extend(proto, cosmos_proto_cosmos_pb);
var band_restake_v1beta1_types_pb = require('../../../band/restake/v1beta1/types_pb.js');
goog.object.extend(proto, band_restake_v1beta1_types_pb);
var band_restake_v1beta1_genesis_pb = require('../../../band/restake/v1beta1/genesis_pb.js');
goog.object.extend(proto, band_restake_v1beta1_genesis_pb);
goog.exportSymbol('proto.band.restake.v1beta1.QueryLockRequest', null, global);
goog.exportSymbol('proto.band.restake.v1beta1.QueryLockResponse', null, global);
goog.exportSymbol('proto.band.restake.v1beta1.QueryLocksRequest', null, global);
goog.exportSymbol('proto.band.restake.v1beta1.QueryLocksResponse', null, global);
goog.exportSymbol('proto.band.restake.v1beta1.QueryParamsRequest', null, global);
goog.exportSymbol('proto.band.restake.v1beta1.QueryParamsResponse', null, global);
goog.exportSymbol('proto.band.restake.v1beta1.QueryStakeRequest', null, global);
goog.exportSymbol('proto.band.restake.v1beta1.QueryStakeResponse', null, global);
goog.exportSymbol('proto.band.restake.v1beta1.QueryVaultRequest', null, global);
goog.exportSymbol('proto.band.restake.v1beta1.QueryVaultResponse', null, global);
goog.exportSymbol('proto.band.restake.v1beta1.QueryVaultsRequest', null, global);
goog.exportSymbol('proto.band.restake.v1beta1.QueryVaultsResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.band.restake.v1beta1.QueryVaultsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.band.restake.v1beta1.QueryVaultsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.band.restake.v1beta1.QueryVaultsRequest.displayName = 'proto.band.restake.v1beta1.QueryVaultsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.band.restake.v1beta1.QueryVaultsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.band.restake.v1beta1.QueryVaultsResponse.repeatedFields_, null);
};
goog.inherits(proto.band.restake.v1beta1.QueryVaultsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.band.restake.v1beta1.QueryVaultsResponse.displayName = 'proto.band.restake.v1beta1.QueryVaultsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.band.restake.v1beta1.QueryVaultRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.band.restake.v1beta1.QueryVaultRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.band.restake.v1beta1.QueryVaultRequest.displayName = 'proto.band.restake.v1beta1.QueryVaultRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.band.restake.v1beta1.QueryVaultResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.band.restake.v1beta1.QueryVaultResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.band.restake.v1beta1.QueryVaultResponse.displayName = 'proto.band.restake.v1beta1.QueryVaultResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.band.restake.v1beta1.QueryLocksRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.band.restake.v1beta1.QueryLocksRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.band.restake.v1beta1.QueryLocksRequest.displayName = 'proto.band.restake.v1beta1.QueryLocksRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.band.restake.v1beta1.QueryLocksResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.band.restake.v1beta1.QueryLocksResponse.repeatedFields_, null);
};
goog.inherits(proto.band.restake.v1beta1.QueryLocksResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.band.restake.v1beta1.QueryLocksResponse.displayName = 'proto.band.restake.v1beta1.QueryLocksResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.band.restake.v1beta1.QueryLockRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.band.restake.v1beta1.QueryLockRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.band.restake.v1beta1.QueryLockRequest.displayName = 'proto.band.restake.v1beta1.QueryLockRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.band.restake.v1beta1.QueryLockResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.band.restake.v1beta1.QueryLockResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.band.restake.v1beta1.QueryLockResponse.displayName = 'proto.band.restake.v1beta1.QueryLockResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.band.restake.v1beta1.QueryStakeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.band.restake.v1beta1.QueryStakeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.band.restake.v1beta1.QueryStakeRequest.displayName = 'proto.band.restake.v1beta1.QueryStakeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.band.restake.v1beta1.QueryStakeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.band.restake.v1beta1.QueryStakeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.band.restake.v1beta1.QueryStakeResponse.displayName = 'proto.band.restake.v1beta1.QueryStakeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.band.restake.v1beta1.QueryParamsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.band.restake.v1beta1.QueryParamsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.band.restake.v1beta1.QueryParamsRequest.displayName = 'proto.band.restake.v1beta1.QueryParamsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.band.restake.v1beta1.QueryParamsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.band.restake.v1beta1.QueryParamsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.band.restake.v1beta1.QueryParamsResponse.displayName = 'proto.band.restake.v1beta1.QueryParamsResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.band.restake.v1beta1.QueryVaultsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.band.restake.v1beta1.QueryVaultsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.band.restake.v1beta1.QueryVaultsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.restake.v1beta1.QueryVaultsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pagination: (f = msg.getPagination()) && cosmos_base_query_v1beta1_pagination_pb.PageRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.band.restake.v1beta1.QueryVaultsRequest}
 */
proto.band.restake.v1beta1.QueryVaultsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.band.restake.v1beta1.QueryVaultsRequest;
  return proto.band.restake.v1beta1.QueryVaultsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.band.restake.v1beta1.QueryVaultsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.band.restake.v1beta1.QueryVaultsRequest}
 */
proto.band.restake.v1beta1.QueryVaultsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cosmos_base_query_v1beta1_pagination_pb.PageRequest;
      reader.readMessage(value,cosmos_base_query_v1beta1_pagination_pb.PageRequest.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.band.restake.v1beta1.QueryVaultsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.band.restake.v1beta1.QueryVaultsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.band.restake.v1beta1.QueryVaultsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.restake.v1beta1.QueryVaultsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cosmos_base_query_v1beta1_pagination_pb.PageRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional cosmos.base.query.v1beta1.PageRequest pagination = 1;
 * @return {?proto.cosmos.base.query.v1beta1.PageRequest}
 */
proto.band.restake.v1beta1.QueryVaultsRequest.prototype.getPagination = function() {
  return /** @type{?proto.cosmos.base.query.v1beta1.PageRequest} */ (
    jspb.Message.getWrapperField(this, cosmos_base_query_v1beta1_pagination_pb.PageRequest, 1));
};


/**
 * @param {?proto.cosmos.base.query.v1beta1.PageRequest|undefined} value
 * @return {!proto.band.restake.v1beta1.QueryVaultsRequest} returns this
*/
proto.band.restake.v1beta1.QueryVaultsRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.band.restake.v1beta1.QueryVaultsRequest} returns this
 */
proto.band.restake.v1beta1.QueryVaultsRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.band.restake.v1beta1.QueryVaultsRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.band.restake.v1beta1.QueryVaultsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.band.restake.v1beta1.QueryVaultsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.band.restake.v1beta1.QueryVaultsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.band.restake.v1beta1.QueryVaultsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.restake.v1beta1.QueryVaultsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    vaultsList: jspb.Message.toObjectList(msg.getVaultsList(),
    band_restake_v1beta1_types_pb.Vault.toObject, includeInstance),
    pagination: (f = msg.getPagination()) && cosmos_base_query_v1beta1_pagination_pb.PageResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.band.restake.v1beta1.QueryVaultsResponse}
 */
proto.band.restake.v1beta1.QueryVaultsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.band.restake.v1beta1.QueryVaultsResponse;
  return proto.band.restake.v1beta1.QueryVaultsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.band.restake.v1beta1.QueryVaultsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.band.restake.v1beta1.QueryVaultsResponse}
 */
proto.band.restake.v1beta1.QueryVaultsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new band_restake_v1beta1_types_pb.Vault;
      reader.readMessage(value,band_restake_v1beta1_types_pb.Vault.deserializeBinaryFromReader);
      msg.addVaults(value);
      break;
    case 2:
      var value = new cosmos_base_query_v1beta1_pagination_pb.PageResponse;
      reader.readMessage(value,cosmos_base_query_v1beta1_pagination_pb.PageResponse.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.band.restake.v1beta1.QueryVaultsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.band.restake.v1beta1.QueryVaultsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.band.restake.v1beta1.QueryVaultsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.restake.v1beta1.QueryVaultsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVaultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      band_restake_v1beta1_types_pb.Vault.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cosmos_base_query_v1beta1_pagination_pb.PageResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Vault vaults = 1;
 * @return {!Array<!proto.band.restake.v1beta1.Vault>}
 */
proto.band.restake.v1beta1.QueryVaultsResponse.prototype.getVaultsList = function() {
  return /** @type{!Array<!proto.band.restake.v1beta1.Vault>} */ (
    jspb.Message.getRepeatedWrapperField(this, band_restake_v1beta1_types_pb.Vault, 1));
};


/**
 * @param {!Array<!proto.band.restake.v1beta1.Vault>} value
 * @return {!proto.band.restake.v1beta1.QueryVaultsResponse} returns this
*/
proto.band.restake.v1beta1.QueryVaultsResponse.prototype.setVaultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.band.restake.v1beta1.Vault=} opt_value
 * @param {number=} opt_index
 * @return {!proto.band.restake.v1beta1.Vault}
 */
proto.band.restake.v1beta1.QueryVaultsResponse.prototype.addVaults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.band.restake.v1beta1.Vault, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.band.restake.v1beta1.QueryVaultsResponse} returns this
 */
proto.band.restake.v1beta1.QueryVaultsResponse.prototype.clearVaultsList = function() {
  return this.setVaultsList([]);
};


/**
 * optional cosmos.base.query.v1beta1.PageResponse pagination = 2;
 * @return {?proto.cosmos.base.query.v1beta1.PageResponse}
 */
proto.band.restake.v1beta1.QueryVaultsResponse.prototype.getPagination = function() {
  return /** @type{?proto.cosmos.base.query.v1beta1.PageResponse} */ (
    jspb.Message.getWrapperField(this, cosmos_base_query_v1beta1_pagination_pb.PageResponse, 2));
};


/**
 * @param {?proto.cosmos.base.query.v1beta1.PageResponse|undefined} value
 * @return {!proto.band.restake.v1beta1.QueryVaultsResponse} returns this
*/
proto.band.restake.v1beta1.QueryVaultsResponse.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.band.restake.v1beta1.QueryVaultsResponse} returns this
 */
proto.band.restake.v1beta1.QueryVaultsResponse.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.band.restake.v1beta1.QueryVaultsResponse.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.band.restake.v1beta1.QueryVaultRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.band.restake.v1beta1.QueryVaultRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.band.restake.v1beta1.QueryVaultRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.restake.v1beta1.QueryVaultRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.band.restake.v1beta1.QueryVaultRequest}
 */
proto.band.restake.v1beta1.QueryVaultRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.band.restake.v1beta1.QueryVaultRequest;
  return proto.band.restake.v1beta1.QueryVaultRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.band.restake.v1beta1.QueryVaultRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.band.restake.v1beta1.QueryVaultRequest}
 */
proto.band.restake.v1beta1.QueryVaultRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.band.restake.v1beta1.QueryVaultRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.band.restake.v1beta1.QueryVaultRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.band.restake.v1beta1.QueryVaultRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.restake.v1beta1.QueryVaultRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.band.restake.v1beta1.QueryVaultRequest.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.band.restake.v1beta1.QueryVaultRequest} returns this
 */
proto.band.restake.v1beta1.QueryVaultRequest.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.band.restake.v1beta1.QueryVaultResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.band.restake.v1beta1.QueryVaultResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.band.restake.v1beta1.QueryVaultResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.restake.v1beta1.QueryVaultResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    vault: (f = msg.getVault()) && band_restake_v1beta1_types_pb.Vault.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.band.restake.v1beta1.QueryVaultResponse}
 */
proto.band.restake.v1beta1.QueryVaultResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.band.restake.v1beta1.QueryVaultResponse;
  return proto.band.restake.v1beta1.QueryVaultResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.band.restake.v1beta1.QueryVaultResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.band.restake.v1beta1.QueryVaultResponse}
 */
proto.band.restake.v1beta1.QueryVaultResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new band_restake_v1beta1_types_pb.Vault;
      reader.readMessage(value,band_restake_v1beta1_types_pb.Vault.deserializeBinaryFromReader);
      msg.setVault(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.band.restake.v1beta1.QueryVaultResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.band.restake.v1beta1.QueryVaultResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.band.restake.v1beta1.QueryVaultResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.restake.v1beta1.QueryVaultResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVault();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      band_restake_v1beta1_types_pb.Vault.serializeBinaryToWriter
    );
  }
};


/**
 * optional Vault vault = 1;
 * @return {?proto.band.restake.v1beta1.Vault}
 */
proto.band.restake.v1beta1.QueryVaultResponse.prototype.getVault = function() {
  return /** @type{?proto.band.restake.v1beta1.Vault} */ (
    jspb.Message.getWrapperField(this, band_restake_v1beta1_types_pb.Vault, 1));
};


/**
 * @param {?proto.band.restake.v1beta1.Vault|undefined} value
 * @return {!proto.band.restake.v1beta1.QueryVaultResponse} returns this
*/
proto.band.restake.v1beta1.QueryVaultResponse.prototype.setVault = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.band.restake.v1beta1.QueryVaultResponse} returns this
 */
proto.band.restake.v1beta1.QueryVaultResponse.prototype.clearVault = function() {
  return this.setVault(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.band.restake.v1beta1.QueryVaultResponse.prototype.hasVault = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.band.restake.v1beta1.QueryLocksRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.band.restake.v1beta1.QueryLocksRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.band.restake.v1beta1.QueryLocksRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.restake.v1beta1.QueryLocksRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    stakerAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pagination: (f = msg.getPagination()) && cosmos_base_query_v1beta1_pagination_pb.PageRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.band.restake.v1beta1.QueryLocksRequest}
 */
proto.band.restake.v1beta1.QueryLocksRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.band.restake.v1beta1.QueryLocksRequest;
  return proto.band.restake.v1beta1.QueryLocksRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.band.restake.v1beta1.QueryLocksRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.band.restake.v1beta1.QueryLocksRequest}
 */
proto.band.restake.v1beta1.QueryLocksRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStakerAddress(value);
      break;
    case 2:
      var value = new cosmos_base_query_v1beta1_pagination_pb.PageRequest;
      reader.readMessage(value,cosmos_base_query_v1beta1_pagination_pb.PageRequest.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.band.restake.v1beta1.QueryLocksRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.band.restake.v1beta1.QueryLocksRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.band.restake.v1beta1.QueryLocksRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.restake.v1beta1.QueryLocksRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStakerAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cosmos_base_query_v1beta1_pagination_pb.PageRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional string staker_address = 1;
 * @return {string}
 */
proto.band.restake.v1beta1.QueryLocksRequest.prototype.getStakerAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.band.restake.v1beta1.QueryLocksRequest} returns this
 */
proto.band.restake.v1beta1.QueryLocksRequest.prototype.setStakerAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional cosmos.base.query.v1beta1.PageRequest pagination = 2;
 * @return {?proto.cosmos.base.query.v1beta1.PageRequest}
 */
proto.band.restake.v1beta1.QueryLocksRequest.prototype.getPagination = function() {
  return /** @type{?proto.cosmos.base.query.v1beta1.PageRequest} */ (
    jspb.Message.getWrapperField(this, cosmos_base_query_v1beta1_pagination_pb.PageRequest, 2));
};


/**
 * @param {?proto.cosmos.base.query.v1beta1.PageRequest|undefined} value
 * @return {!proto.band.restake.v1beta1.QueryLocksRequest} returns this
*/
proto.band.restake.v1beta1.QueryLocksRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.band.restake.v1beta1.QueryLocksRequest} returns this
 */
proto.band.restake.v1beta1.QueryLocksRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.band.restake.v1beta1.QueryLocksRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.band.restake.v1beta1.QueryLocksResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.band.restake.v1beta1.QueryLocksResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.band.restake.v1beta1.QueryLocksResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.band.restake.v1beta1.QueryLocksResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.restake.v1beta1.QueryLocksResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    locksList: jspb.Message.toObjectList(msg.getLocksList(),
    band_restake_v1beta1_types_pb.LockResponse.toObject, includeInstance),
    pagination: (f = msg.getPagination()) && cosmos_base_query_v1beta1_pagination_pb.PageResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.band.restake.v1beta1.QueryLocksResponse}
 */
proto.band.restake.v1beta1.QueryLocksResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.band.restake.v1beta1.QueryLocksResponse;
  return proto.band.restake.v1beta1.QueryLocksResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.band.restake.v1beta1.QueryLocksResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.band.restake.v1beta1.QueryLocksResponse}
 */
proto.band.restake.v1beta1.QueryLocksResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new band_restake_v1beta1_types_pb.LockResponse;
      reader.readMessage(value,band_restake_v1beta1_types_pb.LockResponse.deserializeBinaryFromReader);
      msg.addLocks(value);
      break;
    case 2:
      var value = new cosmos_base_query_v1beta1_pagination_pb.PageResponse;
      reader.readMessage(value,cosmos_base_query_v1beta1_pagination_pb.PageResponse.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.band.restake.v1beta1.QueryLocksResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.band.restake.v1beta1.QueryLocksResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.band.restake.v1beta1.QueryLocksResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.restake.v1beta1.QueryLocksResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      band_restake_v1beta1_types_pb.LockResponse.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cosmos_base_query_v1beta1_pagination_pb.PageResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated LockResponse locks = 1;
 * @return {!Array<!proto.band.restake.v1beta1.LockResponse>}
 */
proto.band.restake.v1beta1.QueryLocksResponse.prototype.getLocksList = function() {
  return /** @type{!Array<!proto.band.restake.v1beta1.LockResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, band_restake_v1beta1_types_pb.LockResponse, 1));
};


/**
 * @param {!Array<!proto.band.restake.v1beta1.LockResponse>} value
 * @return {!proto.band.restake.v1beta1.QueryLocksResponse} returns this
*/
proto.band.restake.v1beta1.QueryLocksResponse.prototype.setLocksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.band.restake.v1beta1.LockResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.band.restake.v1beta1.LockResponse}
 */
proto.band.restake.v1beta1.QueryLocksResponse.prototype.addLocks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.band.restake.v1beta1.LockResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.band.restake.v1beta1.QueryLocksResponse} returns this
 */
proto.band.restake.v1beta1.QueryLocksResponse.prototype.clearLocksList = function() {
  return this.setLocksList([]);
};


/**
 * optional cosmos.base.query.v1beta1.PageResponse pagination = 2;
 * @return {?proto.cosmos.base.query.v1beta1.PageResponse}
 */
proto.band.restake.v1beta1.QueryLocksResponse.prototype.getPagination = function() {
  return /** @type{?proto.cosmos.base.query.v1beta1.PageResponse} */ (
    jspb.Message.getWrapperField(this, cosmos_base_query_v1beta1_pagination_pb.PageResponse, 2));
};


/**
 * @param {?proto.cosmos.base.query.v1beta1.PageResponse|undefined} value
 * @return {!proto.band.restake.v1beta1.QueryLocksResponse} returns this
*/
proto.band.restake.v1beta1.QueryLocksResponse.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.band.restake.v1beta1.QueryLocksResponse} returns this
 */
proto.band.restake.v1beta1.QueryLocksResponse.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.band.restake.v1beta1.QueryLocksResponse.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.band.restake.v1beta1.QueryLockRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.band.restake.v1beta1.QueryLockRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.band.restake.v1beta1.QueryLockRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.restake.v1beta1.QueryLockRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    stakerAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    key: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.band.restake.v1beta1.QueryLockRequest}
 */
proto.band.restake.v1beta1.QueryLockRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.band.restake.v1beta1.QueryLockRequest;
  return proto.band.restake.v1beta1.QueryLockRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.band.restake.v1beta1.QueryLockRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.band.restake.v1beta1.QueryLockRequest}
 */
proto.band.restake.v1beta1.QueryLockRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStakerAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.band.restake.v1beta1.QueryLockRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.band.restake.v1beta1.QueryLockRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.band.restake.v1beta1.QueryLockRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.restake.v1beta1.QueryLockRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStakerAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string staker_address = 1;
 * @return {string}
 */
proto.band.restake.v1beta1.QueryLockRequest.prototype.getStakerAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.band.restake.v1beta1.QueryLockRequest} returns this
 */
proto.band.restake.v1beta1.QueryLockRequest.prototype.setStakerAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string key = 2;
 * @return {string}
 */
proto.band.restake.v1beta1.QueryLockRequest.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.band.restake.v1beta1.QueryLockRequest} returns this
 */
proto.band.restake.v1beta1.QueryLockRequest.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.band.restake.v1beta1.QueryLockResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.band.restake.v1beta1.QueryLockResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.band.restake.v1beta1.QueryLockResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.restake.v1beta1.QueryLockResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    lock: (f = msg.getLock()) && band_restake_v1beta1_types_pb.LockResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.band.restake.v1beta1.QueryLockResponse}
 */
proto.band.restake.v1beta1.QueryLockResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.band.restake.v1beta1.QueryLockResponse;
  return proto.band.restake.v1beta1.QueryLockResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.band.restake.v1beta1.QueryLockResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.band.restake.v1beta1.QueryLockResponse}
 */
proto.band.restake.v1beta1.QueryLockResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new band_restake_v1beta1_types_pb.LockResponse;
      reader.readMessage(value,band_restake_v1beta1_types_pb.LockResponse.deserializeBinaryFromReader);
      msg.setLock(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.band.restake.v1beta1.QueryLockResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.band.restake.v1beta1.QueryLockResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.band.restake.v1beta1.QueryLockResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.restake.v1beta1.QueryLockResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLock();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      band_restake_v1beta1_types_pb.LockResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional LockResponse lock = 1;
 * @return {?proto.band.restake.v1beta1.LockResponse}
 */
proto.band.restake.v1beta1.QueryLockResponse.prototype.getLock = function() {
  return /** @type{?proto.band.restake.v1beta1.LockResponse} */ (
    jspb.Message.getWrapperField(this, band_restake_v1beta1_types_pb.LockResponse, 1));
};


/**
 * @param {?proto.band.restake.v1beta1.LockResponse|undefined} value
 * @return {!proto.band.restake.v1beta1.QueryLockResponse} returns this
*/
proto.band.restake.v1beta1.QueryLockResponse.prototype.setLock = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.band.restake.v1beta1.QueryLockResponse} returns this
 */
proto.band.restake.v1beta1.QueryLockResponse.prototype.clearLock = function() {
  return this.setLock(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.band.restake.v1beta1.QueryLockResponse.prototype.hasLock = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.band.restake.v1beta1.QueryStakeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.band.restake.v1beta1.QueryStakeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.band.restake.v1beta1.QueryStakeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.restake.v1beta1.QueryStakeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    stakerAddress: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.band.restake.v1beta1.QueryStakeRequest}
 */
proto.band.restake.v1beta1.QueryStakeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.band.restake.v1beta1.QueryStakeRequest;
  return proto.band.restake.v1beta1.QueryStakeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.band.restake.v1beta1.QueryStakeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.band.restake.v1beta1.QueryStakeRequest}
 */
proto.band.restake.v1beta1.QueryStakeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStakerAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.band.restake.v1beta1.QueryStakeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.band.restake.v1beta1.QueryStakeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.band.restake.v1beta1.QueryStakeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.restake.v1beta1.QueryStakeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStakerAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string staker_address = 1;
 * @return {string}
 */
proto.band.restake.v1beta1.QueryStakeRequest.prototype.getStakerAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.band.restake.v1beta1.QueryStakeRequest} returns this
 */
proto.band.restake.v1beta1.QueryStakeRequest.prototype.setStakerAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.band.restake.v1beta1.QueryStakeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.band.restake.v1beta1.QueryStakeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.band.restake.v1beta1.QueryStakeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.restake.v1beta1.QueryStakeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    stake: (f = msg.getStake()) && band_restake_v1beta1_types_pb.Stake.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.band.restake.v1beta1.QueryStakeResponse}
 */
proto.band.restake.v1beta1.QueryStakeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.band.restake.v1beta1.QueryStakeResponse;
  return proto.band.restake.v1beta1.QueryStakeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.band.restake.v1beta1.QueryStakeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.band.restake.v1beta1.QueryStakeResponse}
 */
proto.band.restake.v1beta1.QueryStakeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new band_restake_v1beta1_types_pb.Stake;
      reader.readMessage(value,band_restake_v1beta1_types_pb.Stake.deserializeBinaryFromReader);
      msg.setStake(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.band.restake.v1beta1.QueryStakeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.band.restake.v1beta1.QueryStakeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.band.restake.v1beta1.QueryStakeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.restake.v1beta1.QueryStakeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStake();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      band_restake_v1beta1_types_pb.Stake.serializeBinaryToWriter
    );
  }
};


/**
 * optional Stake stake = 1;
 * @return {?proto.band.restake.v1beta1.Stake}
 */
proto.band.restake.v1beta1.QueryStakeResponse.prototype.getStake = function() {
  return /** @type{?proto.band.restake.v1beta1.Stake} */ (
    jspb.Message.getWrapperField(this, band_restake_v1beta1_types_pb.Stake, 1));
};


/**
 * @param {?proto.band.restake.v1beta1.Stake|undefined} value
 * @return {!proto.band.restake.v1beta1.QueryStakeResponse} returns this
*/
proto.band.restake.v1beta1.QueryStakeResponse.prototype.setStake = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.band.restake.v1beta1.QueryStakeResponse} returns this
 */
proto.band.restake.v1beta1.QueryStakeResponse.prototype.clearStake = function() {
  return this.setStake(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.band.restake.v1beta1.QueryStakeResponse.prototype.hasStake = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.band.restake.v1beta1.QueryParamsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.band.restake.v1beta1.QueryParamsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.band.restake.v1beta1.QueryParamsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.restake.v1beta1.QueryParamsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.band.restake.v1beta1.QueryParamsRequest}
 */
proto.band.restake.v1beta1.QueryParamsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.band.restake.v1beta1.QueryParamsRequest;
  return proto.band.restake.v1beta1.QueryParamsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.band.restake.v1beta1.QueryParamsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.band.restake.v1beta1.QueryParamsRequest}
 */
proto.band.restake.v1beta1.QueryParamsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.band.restake.v1beta1.QueryParamsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.band.restake.v1beta1.QueryParamsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.band.restake.v1beta1.QueryParamsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.restake.v1beta1.QueryParamsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.band.restake.v1beta1.QueryParamsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.band.restake.v1beta1.QueryParamsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.band.restake.v1beta1.QueryParamsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.restake.v1beta1.QueryParamsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    params: (f = msg.getParams()) && band_restake_v1beta1_genesis_pb.Params.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.band.restake.v1beta1.QueryParamsResponse}
 */
proto.band.restake.v1beta1.QueryParamsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.band.restake.v1beta1.QueryParamsResponse;
  return proto.band.restake.v1beta1.QueryParamsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.band.restake.v1beta1.QueryParamsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.band.restake.v1beta1.QueryParamsResponse}
 */
proto.band.restake.v1beta1.QueryParamsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new band_restake_v1beta1_genesis_pb.Params;
      reader.readMessage(value,band_restake_v1beta1_genesis_pb.Params.deserializeBinaryFromReader);
      msg.setParams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.band.restake.v1beta1.QueryParamsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.band.restake.v1beta1.QueryParamsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.band.restake.v1beta1.QueryParamsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.band.restake.v1beta1.QueryParamsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParams();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      band_restake_v1beta1_genesis_pb.Params.serializeBinaryToWriter
    );
  }
};


/**
 * optional Params params = 1;
 * @return {?proto.band.restake.v1beta1.Params}
 */
proto.band.restake.v1beta1.QueryParamsResponse.prototype.getParams = function() {
  return /** @type{?proto.band.restake.v1beta1.Params} */ (
    jspb.Message.getWrapperField(this, band_restake_v1beta1_genesis_pb.Params, 1));
};


/**
 * @param {?proto.band.restake.v1beta1.Params|undefined} value
 * @return {!proto.band.restake.v1beta1.QueryParamsResponse} returns this
*/
proto.band.restake.v1beta1.QueryParamsResponse.prototype.setParams = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.band.restake.v1beta1.QueryParamsResponse} returns this
 */
proto.band.restake.v1beta1.QueryParamsResponse.prototype.clearParams = function() {
  return this.setParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.band.restake.v1beta1.QueryParamsResponse.prototype.hasParams = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.band.restake.v1beta1);
