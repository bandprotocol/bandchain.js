/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: band/tss/v1beta1/originator.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../../../gogoproto/gogo";
import * as dependency_2 from "./../../../cosmos_proto/cosmos";
import * as pb_1 from "google-protobuf";
export namespace band.tss.v1beta1 {
    export class DirectOriginator extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            source_chain_id?: string;
            requester?: string;
            memo?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("source_chain_id" in data && data.source_chain_id != undefined) {
                    this.source_chain_id = data.source_chain_id;
                }
                if ("requester" in data && data.requester != undefined) {
                    this.requester = data.requester;
                }
                if ("memo" in data && data.memo != undefined) {
                    this.memo = data.memo;
                }
            }
        }
        get source_chain_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set source_chain_id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get requester() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set requester(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get memo() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set memo(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        static fromObject(data: {
            source_chain_id?: string;
            requester?: string;
            memo?: string;
        }): DirectOriginator {
            const message = new DirectOriginator({});
            if (data.source_chain_id != null) {
                message.source_chain_id = data.source_chain_id;
            }
            if (data.requester != null) {
                message.requester = data.requester;
            }
            if (data.memo != null) {
                message.memo = data.memo;
            }
            return message;
        }
        toObject() {
            const data: {
                source_chain_id?: string;
                requester?: string;
                memo?: string;
            } = {};
            if (this.source_chain_id != null) {
                data.source_chain_id = this.source_chain_id;
            }
            if (this.requester != null) {
                data.requester = this.requester;
            }
            if (this.memo != null) {
                data.memo = this.memo;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.source_chain_id.length)
                writer.writeString(1, this.source_chain_id);
            if (this.requester.length)
                writer.writeString(2, this.requester);
            if (this.memo.length)
                writer.writeString(3, this.memo);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): DirectOriginator {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DirectOriginator();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.source_chain_id = reader.readString();
                        break;
                    case 2:
                        message.requester = reader.readString();
                        break;
                    case 3:
                        message.memo = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): DirectOriginator {
            return DirectOriginator.deserialize(bytes);
        }
    }
    export class TunnelOriginator extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            source_chain_id?: string;
            tunnel_id?: number;
            contract_address?: string;
            target_chain_id?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("source_chain_id" in data && data.source_chain_id != undefined) {
                    this.source_chain_id = data.source_chain_id;
                }
                if ("tunnel_id" in data && data.tunnel_id != undefined) {
                    this.tunnel_id = data.tunnel_id;
                }
                if ("contract_address" in data && data.contract_address != undefined) {
                    this.contract_address = data.contract_address;
                }
                if ("target_chain_id" in data && data.target_chain_id != undefined) {
                    this.target_chain_id = data.target_chain_id;
                }
            }
        }
        get source_chain_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set source_chain_id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get tunnel_id() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set tunnel_id(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get contract_address() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set contract_address(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get target_chain_id() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set target_chain_id(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data: {
            source_chain_id?: string;
            tunnel_id?: number;
            contract_address?: string;
            target_chain_id?: string;
        }): TunnelOriginator {
            const message = new TunnelOriginator({});
            if (data.source_chain_id != null) {
                message.source_chain_id = data.source_chain_id;
            }
            if (data.tunnel_id != null) {
                message.tunnel_id = data.tunnel_id;
            }
            if (data.contract_address != null) {
                message.contract_address = data.contract_address;
            }
            if (data.target_chain_id != null) {
                message.target_chain_id = data.target_chain_id;
            }
            return message;
        }
        toObject() {
            const data: {
                source_chain_id?: string;
                tunnel_id?: number;
                contract_address?: string;
                target_chain_id?: string;
            } = {};
            if (this.source_chain_id != null) {
                data.source_chain_id = this.source_chain_id;
            }
            if (this.tunnel_id != null) {
                data.tunnel_id = this.tunnel_id;
            }
            if (this.contract_address != null) {
                data.contract_address = this.contract_address;
            }
            if (this.target_chain_id != null) {
                data.target_chain_id = this.target_chain_id;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.source_chain_id.length)
                writer.writeString(1, this.source_chain_id);
            if (this.tunnel_id != 0)
                writer.writeUint64(2, this.tunnel_id);
            if (this.contract_address.length)
                writer.writeString(3, this.contract_address);
            if (this.target_chain_id.length)
                writer.writeString(4, this.target_chain_id);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): TunnelOriginator {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new TunnelOriginator();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.source_chain_id = reader.readString();
                        break;
                    case 2:
                        message.tunnel_id = reader.readUint64();
                        break;
                    case 3:
                        message.contract_address = reader.readString();
                        break;
                    case 4:
                        message.target_chain_id = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): TunnelOriginator {
            return TunnelOriginator.deserialize(bytes);
        }
    }
}
