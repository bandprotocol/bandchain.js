// source: ibc/applications/fee/v1/genesis.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var gogoproto_gogo_pb = require('../../../../gogoproto/gogo_pb.js');
goog.object.extend(proto, gogoproto_gogo_pb);
var ibc_applications_fee_v1_fee_pb = require('../../../../ibc/applications/fee/v1/fee_pb.js');
goog.object.extend(proto, ibc_applications_fee_v1_fee_pb);
var ibc_core_channel_v1_channel_pb = require('../../../../ibc/core/channel/v1/channel_pb.js');
goog.object.extend(proto, ibc_core_channel_v1_channel_pb);
goog.exportSymbol('proto.ibc.applications.fee.v1.FeeEnabledChannel', null, global);
goog.exportSymbol('proto.ibc.applications.fee.v1.ForwardRelayerAddress', null, global);
goog.exportSymbol('proto.ibc.applications.fee.v1.GenesisState', null, global);
goog.exportSymbol('proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee', null, global);
goog.exportSymbol('proto.ibc.applications.fee.v1.RegisteredPayee', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.applications.fee.v1.GenesisState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ibc.applications.fee.v1.GenesisState.repeatedFields_, null);
};
goog.inherits(proto.ibc.applications.fee.v1.GenesisState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.applications.fee.v1.GenesisState.displayName = 'proto.ibc.applications.fee.v1.GenesisState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.applications.fee.v1.FeeEnabledChannel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ibc.applications.fee.v1.FeeEnabledChannel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.applications.fee.v1.FeeEnabledChannel.displayName = 'proto.ibc.applications.fee.v1.FeeEnabledChannel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.applications.fee.v1.RegisteredPayee = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ibc.applications.fee.v1.RegisteredPayee, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.applications.fee.v1.RegisteredPayee.displayName = 'proto.ibc.applications.fee.v1.RegisteredPayee';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee.displayName = 'proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.applications.fee.v1.ForwardRelayerAddress = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ibc.applications.fee.v1.ForwardRelayerAddress, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.applications.fee.v1.ForwardRelayerAddress.displayName = 'proto.ibc.applications.fee.v1.ForwardRelayerAddress';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ibc.applications.fee.v1.GenesisState.repeatedFields_ = [1,2,3,4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ibc.applications.fee.v1.GenesisState.prototype.toObject = function(opt_includeInstance) {
  return proto.ibc.applications.fee.v1.GenesisState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ibc.applications.fee.v1.GenesisState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.applications.fee.v1.GenesisState.toObject = function(includeInstance, msg) {
  var f, obj = {
    identifiedFeesList: jspb.Message.toObjectList(msg.getIdentifiedFeesList(),
    ibc_applications_fee_v1_fee_pb.IdentifiedPacketFees.toObject, includeInstance),
    feeEnabledChannelsList: jspb.Message.toObjectList(msg.getFeeEnabledChannelsList(),
    proto.ibc.applications.fee.v1.FeeEnabledChannel.toObject, includeInstance),
    registeredPayeesList: jspb.Message.toObjectList(msg.getRegisteredPayeesList(),
    proto.ibc.applications.fee.v1.RegisteredPayee.toObject, includeInstance),
    registeredCounterpartyPayeesList: jspb.Message.toObjectList(msg.getRegisteredCounterpartyPayeesList(),
    proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee.toObject, includeInstance),
    forwardRelayersList: jspb.Message.toObjectList(msg.getForwardRelayersList(),
    proto.ibc.applications.fee.v1.ForwardRelayerAddress.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.applications.fee.v1.GenesisState}
 */
proto.ibc.applications.fee.v1.GenesisState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ibc.applications.fee.v1.GenesisState;
  return proto.ibc.applications.fee.v1.GenesisState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.applications.fee.v1.GenesisState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.applications.fee.v1.GenesisState}
 */
proto.ibc.applications.fee.v1.GenesisState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new ibc_applications_fee_v1_fee_pb.IdentifiedPacketFees;
      reader.readMessage(value,ibc_applications_fee_v1_fee_pb.IdentifiedPacketFees.deserializeBinaryFromReader);
      msg.addIdentifiedFees(value);
      break;
    case 2:
      var value = new proto.ibc.applications.fee.v1.FeeEnabledChannel;
      reader.readMessage(value,proto.ibc.applications.fee.v1.FeeEnabledChannel.deserializeBinaryFromReader);
      msg.addFeeEnabledChannels(value);
      break;
    case 3:
      var value = new proto.ibc.applications.fee.v1.RegisteredPayee;
      reader.readMessage(value,proto.ibc.applications.fee.v1.RegisteredPayee.deserializeBinaryFromReader);
      msg.addRegisteredPayees(value);
      break;
    case 4:
      var value = new proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee;
      reader.readMessage(value,proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee.deserializeBinaryFromReader);
      msg.addRegisteredCounterpartyPayees(value);
      break;
    case 5:
      var value = new proto.ibc.applications.fee.v1.ForwardRelayerAddress;
      reader.readMessage(value,proto.ibc.applications.fee.v1.ForwardRelayerAddress.deserializeBinaryFromReader);
      msg.addForwardRelayers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.applications.fee.v1.GenesisState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ibc.applications.fee.v1.GenesisState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.applications.fee.v1.GenesisState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.applications.fee.v1.GenesisState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentifiedFeesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      ibc_applications_fee_v1_fee_pb.IdentifiedPacketFees.serializeBinaryToWriter
    );
  }
  f = message.getFeeEnabledChannelsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.ibc.applications.fee.v1.FeeEnabledChannel.serializeBinaryToWriter
    );
  }
  f = message.getRegisteredPayeesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ibc.applications.fee.v1.RegisteredPayee.serializeBinaryToWriter
    );
  }
  f = message.getRegisteredCounterpartyPayeesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee.serializeBinaryToWriter
    );
  }
  f = message.getForwardRelayersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.ibc.applications.fee.v1.ForwardRelayerAddress.serializeBinaryToWriter
    );
  }
};


/**
 * repeated IdentifiedPacketFees identified_fees = 1;
 * @return {!Array<!proto.ibc.applications.fee.v1.IdentifiedPacketFees>}
 */
proto.ibc.applications.fee.v1.GenesisState.prototype.getIdentifiedFeesList = function() {
  return /** @type{!Array<!proto.ibc.applications.fee.v1.IdentifiedPacketFees>} */ (
    jspb.Message.getRepeatedWrapperField(this, ibc_applications_fee_v1_fee_pb.IdentifiedPacketFees, 1));
};


/**
 * @param {!Array<!proto.ibc.applications.fee.v1.IdentifiedPacketFees>} value
 * @return {!proto.ibc.applications.fee.v1.GenesisState} returns this
*/
proto.ibc.applications.fee.v1.GenesisState.prototype.setIdentifiedFeesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ibc.applications.fee.v1.IdentifiedPacketFees=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ibc.applications.fee.v1.IdentifiedPacketFees}
 */
proto.ibc.applications.fee.v1.GenesisState.prototype.addIdentifiedFees = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ibc.applications.fee.v1.IdentifiedPacketFees, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ibc.applications.fee.v1.GenesisState} returns this
 */
proto.ibc.applications.fee.v1.GenesisState.prototype.clearIdentifiedFeesList = function() {
  return this.setIdentifiedFeesList([]);
};


/**
 * repeated FeeEnabledChannel fee_enabled_channels = 2;
 * @return {!Array<!proto.ibc.applications.fee.v1.FeeEnabledChannel>}
 */
proto.ibc.applications.fee.v1.GenesisState.prototype.getFeeEnabledChannelsList = function() {
  return /** @type{!Array<!proto.ibc.applications.fee.v1.FeeEnabledChannel>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ibc.applications.fee.v1.FeeEnabledChannel, 2));
};


/**
 * @param {!Array<!proto.ibc.applications.fee.v1.FeeEnabledChannel>} value
 * @return {!proto.ibc.applications.fee.v1.GenesisState} returns this
*/
proto.ibc.applications.fee.v1.GenesisState.prototype.setFeeEnabledChannelsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ibc.applications.fee.v1.FeeEnabledChannel=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ibc.applications.fee.v1.FeeEnabledChannel}
 */
proto.ibc.applications.fee.v1.GenesisState.prototype.addFeeEnabledChannels = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ibc.applications.fee.v1.FeeEnabledChannel, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ibc.applications.fee.v1.GenesisState} returns this
 */
proto.ibc.applications.fee.v1.GenesisState.prototype.clearFeeEnabledChannelsList = function() {
  return this.setFeeEnabledChannelsList([]);
};


/**
 * repeated RegisteredPayee registered_payees = 3;
 * @return {!Array<!proto.ibc.applications.fee.v1.RegisteredPayee>}
 */
proto.ibc.applications.fee.v1.GenesisState.prototype.getRegisteredPayeesList = function() {
  return /** @type{!Array<!proto.ibc.applications.fee.v1.RegisteredPayee>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ibc.applications.fee.v1.RegisteredPayee, 3));
};


/**
 * @param {!Array<!proto.ibc.applications.fee.v1.RegisteredPayee>} value
 * @return {!proto.ibc.applications.fee.v1.GenesisState} returns this
*/
proto.ibc.applications.fee.v1.GenesisState.prototype.setRegisteredPayeesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ibc.applications.fee.v1.RegisteredPayee=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ibc.applications.fee.v1.RegisteredPayee}
 */
proto.ibc.applications.fee.v1.GenesisState.prototype.addRegisteredPayees = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ibc.applications.fee.v1.RegisteredPayee, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ibc.applications.fee.v1.GenesisState} returns this
 */
proto.ibc.applications.fee.v1.GenesisState.prototype.clearRegisteredPayeesList = function() {
  return this.setRegisteredPayeesList([]);
};


/**
 * repeated RegisteredCounterpartyPayee registered_counterparty_payees = 4;
 * @return {!Array<!proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee>}
 */
proto.ibc.applications.fee.v1.GenesisState.prototype.getRegisteredCounterpartyPayeesList = function() {
  return /** @type{!Array<!proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee, 4));
};


/**
 * @param {!Array<!proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee>} value
 * @return {!proto.ibc.applications.fee.v1.GenesisState} returns this
*/
proto.ibc.applications.fee.v1.GenesisState.prototype.setRegisteredCounterpartyPayeesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee}
 */
proto.ibc.applications.fee.v1.GenesisState.prototype.addRegisteredCounterpartyPayees = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ibc.applications.fee.v1.GenesisState} returns this
 */
proto.ibc.applications.fee.v1.GenesisState.prototype.clearRegisteredCounterpartyPayeesList = function() {
  return this.setRegisteredCounterpartyPayeesList([]);
};


/**
 * repeated ForwardRelayerAddress forward_relayers = 5;
 * @return {!Array<!proto.ibc.applications.fee.v1.ForwardRelayerAddress>}
 */
proto.ibc.applications.fee.v1.GenesisState.prototype.getForwardRelayersList = function() {
  return /** @type{!Array<!proto.ibc.applications.fee.v1.ForwardRelayerAddress>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ibc.applications.fee.v1.ForwardRelayerAddress, 5));
};


/**
 * @param {!Array<!proto.ibc.applications.fee.v1.ForwardRelayerAddress>} value
 * @return {!proto.ibc.applications.fee.v1.GenesisState} returns this
*/
proto.ibc.applications.fee.v1.GenesisState.prototype.setForwardRelayersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.ibc.applications.fee.v1.ForwardRelayerAddress=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ibc.applications.fee.v1.ForwardRelayerAddress}
 */
proto.ibc.applications.fee.v1.GenesisState.prototype.addForwardRelayers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.ibc.applications.fee.v1.ForwardRelayerAddress, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ibc.applications.fee.v1.GenesisState} returns this
 */
proto.ibc.applications.fee.v1.GenesisState.prototype.clearForwardRelayersList = function() {
  return this.setForwardRelayersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ibc.applications.fee.v1.FeeEnabledChannel.prototype.toObject = function(opt_includeInstance) {
  return proto.ibc.applications.fee.v1.FeeEnabledChannel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ibc.applications.fee.v1.FeeEnabledChannel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.applications.fee.v1.FeeEnabledChannel.toObject = function(includeInstance, msg) {
  var f, obj = {
    portId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    channelId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.applications.fee.v1.FeeEnabledChannel}
 */
proto.ibc.applications.fee.v1.FeeEnabledChannel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ibc.applications.fee.v1.FeeEnabledChannel;
  return proto.ibc.applications.fee.v1.FeeEnabledChannel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.applications.fee.v1.FeeEnabledChannel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.applications.fee.v1.FeeEnabledChannel}
 */
proto.ibc.applications.fee.v1.FeeEnabledChannel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPortId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.applications.fee.v1.FeeEnabledChannel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ibc.applications.fee.v1.FeeEnabledChannel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.applications.fee.v1.FeeEnabledChannel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.applications.fee.v1.FeeEnabledChannel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPortId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChannelId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string port_id = 1;
 * @return {string}
 */
proto.ibc.applications.fee.v1.FeeEnabledChannel.prototype.getPortId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.applications.fee.v1.FeeEnabledChannel} returns this
 */
proto.ibc.applications.fee.v1.FeeEnabledChannel.prototype.setPortId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string channel_id = 2;
 * @return {string}
 */
proto.ibc.applications.fee.v1.FeeEnabledChannel.prototype.getChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.applications.fee.v1.FeeEnabledChannel} returns this
 */
proto.ibc.applications.fee.v1.FeeEnabledChannel.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ibc.applications.fee.v1.RegisteredPayee.prototype.toObject = function(opt_includeInstance) {
  return proto.ibc.applications.fee.v1.RegisteredPayee.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ibc.applications.fee.v1.RegisteredPayee} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.applications.fee.v1.RegisteredPayee.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    relayer: jspb.Message.getFieldWithDefault(msg, 2, ""),
    payee: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.applications.fee.v1.RegisteredPayee}
 */
proto.ibc.applications.fee.v1.RegisteredPayee.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ibc.applications.fee.v1.RegisteredPayee;
  return proto.ibc.applications.fee.v1.RegisteredPayee.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.applications.fee.v1.RegisteredPayee} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.applications.fee.v1.RegisteredPayee}
 */
proto.ibc.applications.fee.v1.RegisteredPayee.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRelayer(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayee(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.applications.fee.v1.RegisteredPayee.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ibc.applications.fee.v1.RegisteredPayee.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.applications.fee.v1.RegisteredPayee} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.applications.fee.v1.RegisteredPayee.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRelayer();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPayee();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string channel_id = 1;
 * @return {string}
 */
proto.ibc.applications.fee.v1.RegisteredPayee.prototype.getChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.applications.fee.v1.RegisteredPayee} returns this
 */
proto.ibc.applications.fee.v1.RegisteredPayee.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string relayer = 2;
 * @return {string}
 */
proto.ibc.applications.fee.v1.RegisteredPayee.prototype.getRelayer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.applications.fee.v1.RegisteredPayee} returns this
 */
proto.ibc.applications.fee.v1.RegisteredPayee.prototype.setRelayer = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string payee = 3;
 * @return {string}
 */
proto.ibc.applications.fee.v1.RegisteredPayee.prototype.getPayee = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.applications.fee.v1.RegisteredPayee} returns this
 */
proto.ibc.applications.fee.v1.RegisteredPayee.prototype.setPayee = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee.prototype.toObject = function(opt_includeInstance) {
  return proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    relayer: jspb.Message.getFieldWithDefault(msg, 2, ""),
    counterpartyPayee: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee}
 */
proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee;
  return proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee}
 */
proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRelayer(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCounterpartyPayee(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRelayer();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCounterpartyPayee();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string channel_id = 1;
 * @return {string}
 */
proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee.prototype.getChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee} returns this
 */
proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string relayer = 2;
 * @return {string}
 */
proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee.prototype.getRelayer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee} returns this
 */
proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee.prototype.setRelayer = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string counterparty_payee = 3;
 * @return {string}
 */
proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee.prototype.getCounterpartyPayee = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee} returns this
 */
proto.ibc.applications.fee.v1.RegisteredCounterpartyPayee.prototype.setCounterpartyPayee = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ibc.applications.fee.v1.ForwardRelayerAddress.prototype.toObject = function(opt_includeInstance) {
  return proto.ibc.applications.fee.v1.ForwardRelayerAddress.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ibc.applications.fee.v1.ForwardRelayerAddress} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.applications.fee.v1.ForwardRelayerAddress.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, ""),
    packetId: (f = msg.getPacketId()) && ibc_core_channel_v1_channel_pb.PacketId.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.applications.fee.v1.ForwardRelayerAddress}
 */
proto.ibc.applications.fee.v1.ForwardRelayerAddress.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ibc.applications.fee.v1.ForwardRelayerAddress;
  return proto.ibc.applications.fee.v1.ForwardRelayerAddress.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.applications.fee.v1.ForwardRelayerAddress} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.applications.fee.v1.ForwardRelayerAddress}
 */
proto.ibc.applications.fee.v1.ForwardRelayerAddress.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 2:
      var value = new ibc_core_channel_v1_channel_pb.PacketId;
      reader.readMessage(value,ibc_core_channel_v1_channel_pb.PacketId.deserializeBinaryFromReader);
      msg.setPacketId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.applications.fee.v1.ForwardRelayerAddress.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ibc.applications.fee.v1.ForwardRelayerAddress.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.applications.fee.v1.ForwardRelayerAddress} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.applications.fee.v1.ForwardRelayerAddress.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPacketId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      ibc_core_channel_v1_channel_pb.PacketId.serializeBinaryToWriter
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.ibc.applications.fee.v1.ForwardRelayerAddress.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.applications.fee.v1.ForwardRelayerAddress} returns this
 */
proto.ibc.applications.fee.v1.ForwardRelayerAddress.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ibc.core.channel.v1.PacketId packet_id = 2;
 * @return {?proto.ibc.core.channel.v1.PacketId}
 */
proto.ibc.applications.fee.v1.ForwardRelayerAddress.prototype.getPacketId = function() {
  return /** @type{?proto.ibc.core.channel.v1.PacketId} */ (
    jspb.Message.getWrapperField(this, ibc_core_channel_v1_channel_pb.PacketId, 2));
};


/**
 * @param {?proto.ibc.core.channel.v1.PacketId|undefined} value
 * @return {!proto.ibc.applications.fee.v1.ForwardRelayerAddress} returns this
*/
proto.ibc.applications.fee.v1.ForwardRelayerAddress.prototype.setPacketId = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ibc.applications.fee.v1.ForwardRelayerAddress} returns this
 */
proto.ibc.applications.fee.v1.ForwardRelayerAddress.prototype.clearPacketId = function() {
  return this.setPacketId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ibc.applications.fee.v1.ForwardRelayerAddress.prototype.hasPacketId = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.ibc.applications.fee.v1);
