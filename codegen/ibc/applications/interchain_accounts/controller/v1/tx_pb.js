// source: ibc/applications/interchain_accounts/controller/v1/tx.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf')
var goog = jspb
var global = Function('return this')()

var gogoproto_gogo_pb = require('../../../../../gogoproto/gogo_pb.js')
goog.object.extend(proto, gogoproto_gogo_pb)
var ibc_applications_interchain_accounts_v1_packet_pb = require('../../../../../ibc/applications/interchain_accounts/v1/packet_pb.js')
goog.object.extend(proto, ibc_applications_interchain_accounts_v1_packet_pb)
var ibc_applications_interchain_accounts_controller_v1_controller_pb = require('../../../../../ibc/applications/interchain_accounts/controller/v1/controller_pb.js')
goog.object.extend(
  proto,
  ibc_applications_interchain_accounts_controller_v1_controller_pb,
)
var cosmos_msg_v1_msg_pb = require('../../../../../cosmos/msg/v1/msg_pb.js')
goog.object.extend(proto, cosmos_msg_v1_msg_pb)
var ibc_core_channel_v1_channel_pb = require('../../../../../ibc/core/channel/v1/channel_pb.js')
goog.object.extend(proto, ibc_core_channel_v1_channel_pb)
goog.exportSymbol(
  'proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount',
  null,
  global,
)
goog.exportSymbol(
  'proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse',
  null,
  global,
)
goog.exportSymbol(
  'proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTx',
  null,
  global,
)
goog.exportSymbol(
  'proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse',
  null,
  global,
)
goog.exportSymbol(
  'proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams',
  null,
  global,
)
goog.exportSymbol(
  'proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParamsResponse',
  null,
  global,
)
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount =
  function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null)
  }
goog.inherits(
  proto.ibc.applications.interchain_accounts.controller.v1
    .MsgRegisterInterchainAccount,
  jspb.Message,
)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.displayName =
    'proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse =
  function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null)
  }
goog.inherits(
  proto.ibc.applications.interchain_accounts.controller.v1
    .MsgRegisterInterchainAccountResponse,
  jspb.Message,
)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse.displayName =
    'proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTx = function (
  opt_data,
) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(
  proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTx,
  jspb.Message,
)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTx.displayName =
    'proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTx'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse =
  function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null)
  }
goog.inherits(
  proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse,
  jspb.Message,
)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse.displayName =
    'proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams =
  function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null)
  }
goog.inherits(
  proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams,
  jspb.Message,
)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams.displayName =
    'proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParamsResponse =
  function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null)
  }
goog.inherits(
  proto.ibc.applications.interchain_accounts.controller.v1
    .MsgUpdateParamsResponse,
  jspb.Message,
)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParamsResponse.displayName =
    'proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParamsResponse'
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.prototype.toObject =
    function (opt_includeInstance) {
      return proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.toObject(
        opt_includeInstance,
        this,
      )
    }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.toObject =
    function (includeInstance, msg) {
      var f,
        obj = {
          owner: jspb.Message.getFieldWithDefault(msg, 1, ''),
          connectionId: jspb.Message.getFieldWithDefault(msg, 2, ''),
          version: jspb.Message.getFieldWithDefault(msg, 3, ''),
          ordering: jspb.Message.getFieldWithDefault(msg, 4, 0),
        }

      if (includeInstance) {
        obj.$jspbMessageInstance = msg
      }
      return obj
    }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount}
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.deserializeBinary =
  function (bytes) {
    var reader = new jspb.BinaryReader(bytes)
    var msg =
      new proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount()
    return proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.deserializeBinaryFromReader(
      msg,
      reader,
    )
  }

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount}
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break
      }
      var field = reader.getFieldNumber()
      switch (field) {
        case 1:
          var value = /** @type {string} */ (reader.readString())
          msg.setOwner(value)
          break
        case 2:
          var value = /** @type {string} */ (reader.readString())
          msg.setConnectionId(value)
          break
        case 3:
          var value = /** @type {string} */ (reader.readString())
          msg.setVersion(value)
          break
        case 4:
          var value = /** @type {!proto.ibc.core.channel.v1.Order} */ (
            reader.readEnum()
          )
          msg.setOrdering(value)
          break
        default:
          reader.skipField()
          break
      }
    }
    return msg
  }

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter()
    proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.serializeBinaryToWriter(
      this,
      writer,
    )
    return writer.getResultBuffer()
  }

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined
    f = message.getOwner()
    if (f.length > 0) {
      writer.writeString(1, f)
    }
    f = message.getConnectionId()
    if (f.length > 0) {
      writer.writeString(2, f)
    }
    f = message.getVersion()
    if (f.length > 0) {
      writer.writeString(3, f)
    }
    f = message.getOrdering()
    if (f !== 0.0) {
      writer.writeEnum(4, f)
    }
  }

/**
 * optional string owner = 1;
 * @return {string}
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.prototype.getOwner =
  function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
  }

/**
 * @param {string} value
 * @return {!proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount} returns this
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.prototype.setOwner =
  function (value) {
    return jspb.Message.setProto3StringField(this, 1, value)
  }

/**
 * optional string connection_id = 2;
 * @return {string}
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.prototype.getConnectionId =
  function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''))
  }

/**
 * @param {string} value
 * @return {!proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount} returns this
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.prototype.setConnectionId =
  function (value) {
    return jspb.Message.setProto3StringField(this, 2, value)
  }

/**
 * optional string version = 3;
 * @return {string}
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.prototype.getVersion =
  function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''))
  }

/**
 * @param {string} value
 * @return {!proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount} returns this
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.prototype.setVersion =
  function (value) {
    return jspb.Message.setProto3StringField(this, 3, value)
  }

/**
 * optional ibc.core.channel.v1.Order ordering = 4;
 * @return {!proto.ibc.core.channel.v1.Order}
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.prototype.getOrdering =
  function () {
    return /** @type {!proto.ibc.core.channel.v1.Order} */ (
      jspb.Message.getFieldWithDefault(this, 4, 0)
    )
  }

/**
 * @param {!proto.ibc.core.channel.v1.Order} value
 * @return {!proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount} returns this
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.prototype.setOrdering =
  function (value) {
    return jspb.Message.setProto3EnumField(this, 4, value)
  }

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse.prototype.toObject =
    function (opt_includeInstance) {
      return proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse.toObject(
        opt_includeInstance,
        this,
      )
    }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse.toObject =
    function (includeInstance, msg) {
      var f,
        obj = {
          channelId: jspb.Message.getFieldWithDefault(msg, 1, ''),
          portId: jspb.Message.getFieldWithDefault(msg, 2, ''),
        }

      if (includeInstance) {
        obj.$jspbMessageInstance = msg
      }
      return obj
    }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse}
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse.deserializeBinary =
  function (bytes) {
    var reader = new jspb.BinaryReader(bytes)
    var msg =
      new proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse()
    return proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse.deserializeBinaryFromReader(
      msg,
      reader,
    )
  }

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse}
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break
      }
      var field = reader.getFieldNumber()
      switch (field) {
        case 1:
          var value = /** @type {string} */ (reader.readString())
          msg.setChannelId(value)
          break
        case 2:
          var value = /** @type {string} */ (reader.readString())
          msg.setPortId(value)
          break
        default:
          reader.skipField()
          break
      }
    }
    return msg
  }

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter()
    proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse.serializeBinaryToWriter(
      this,
      writer,
    )
    return writer.getResultBuffer()
  }

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined
    f = message.getChannelId()
    if (f.length > 0) {
      writer.writeString(1, f)
    }
    f = message.getPortId()
    if (f.length > 0) {
      writer.writeString(2, f)
    }
  }

/**
 * optional string channel_id = 1;
 * @return {string}
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse.prototype.getChannelId =
  function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
  }

/**
 * @param {string} value
 * @return {!proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse} returns this
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse.prototype.setChannelId =
  function (value) {
    return jspb.Message.setProto3StringField(this, 1, value)
  }

/**
 * optional string port_id = 2;
 * @return {string}
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse.prototype.getPortId =
  function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''))
  }

/**
 * @param {string} value
 * @return {!proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse} returns this
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse.prototype.setPortId =
  function (value) {
    return jspb.Message.setProto3StringField(this, 2, value)
  }

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTx.prototype.toObject =
    function (opt_includeInstance) {
      return proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTx.toObject(
        opt_includeInstance,
        this,
      )
    }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTx} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTx.toObject =
    function (includeInstance, msg) {
      var f,
        obj = {
          owner: jspb.Message.getFieldWithDefault(msg, 1, ''),
          connectionId: jspb.Message.getFieldWithDefault(msg, 2, ''),
          packetData:
            (f = msg.getPacketData()) &&
            ibc_applications_interchain_accounts_v1_packet_pb.InterchainAccountPacketData.toObject(
              includeInstance,
              f,
            ),
          relativeTimeout: jspb.Message.getFieldWithDefault(msg, 4, 0),
        }

      if (includeInstance) {
        obj.$jspbMessageInstance = msg
      }
      return obj
    }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTx}
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTx.deserializeBinary =
  function (bytes) {
    var reader = new jspb.BinaryReader(bytes)
    var msg =
      new proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTx()
    return proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTx.deserializeBinaryFromReader(
      msg,
      reader,
    )
  }

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTx}
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTx.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break
      }
      var field = reader.getFieldNumber()
      switch (field) {
        case 1:
          var value = /** @type {string} */ (reader.readString())
          msg.setOwner(value)
          break
        case 2:
          var value = /** @type {string} */ (reader.readString())
          msg.setConnectionId(value)
          break
        case 3:
          var value =
            new ibc_applications_interchain_accounts_v1_packet_pb.InterchainAccountPacketData()
          reader.readMessage(
            value,
            ibc_applications_interchain_accounts_v1_packet_pb
              .InterchainAccountPacketData.deserializeBinaryFromReader,
          )
          msg.setPacketData(value)
          break
        case 4:
          var value = /** @type {number} */ (reader.readUint64())
          msg.setRelativeTimeout(value)
          break
        default:
          reader.skipField()
          break
      }
    }
    return msg
  }

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTx.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter()
    proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTx.serializeBinaryToWriter(
      this,
      writer,
    )
    return writer.getResultBuffer()
  }

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTx.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined
    f = message.getOwner()
    if (f.length > 0) {
      writer.writeString(1, f)
    }
    f = message.getConnectionId()
    if (f.length > 0) {
      writer.writeString(2, f)
    }
    f = message.getPacketData()
    if (f != null) {
      writer.writeMessage(
        3,
        f,
        ibc_applications_interchain_accounts_v1_packet_pb
          .InterchainAccountPacketData.serializeBinaryToWriter,
      )
    }
    f = message.getRelativeTimeout()
    if (f !== 0) {
      writer.writeUint64(4, f)
    }
  }

/**
 * optional string owner = 1;
 * @return {string}
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTx.prototype.getOwner =
  function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
  }

/**
 * @param {string} value
 * @return {!proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTx} returns this
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTx.prototype.setOwner =
  function (value) {
    return jspb.Message.setProto3StringField(this, 1, value)
  }

/**
 * optional string connection_id = 2;
 * @return {string}
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTx.prototype.getConnectionId =
  function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''))
  }

/**
 * @param {string} value
 * @return {!proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTx} returns this
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTx.prototype.setConnectionId =
  function (value) {
    return jspb.Message.setProto3StringField(this, 2, value)
  }

/**
 * optional ibc.applications.interchain_accounts.v1.InterchainAccountPacketData packet_data = 3;
 * @return {?proto.ibc.applications.interchain_accounts.v1.InterchainAccountPacketData}
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTx.prototype.getPacketData =
  function () {
    return /** @type{?proto.ibc.applications.interchain_accounts.v1.InterchainAccountPacketData} */ (
      jspb.Message.getWrapperField(
        this,
        ibc_applications_interchain_accounts_v1_packet_pb.InterchainAccountPacketData,
        3,
      )
    )
  }

/**
 * @param {?proto.ibc.applications.interchain_accounts.v1.InterchainAccountPacketData|undefined} value
 * @return {!proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTx} returns this
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTx.prototype.setPacketData =
  function (value) {
    return jspb.Message.setWrapperField(this, 3, value)
  }

/**
 * Clears the message field making it undefined.
 * @return {!proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTx} returns this
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTx.prototype.clearPacketData =
  function () {
    return this.setPacketData(undefined)
  }

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTx.prototype.hasPacketData =
  function () {
    return jspb.Message.getField(this, 3) != null
  }

/**
 * optional uint64 relative_timeout = 4;
 * @return {number}
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTx.prototype.getRelativeTimeout =
  function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0))
  }

/**
 * @param {number} value
 * @return {!proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTx} returns this
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTx.prototype.setRelativeTimeout =
  function (value) {
    return jspb.Message.setProto3IntField(this, 4, value)
  }

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse.prototype.toObject =
    function (opt_includeInstance) {
      return proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse.toObject(
        opt_includeInstance,
        this,
      )
    }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse.toObject =
    function (includeInstance, msg) {
      var f,
        obj = {
          sequence: jspb.Message.getFieldWithDefault(msg, 1, 0),
        }

      if (includeInstance) {
        obj.$jspbMessageInstance = msg
      }
      return obj
    }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse}
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse.deserializeBinary =
  function (bytes) {
    var reader = new jspb.BinaryReader(bytes)
    var msg =
      new proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse()
    return proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse.deserializeBinaryFromReader(
      msg,
      reader,
    )
  }

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse}
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break
      }
      var field = reader.getFieldNumber()
      switch (field) {
        case 1:
          var value = /** @type {number} */ (reader.readUint64())
          msg.setSequence(value)
          break
        default:
          reader.skipField()
          break
      }
    }
    return msg
  }

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter()
    proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse.serializeBinaryToWriter(
      this,
      writer,
    )
    return writer.getResultBuffer()
  }

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined
    f = message.getSequence()
    if (f !== 0) {
      writer.writeUint64(1, f)
    }
  }

/**
 * optional uint64 sequence = 1;
 * @return {number}
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse.prototype.getSequence =
  function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0))
  }

/**
 * @param {number} value
 * @return {!proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse} returns this
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse.prototype.setSequence =
  function (value) {
    return jspb.Message.setProto3IntField(this, 1, value)
  }

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams.prototype.toObject =
    function (opt_includeInstance) {
      return proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams.toObject(
        opt_includeInstance,
        this,
      )
    }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams.toObject =
    function (includeInstance, msg) {
      var f,
        obj = {
          signer: jspb.Message.getFieldWithDefault(msg, 1, ''),
          params:
            (f = msg.getParams()) &&
            ibc_applications_interchain_accounts_controller_v1_controller_pb.Params.toObject(
              includeInstance,
              f,
            ),
        }

      if (includeInstance) {
        obj.$jspbMessageInstance = msg
      }
      return obj
    }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams}
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams.deserializeBinary =
  function (bytes) {
    var reader = new jspb.BinaryReader(bytes)
    var msg =
      new proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams()
    return proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams.deserializeBinaryFromReader(
      msg,
      reader,
    )
  }

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams}
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break
      }
      var field = reader.getFieldNumber()
      switch (field) {
        case 1:
          var value = /** @type {string} */ (reader.readString())
          msg.setSigner(value)
          break
        case 2:
          var value =
            new ibc_applications_interchain_accounts_controller_v1_controller_pb.Params()
          reader.readMessage(
            value,
            ibc_applications_interchain_accounts_controller_v1_controller_pb
              .Params.deserializeBinaryFromReader,
          )
          msg.setParams(value)
          break
        default:
          reader.skipField()
          break
      }
    }
    return msg
  }

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter()
    proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams.serializeBinaryToWriter(
      this,
      writer,
    )
    return writer.getResultBuffer()
  }

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined
    f = message.getSigner()
    if (f.length > 0) {
      writer.writeString(1, f)
    }
    f = message.getParams()
    if (f != null) {
      writer.writeMessage(
        2,
        f,
        ibc_applications_interchain_accounts_controller_v1_controller_pb.Params
          .serializeBinaryToWriter,
      )
    }
  }

/**
 * optional string signer = 1;
 * @return {string}
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams.prototype.getSigner =
  function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
  }

/**
 * @param {string} value
 * @return {!proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams} returns this
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams.prototype.setSigner =
  function (value) {
    return jspb.Message.setProto3StringField(this, 1, value)
  }

/**
 * optional Params params = 2;
 * @return {?proto.ibc.applications.interchain_accounts.controller.v1.Params}
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams.prototype.getParams =
  function () {
    return /** @type{?proto.ibc.applications.interchain_accounts.controller.v1.Params} */ (
      jspb.Message.getWrapperField(
        this,
        ibc_applications_interchain_accounts_controller_v1_controller_pb.Params,
        2,
      )
    )
  }

/**
 * @param {?proto.ibc.applications.interchain_accounts.controller.v1.Params|undefined} value
 * @return {!proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams} returns this
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams.prototype.setParams =
  function (value) {
    return jspb.Message.setWrapperField(this, 2, value)
  }

/**
 * Clears the message field making it undefined.
 * @return {!proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams} returns this
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams.prototype.clearParams =
  function () {
    return this.setParams(undefined)
  }

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams.prototype.hasParams =
  function () {
    return jspb.Message.getField(this, 2) != null
  }

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParamsResponse.prototype.toObject =
    function (opt_includeInstance) {
      return proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParamsResponse.toObject(
        opt_includeInstance,
        this,
      )
    }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParamsResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParamsResponse.toObject =
    function (includeInstance, msg) {
      var f,
        obj = {}

      if (includeInstance) {
        obj.$jspbMessageInstance = msg
      }
      return obj
    }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParamsResponse}
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParamsResponse.deserializeBinary =
  function (bytes) {
    var reader = new jspb.BinaryReader(bytes)
    var msg =
      new proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParamsResponse()
    return proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParamsResponse.deserializeBinaryFromReader(
      msg,
      reader,
    )
  }

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParamsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParamsResponse}
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParamsResponse.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break
      }
      var field = reader.getFieldNumber()
      switch (field) {
        default:
          reader.skipField()
          break
      }
    }
    return msg
  }

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParamsResponse.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter()
    proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParamsResponse.serializeBinaryToWriter(
      this,
      writer,
    )
    return writer.getResultBuffer()
  }

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParamsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.applications.interchain_accounts.controller.v1.MsgUpdateParamsResponse.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined
  }

goog.object.extend(
  exports,
  proto.ibc.applications.interchain_accounts.controller.v1,
)
