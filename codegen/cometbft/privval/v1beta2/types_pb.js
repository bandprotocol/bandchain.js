// source: cometbft/privval/v1beta2/types.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var cometbft_crypto_v1_keys_pb = require('../../../cometbft/crypto/v1/keys_pb.js');
goog.object.extend(proto, cometbft_crypto_v1_keys_pb);
var cometbft_types_v1_types_pb = require('../../../cometbft/types/v1/types_pb.js');
goog.object.extend(proto, cometbft_types_v1_types_pb);
var gogoproto_gogo_pb = require('../../../gogoproto/gogo_pb.js');
goog.object.extend(proto, gogoproto_gogo_pb);
goog.exportSymbol('proto.cometbft.privval.v1beta2.Errors', null, global);
goog.exportSymbol('proto.cometbft.privval.v1beta2.Message', null, global);
goog.exportSymbol('proto.cometbft.privval.v1beta2.Message.SumCase', null, global);
goog.exportSymbol('proto.cometbft.privval.v1beta2.PingRequest', null, global);
goog.exportSymbol('proto.cometbft.privval.v1beta2.PingResponse', null, global);
goog.exportSymbol('proto.cometbft.privval.v1beta2.PubKeyRequest', null, global);
goog.exportSymbol('proto.cometbft.privval.v1beta2.PubKeyResponse', null, global);
goog.exportSymbol('proto.cometbft.privval.v1beta2.RemoteSignerError', null, global);
goog.exportSymbol('proto.cometbft.privval.v1beta2.SignProposalRequest', null, global);
goog.exportSymbol('proto.cometbft.privval.v1beta2.SignVoteRequest', null, global);
goog.exportSymbol('proto.cometbft.privval.v1beta2.SignedProposalResponse', null, global);
goog.exportSymbol('proto.cometbft.privval.v1beta2.SignedVoteResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.privval.v1beta2.RemoteSignerError = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cometbft.privval.v1beta2.RemoteSignerError, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.privval.v1beta2.RemoteSignerError.displayName = 'proto.cometbft.privval.v1beta2.RemoteSignerError';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.privval.v1beta2.PubKeyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cometbft.privval.v1beta2.PubKeyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.privval.v1beta2.PubKeyRequest.displayName = 'proto.cometbft.privval.v1beta2.PubKeyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.privval.v1beta2.PubKeyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cometbft.privval.v1beta2.PubKeyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.privval.v1beta2.PubKeyResponse.displayName = 'proto.cometbft.privval.v1beta2.PubKeyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.privval.v1beta2.SignVoteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cometbft.privval.v1beta2.SignVoteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.privval.v1beta2.SignVoteRequest.displayName = 'proto.cometbft.privval.v1beta2.SignVoteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.privval.v1beta2.SignedVoteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cometbft.privval.v1beta2.SignedVoteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.privval.v1beta2.SignedVoteResponse.displayName = 'proto.cometbft.privval.v1beta2.SignedVoteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.privval.v1beta2.SignProposalRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cometbft.privval.v1beta2.SignProposalRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.privval.v1beta2.SignProposalRequest.displayName = 'proto.cometbft.privval.v1beta2.SignProposalRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.privval.v1beta2.SignedProposalResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cometbft.privval.v1beta2.SignedProposalResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.privval.v1beta2.SignedProposalResponse.displayName = 'proto.cometbft.privval.v1beta2.SignedProposalResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.privval.v1beta2.PingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cometbft.privval.v1beta2.PingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.privval.v1beta2.PingRequest.displayName = 'proto.cometbft.privval.v1beta2.PingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.privval.v1beta2.PingResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cometbft.privval.v1beta2.PingResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.privval.v1beta2.PingResponse.displayName = 'proto.cometbft.privval.v1beta2.PingResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.privval.v1beta2.Message = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.cometbft.privval.v1beta2.Message.oneofGroups_);
};
goog.inherits(proto.cometbft.privval.v1beta2.Message, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.privval.v1beta2.Message.displayName = 'proto.cometbft.privval.v1beta2.Message';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.privval.v1beta2.RemoteSignerError.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.privval.v1beta2.RemoteSignerError.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.privval.v1beta2.RemoteSignerError} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.privval.v1beta2.RemoteSignerError.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    description: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.privval.v1beta2.RemoteSignerError}
 */
proto.cometbft.privval.v1beta2.RemoteSignerError.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.privval.v1beta2.RemoteSignerError;
  return proto.cometbft.privval.v1beta2.RemoteSignerError.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.privval.v1beta2.RemoteSignerError} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.privval.v1beta2.RemoteSignerError}
 */
proto.cometbft.privval.v1beta2.RemoteSignerError.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.privval.v1beta2.RemoteSignerError.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.privval.v1beta2.RemoteSignerError.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.privval.v1beta2.RemoteSignerError} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.privval.v1beta2.RemoteSignerError.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.cometbft.privval.v1beta2.RemoteSignerError.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.privval.v1beta2.RemoteSignerError} returns this
 */
proto.cometbft.privval.v1beta2.RemoteSignerError.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.cometbft.privval.v1beta2.RemoteSignerError.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cometbft.privval.v1beta2.RemoteSignerError} returns this
 */
proto.cometbft.privval.v1beta2.RemoteSignerError.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.privval.v1beta2.PubKeyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.privval.v1beta2.PubKeyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.privval.v1beta2.PubKeyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.privval.v1beta2.PubKeyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    chainId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.privval.v1beta2.PubKeyRequest}
 */
proto.cometbft.privval.v1beta2.PubKeyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.privval.v1beta2.PubKeyRequest;
  return proto.cometbft.privval.v1beta2.PubKeyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.privval.v1beta2.PubKeyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.privval.v1beta2.PubKeyRequest}
 */
proto.cometbft.privval.v1beta2.PubKeyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setChainId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.privval.v1beta2.PubKeyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.privval.v1beta2.PubKeyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.privval.v1beta2.PubKeyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.privval.v1beta2.PubKeyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string chain_id = 1;
 * @return {string}
 */
proto.cometbft.privval.v1beta2.PubKeyRequest.prototype.getChainId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cometbft.privval.v1beta2.PubKeyRequest} returns this
 */
proto.cometbft.privval.v1beta2.PubKeyRequest.prototype.setChainId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.privval.v1beta2.PubKeyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.privval.v1beta2.PubKeyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.privval.v1beta2.PubKeyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.privval.v1beta2.PubKeyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    pubKey: (f = msg.getPubKey()) && cometbft_crypto_v1_keys_pb.PublicKey.toObject(includeInstance, f),
    error: (f = msg.getError()) && proto.cometbft.privval.v1beta2.RemoteSignerError.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.privval.v1beta2.PubKeyResponse}
 */
proto.cometbft.privval.v1beta2.PubKeyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.privval.v1beta2.PubKeyResponse;
  return proto.cometbft.privval.v1beta2.PubKeyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.privval.v1beta2.PubKeyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.privval.v1beta2.PubKeyResponse}
 */
proto.cometbft.privval.v1beta2.PubKeyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cometbft_crypto_v1_keys_pb.PublicKey;
      reader.readMessage(value,cometbft_crypto_v1_keys_pb.PublicKey.deserializeBinaryFromReader);
      msg.setPubKey(value);
      break;
    case 2:
      var value = new proto.cometbft.privval.v1beta2.RemoteSignerError;
      reader.readMessage(value,proto.cometbft.privval.v1beta2.RemoteSignerError.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.privval.v1beta2.PubKeyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.privval.v1beta2.PubKeyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.privval.v1beta2.PubKeyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.privval.v1beta2.PubKeyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPubKey();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cometbft_crypto_v1_keys_pb.PublicKey.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cometbft.privval.v1beta2.RemoteSignerError.serializeBinaryToWriter
    );
  }
};


/**
 * optional cometbft.crypto.v1.PublicKey pub_key = 1;
 * @return {?proto.cometbft.crypto.v1.PublicKey}
 */
proto.cometbft.privval.v1beta2.PubKeyResponse.prototype.getPubKey = function() {
  return /** @type{?proto.cometbft.crypto.v1.PublicKey} */ (
    jspb.Message.getWrapperField(this, cometbft_crypto_v1_keys_pb.PublicKey, 1));
};


/**
 * @param {?proto.cometbft.crypto.v1.PublicKey|undefined} value
 * @return {!proto.cometbft.privval.v1beta2.PubKeyResponse} returns this
*/
proto.cometbft.privval.v1beta2.PubKeyResponse.prototype.setPubKey = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.privval.v1beta2.PubKeyResponse} returns this
 */
proto.cometbft.privval.v1beta2.PubKeyResponse.prototype.clearPubKey = function() {
  return this.setPubKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.privval.v1beta2.PubKeyResponse.prototype.hasPubKey = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RemoteSignerError error = 2;
 * @return {?proto.cometbft.privval.v1beta2.RemoteSignerError}
 */
proto.cometbft.privval.v1beta2.PubKeyResponse.prototype.getError = function() {
  return /** @type{?proto.cometbft.privval.v1beta2.RemoteSignerError} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.privval.v1beta2.RemoteSignerError, 2));
};


/**
 * @param {?proto.cometbft.privval.v1beta2.RemoteSignerError|undefined} value
 * @return {!proto.cometbft.privval.v1beta2.PubKeyResponse} returns this
*/
proto.cometbft.privval.v1beta2.PubKeyResponse.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.privval.v1beta2.PubKeyResponse} returns this
 */
proto.cometbft.privval.v1beta2.PubKeyResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.privval.v1beta2.PubKeyResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.privval.v1beta2.SignVoteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.privval.v1beta2.SignVoteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.privval.v1beta2.SignVoteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.privval.v1beta2.SignVoteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    vote: (f = msg.getVote()) && cometbft_types_v1_types_pb.Vote.toObject(includeInstance, f),
    chainId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.privval.v1beta2.SignVoteRequest}
 */
proto.cometbft.privval.v1beta2.SignVoteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.privval.v1beta2.SignVoteRequest;
  return proto.cometbft.privval.v1beta2.SignVoteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.privval.v1beta2.SignVoteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.privval.v1beta2.SignVoteRequest}
 */
proto.cometbft.privval.v1beta2.SignVoteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cometbft_types_v1_types_pb.Vote;
      reader.readMessage(value,cometbft_types_v1_types_pb.Vote.deserializeBinaryFromReader);
      msg.setVote(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChainId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.privval.v1beta2.SignVoteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.privval.v1beta2.SignVoteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.privval.v1beta2.SignVoteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.privval.v1beta2.SignVoteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVote();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cometbft_types_v1_types_pb.Vote.serializeBinaryToWriter
    );
  }
  f = message.getChainId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional cometbft.types.v1.Vote vote = 1;
 * @return {?proto.cometbft.types.v1.Vote}
 */
proto.cometbft.privval.v1beta2.SignVoteRequest.prototype.getVote = function() {
  return /** @type{?proto.cometbft.types.v1.Vote} */ (
    jspb.Message.getWrapperField(this, cometbft_types_v1_types_pb.Vote, 1));
};


/**
 * @param {?proto.cometbft.types.v1.Vote|undefined} value
 * @return {!proto.cometbft.privval.v1beta2.SignVoteRequest} returns this
*/
proto.cometbft.privval.v1beta2.SignVoteRequest.prototype.setVote = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.privval.v1beta2.SignVoteRequest} returns this
 */
proto.cometbft.privval.v1beta2.SignVoteRequest.prototype.clearVote = function() {
  return this.setVote(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.privval.v1beta2.SignVoteRequest.prototype.hasVote = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string chain_id = 2;
 * @return {string}
 */
proto.cometbft.privval.v1beta2.SignVoteRequest.prototype.getChainId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cometbft.privval.v1beta2.SignVoteRequest} returns this
 */
proto.cometbft.privval.v1beta2.SignVoteRequest.prototype.setChainId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.privval.v1beta2.SignedVoteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.privval.v1beta2.SignedVoteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.privval.v1beta2.SignedVoteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.privval.v1beta2.SignedVoteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    vote: (f = msg.getVote()) && cometbft_types_v1_types_pb.Vote.toObject(includeInstance, f),
    error: (f = msg.getError()) && proto.cometbft.privval.v1beta2.RemoteSignerError.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.privval.v1beta2.SignedVoteResponse}
 */
proto.cometbft.privval.v1beta2.SignedVoteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.privval.v1beta2.SignedVoteResponse;
  return proto.cometbft.privval.v1beta2.SignedVoteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.privval.v1beta2.SignedVoteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.privval.v1beta2.SignedVoteResponse}
 */
proto.cometbft.privval.v1beta2.SignedVoteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cometbft_types_v1_types_pb.Vote;
      reader.readMessage(value,cometbft_types_v1_types_pb.Vote.deserializeBinaryFromReader);
      msg.setVote(value);
      break;
    case 2:
      var value = new proto.cometbft.privval.v1beta2.RemoteSignerError;
      reader.readMessage(value,proto.cometbft.privval.v1beta2.RemoteSignerError.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.privval.v1beta2.SignedVoteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.privval.v1beta2.SignedVoteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.privval.v1beta2.SignedVoteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.privval.v1beta2.SignedVoteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVote();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cometbft_types_v1_types_pb.Vote.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cometbft.privval.v1beta2.RemoteSignerError.serializeBinaryToWriter
    );
  }
};


/**
 * optional cometbft.types.v1.Vote vote = 1;
 * @return {?proto.cometbft.types.v1.Vote}
 */
proto.cometbft.privval.v1beta2.SignedVoteResponse.prototype.getVote = function() {
  return /** @type{?proto.cometbft.types.v1.Vote} */ (
    jspb.Message.getWrapperField(this, cometbft_types_v1_types_pb.Vote, 1));
};


/**
 * @param {?proto.cometbft.types.v1.Vote|undefined} value
 * @return {!proto.cometbft.privval.v1beta2.SignedVoteResponse} returns this
*/
proto.cometbft.privval.v1beta2.SignedVoteResponse.prototype.setVote = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.privval.v1beta2.SignedVoteResponse} returns this
 */
proto.cometbft.privval.v1beta2.SignedVoteResponse.prototype.clearVote = function() {
  return this.setVote(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.privval.v1beta2.SignedVoteResponse.prototype.hasVote = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RemoteSignerError error = 2;
 * @return {?proto.cometbft.privval.v1beta2.RemoteSignerError}
 */
proto.cometbft.privval.v1beta2.SignedVoteResponse.prototype.getError = function() {
  return /** @type{?proto.cometbft.privval.v1beta2.RemoteSignerError} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.privval.v1beta2.RemoteSignerError, 2));
};


/**
 * @param {?proto.cometbft.privval.v1beta2.RemoteSignerError|undefined} value
 * @return {!proto.cometbft.privval.v1beta2.SignedVoteResponse} returns this
*/
proto.cometbft.privval.v1beta2.SignedVoteResponse.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.privval.v1beta2.SignedVoteResponse} returns this
 */
proto.cometbft.privval.v1beta2.SignedVoteResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.privval.v1beta2.SignedVoteResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.privval.v1beta2.SignProposalRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.privval.v1beta2.SignProposalRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.privval.v1beta2.SignProposalRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.privval.v1beta2.SignProposalRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    proposal: (f = msg.getProposal()) && cometbft_types_v1_types_pb.Proposal.toObject(includeInstance, f),
    chainId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.privval.v1beta2.SignProposalRequest}
 */
proto.cometbft.privval.v1beta2.SignProposalRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.privval.v1beta2.SignProposalRequest;
  return proto.cometbft.privval.v1beta2.SignProposalRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.privval.v1beta2.SignProposalRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.privval.v1beta2.SignProposalRequest}
 */
proto.cometbft.privval.v1beta2.SignProposalRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cometbft_types_v1_types_pb.Proposal;
      reader.readMessage(value,cometbft_types_v1_types_pb.Proposal.deserializeBinaryFromReader);
      msg.setProposal(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChainId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.privval.v1beta2.SignProposalRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.privval.v1beta2.SignProposalRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.privval.v1beta2.SignProposalRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.privval.v1beta2.SignProposalRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProposal();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cometbft_types_v1_types_pb.Proposal.serializeBinaryToWriter
    );
  }
  f = message.getChainId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional cometbft.types.v1.Proposal proposal = 1;
 * @return {?proto.cometbft.types.v1.Proposal}
 */
proto.cometbft.privval.v1beta2.SignProposalRequest.prototype.getProposal = function() {
  return /** @type{?proto.cometbft.types.v1.Proposal} */ (
    jspb.Message.getWrapperField(this, cometbft_types_v1_types_pb.Proposal, 1));
};


/**
 * @param {?proto.cometbft.types.v1.Proposal|undefined} value
 * @return {!proto.cometbft.privval.v1beta2.SignProposalRequest} returns this
*/
proto.cometbft.privval.v1beta2.SignProposalRequest.prototype.setProposal = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.privval.v1beta2.SignProposalRequest} returns this
 */
proto.cometbft.privval.v1beta2.SignProposalRequest.prototype.clearProposal = function() {
  return this.setProposal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.privval.v1beta2.SignProposalRequest.prototype.hasProposal = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string chain_id = 2;
 * @return {string}
 */
proto.cometbft.privval.v1beta2.SignProposalRequest.prototype.getChainId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cometbft.privval.v1beta2.SignProposalRequest} returns this
 */
proto.cometbft.privval.v1beta2.SignProposalRequest.prototype.setChainId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.privval.v1beta2.SignedProposalResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.privval.v1beta2.SignedProposalResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.privval.v1beta2.SignedProposalResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.privval.v1beta2.SignedProposalResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    proposal: (f = msg.getProposal()) && cometbft_types_v1_types_pb.Proposal.toObject(includeInstance, f),
    error: (f = msg.getError()) && proto.cometbft.privval.v1beta2.RemoteSignerError.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.privval.v1beta2.SignedProposalResponse}
 */
proto.cometbft.privval.v1beta2.SignedProposalResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.privval.v1beta2.SignedProposalResponse;
  return proto.cometbft.privval.v1beta2.SignedProposalResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.privval.v1beta2.SignedProposalResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.privval.v1beta2.SignedProposalResponse}
 */
proto.cometbft.privval.v1beta2.SignedProposalResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cometbft_types_v1_types_pb.Proposal;
      reader.readMessage(value,cometbft_types_v1_types_pb.Proposal.deserializeBinaryFromReader);
      msg.setProposal(value);
      break;
    case 2:
      var value = new proto.cometbft.privval.v1beta2.RemoteSignerError;
      reader.readMessage(value,proto.cometbft.privval.v1beta2.RemoteSignerError.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.privval.v1beta2.SignedProposalResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.privval.v1beta2.SignedProposalResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.privval.v1beta2.SignedProposalResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.privval.v1beta2.SignedProposalResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProposal();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cometbft_types_v1_types_pb.Proposal.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cometbft.privval.v1beta2.RemoteSignerError.serializeBinaryToWriter
    );
  }
};


/**
 * optional cometbft.types.v1.Proposal proposal = 1;
 * @return {?proto.cometbft.types.v1.Proposal}
 */
proto.cometbft.privval.v1beta2.SignedProposalResponse.prototype.getProposal = function() {
  return /** @type{?proto.cometbft.types.v1.Proposal} */ (
    jspb.Message.getWrapperField(this, cometbft_types_v1_types_pb.Proposal, 1));
};


/**
 * @param {?proto.cometbft.types.v1.Proposal|undefined} value
 * @return {!proto.cometbft.privval.v1beta2.SignedProposalResponse} returns this
*/
proto.cometbft.privval.v1beta2.SignedProposalResponse.prototype.setProposal = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.privval.v1beta2.SignedProposalResponse} returns this
 */
proto.cometbft.privval.v1beta2.SignedProposalResponse.prototype.clearProposal = function() {
  return this.setProposal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.privval.v1beta2.SignedProposalResponse.prototype.hasProposal = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RemoteSignerError error = 2;
 * @return {?proto.cometbft.privval.v1beta2.RemoteSignerError}
 */
proto.cometbft.privval.v1beta2.SignedProposalResponse.prototype.getError = function() {
  return /** @type{?proto.cometbft.privval.v1beta2.RemoteSignerError} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.privval.v1beta2.RemoteSignerError, 2));
};


/**
 * @param {?proto.cometbft.privval.v1beta2.RemoteSignerError|undefined} value
 * @return {!proto.cometbft.privval.v1beta2.SignedProposalResponse} returns this
*/
proto.cometbft.privval.v1beta2.SignedProposalResponse.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.privval.v1beta2.SignedProposalResponse} returns this
 */
proto.cometbft.privval.v1beta2.SignedProposalResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.privval.v1beta2.SignedProposalResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.privval.v1beta2.PingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.privval.v1beta2.PingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.privval.v1beta2.PingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.privval.v1beta2.PingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.privval.v1beta2.PingRequest}
 */
proto.cometbft.privval.v1beta2.PingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.privval.v1beta2.PingRequest;
  return proto.cometbft.privval.v1beta2.PingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.privval.v1beta2.PingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.privval.v1beta2.PingRequest}
 */
proto.cometbft.privval.v1beta2.PingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.privval.v1beta2.PingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.privval.v1beta2.PingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.privval.v1beta2.PingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.privval.v1beta2.PingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.privval.v1beta2.PingResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.privval.v1beta2.PingResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.privval.v1beta2.PingResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.privval.v1beta2.PingResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.privval.v1beta2.PingResponse}
 */
proto.cometbft.privval.v1beta2.PingResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.privval.v1beta2.PingResponse;
  return proto.cometbft.privval.v1beta2.PingResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.privval.v1beta2.PingResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.privval.v1beta2.PingResponse}
 */
proto.cometbft.privval.v1beta2.PingResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.privval.v1beta2.PingResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.privval.v1beta2.PingResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.privval.v1beta2.PingResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.privval.v1beta2.PingResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.cometbft.privval.v1beta2.Message.oneofGroups_ = [[1,2,3,4,5,6,7,8]];

/**
 * @enum {number}
 */
proto.cometbft.privval.v1beta2.Message.SumCase = {
  SUM_NOT_SET: 0,
  PUB_KEY_REQUEST: 1,
  PUB_KEY_RESPONSE: 2,
  SIGN_VOTE_REQUEST: 3,
  SIGNED_VOTE_RESPONSE: 4,
  SIGN_PROPOSAL_REQUEST: 5,
  SIGNED_PROPOSAL_RESPONSE: 6,
  PING_REQUEST: 7,
  PING_RESPONSE: 8
};

/**
 * @return {proto.cometbft.privval.v1beta2.Message.SumCase}
 */
proto.cometbft.privval.v1beta2.Message.prototype.getSumCase = function() {
  return /** @type {proto.cometbft.privval.v1beta2.Message.SumCase} */(jspb.Message.computeOneofCase(this, proto.cometbft.privval.v1beta2.Message.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.privval.v1beta2.Message.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.privval.v1beta2.Message.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.privval.v1beta2.Message} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.privval.v1beta2.Message.toObject = function(includeInstance, msg) {
  var f, obj = {
    pubKeyRequest: (f = msg.getPubKeyRequest()) && proto.cometbft.privval.v1beta2.PubKeyRequest.toObject(includeInstance, f),
    pubKeyResponse: (f = msg.getPubKeyResponse()) && proto.cometbft.privval.v1beta2.PubKeyResponse.toObject(includeInstance, f),
    signVoteRequest: (f = msg.getSignVoteRequest()) && proto.cometbft.privval.v1beta2.SignVoteRequest.toObject(includeInstance, f),
    signedVoteResponse: (f = msg.getSignedVoteResponse()) && proto.cometbft.privval.v1beta2.SignedVoteResponse.toObject(includeInstance, f),
    signProposalRequest: (f = msg.getSignProposalRequest()) && proto.cometbft.privval.v1beta2.SignProposalRequest.toObject(includeInstance, f),
    signedProposalResponse: (f = msg.getSignedProposalResponse()) && proto.cometbft.privval.v1beta2.SignedProposalResponse.toObject(includeInstance, f),
    pingRequest: (f = msg.getPingRequest()) && proto.cometbft.privval.v1beta2.PingRequest.toObject(includeInstance, f),
    pingResponse: (f = msg.getPingResponse()) && proto.cometbft.privval.v1beta2.PingResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.privval.v1beta2.Message}
 */
proto.cometbft.privval.v1beta2.Message.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.privval.v1beta2.Message;
  return proto.cometbft.privval.v1beta2.Message.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.privval.v1beta2.Message} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.privval.v1beta2.Message}
 */
proto.cometbft.privval.v1beta2.Message.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cometbft.privval.v1beta2.PubKeyRequest;
      reader.readMessage(value,proto.cometbft.privval.v1beta2.PubKeyRequest.deserializeBinaryFromReader);
      msg.setPubKeyRequest(value);
      break;
    case 2:
      var value = new proto.cometbft.privval.v1beta2.PubKeyResponse;
      reader.readMessage(value,proto.cometbft.privval.v1beta2.PubKeyResponse.deserializeBinaryFromReader);
      msg.setPubKeyResponse(value);
      break;
    case 3:
      var value = new proto.cometbft.privval.v1beta2.SignVoteRequest;
      reader.readMessage(value,proto.cometbft.privval.v1beta2.SignVoteRequest.deserializeBinaryFromReader);
      msg.setSignVoteRequest(value);
      break;
    case 4:
      var value = new proto.cometbft.privval.v1beta2.SignedVoteResponse;
      reader.readMessage(value,proto.cometbft.privval.v1beta2.SignedVoteResponse.deserializeBinaryFromReader);
      msg.setSignedVoteResponse(value);
      break;
    case 5:
      var value = new proto.cometbft.privval.v1beta2.SignProposalRequest;
      reader.readMessage(value,proto.cometbft.privval.v1beta2.SignProposalRequest.deserializeBinaryFromReader);
      msg.setSignProposalRequest(value);
      break;
    case 6:
      var value = new proto.cometbft.privval.v1beta2.SignedProposalResponse;
      reader.readMessage(value,proto.cometbft.privval.v1beta2.SignedProposalResponse.deserializeBinaryFromReader);
      msg.setSignedProposalResponse(value);
      break;
    case 7:
      var value = new proto.cometbft.privval.v1beta2.PingRequest;
      reader.readMessage(value,proto.cometbft.privval.v1beta2.PingRequest.deserializeBinaryFromReader);
      msg.setPingRequest(value);
      break;
    case 8:
      var value = new proto.cometbft.privval.v1beta2.PingResponse;
      reader.readMessage(value,proto.cometbft.privval.v1beta2.PingResponse.deserializeBinaryFromReader);
      msg.setPingResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.privval.v1beta2.Message.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.privval.v1beta2.Message.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.privval.v1beta2.Message} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.privval.v1beta2.Message.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPubKeyRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.cometbft.privval.v1beta2.PubKeyRequest.serializeBinaryToWriter
    );
  }
  f = message.getPubKeyResponse();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cometbft.privval.v1beta2.PubKeyResponse.serializeBinaryToWriter
    );
  }
  f = message.getSignVoteRequest();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cometbft.privval.v1beta2.SignVoteRequest.serializeBinaryToWriter
    );
  }
  f = message.getSignedVoteResponse();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.cometbft.privval.v1beta2.SignedVoteResponse.serializeBinaryToWriter
    );
  }
  f = message.getSignProposalRequest();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.cometbft.privval.v1beta2.SignProposalRequest.serializeBinaryToWriter
    );
  }
  f = message.getSignedProposalResponse();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.cometbft.privval.v1beta2.SignedProposalResponse.serializeBinaryToWriter
    );
  }
  f = message.getPingRequest();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.cometbft.privval.v1beta2.PingRequest.serializeBinaryToWriter
    );
  }
  f = message.getPingResponse();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.cometbft.privval.v1beta2.PingResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional PubKeyRequest pub_key_request = 1;
 * @return {?proto.cometbft.privval.v1beta2.PubKeyRequest}
 */
proto.cometbft.privval.v1beta2.Message.prototype.getPubKeyRequest = function() {
  return /** @type{?proto.cometbft.privval.v1beta2.PubKeyRequest} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.privval.v1beta2.PubKeyRequest, 1));
};


/**
 * @param {?proto.cometbft.privval.v1beta2.PubKeyRequest|undefined} value
 * @return {!proto.cometbft.privval.v1beta2.Message} returns this
*/
proto.cometbft.privval.v1beta2.Message.prototype.setPubKeyRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.cometbft.privval.v1beta2.Message.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.privval.v1beta2.Message} returns this
 */
proto.cometbft.privval.v1beta2.Message.prototype.clearPubKeyRequest = function() {
  return this.setPubKeyRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.privval.v1beta2.Message.prototype.hasPubKeyRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PubKeyResponse pub_key_response = 2;
 * @return {?proto.cometbft.privval.v1beta2.PubKeyResponse}
 */
proto.cometbft.privval.v1beta2.Message.prototype.getPubKeyResponse = function() {
  return /** @type{?proto.cometbft.privval.v1beta2.PubKeyResponse} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.privval.v1beta2.PubKeyResponse, 2));
};


/**
 * @param {?proto.cometbft.privval.v1beta2.PubKeyResponse|undefined} value
 * @return {!proto.cometbft.privval.v1beta2.Message} returns this
*/
proto.cometbft.privval.v1beta2.Message.prototype.setPubKeyResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.cometbft.privval.v1beta2.Message.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.privval.v1beta2.Message} returns this
 */
proto.cometbft.privval.v1beta2.Message.prototype.clearPubKeyResponse = function() {
  return this.setPubKeyResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.privval.v1beta2.Message.prototype.hasPubKeyResponse = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SignVoteRequest sign_vote_request = 3;
 * @return {?proto.cometbft.privval.v1beta2.SignVoteRequest}
 */
proto.cometbft.privval.v1beta2.Message.prototype.getSignVoteRequest = function() {
  return /** @type{?proto.cometbft.privval.v1beta2.SignVoteRequest} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.privval.v1beta2.SignVoteRequest, 3));
};


/**
 * @param {?proto.cometbft.privval.v1beta2.SignVoteRequest|undefined} value
 * @return {!proto.cometbft.privval.v1beta2.Message} returns this
*/
proto.cometbft.privval.v1beta2.Message.prototype.setSignVoteRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.cometbft.privval.v1beta2.Message.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.privval.v1beta2.Message} returns this
 */
proto.cometbft.privval.v1beta2.Message.prototype.clearSignVoteRequest = function() {
  return this.setSignVoteRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.privval.v1beta2.Message.prototype.hasSignVoteRequest = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional SignedVoteResponse signed_vote_response = 4;
 * @return {?proto.cometbft.privval.v1beta2.SignedVoteResponse}
 */
proto.cometbft.privval.v1beta2.Message.prototype.getSignedVoteResponse = function() {
  return /** @type{?proto.cometbft.privval.v1beta2.SignedVoteResponse} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.privval.v1beta2.SignedVoteResponse, 4));
};


/**
 * @param {?proto.cometbft.privval.v1beta2.SignedVoteResponse|undefined} value
 * @return {!proto.cometbft.privval.v1beta2.Message} returns this
*/
proto.cometbft.privval.v1beta2.Message.prototype.setSignedVoteResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.cometbft.privval.v1beta2.Message.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.privval.v1beta2.Message} returns this
 */
proto.cometbft.privval.v1beta2.Message.prototype.clearSignedVoteResponse = function() {
  return this.setSignedVoteResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.privval.v1beta2.Message.prototype.hasSignedVoteResponse = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional SignProposalRequest sign_proposal_request = 5;
 * @return {?proto.cometbft.privval.v1beta2.SignProposalRequest}
 */
proto.cometbft.privval.v1beta2.Message.prototype.getSignProposalRequest = function() {
  return /** @type{?proto.cometbft.privval.v1beta2.SignProposalRequest} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.privval.v1beta2.SignProposalRequest, 5));
};


/**
 * @param {?proto.cometbft.privval.v1beta2.SignProposalRequest|undefined} value
 * @return {!proto.cometbft.privval.v1beta2.Message} returns this
*/
proto.cometbft.privval.v1beta2.Message.prototype.setSignProposalRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.cometbft.privval.v1beta2.Message.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.privval.v1beta2.Message} returns this
 */
proto.cometbft.privval.v1beta2.Message.prototype.clearSignProposalRequest = function() {
  return this.setSignProposalRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.privval.v1beta2.Message.prototype.hasSignProposalRequest = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional SignedProposalResponse signed_proposal_response = 6;
 * @return {?proto.cometbft.privval.v1beta2.SignedProposalResponse}
 */
proto.cometbft.privval.v1beta2.Message.prototype.getSignedProposalResponse = function() {
  return /** @type{?proto.cometbft.privval.v1beta2.SignedProposalResponse} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.privval.v1beta2.SignedProposalResponse, 6));
};


/**
 * @param {?proto.cometbft.privval.v1beta2.SignedProposalResponse|undefined} value
 * @return {!proto.cometbft.privval.v1beta2.Message} returns this
*/
proto.cometbft.privval.v1beta2.Message.prototype.setSignedProposalResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.cometbft.privval.v1beta2.Message.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.privval.v1beta2.Message} returns this
 */
proto.cometbft.privval.v1beta2.Message.prototype.clearSignedProposalResponse = function() {
  return this.setSignedProposalResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.privval.v1beta2.Message.prototype.hasSignedProposalResponse = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional PingRequest ping_request = 7;
 * @return {?proto.cometbft.privval.v1beta2.PingRequest}
 */
proto.cometbft.privval.v1beta2.Message.prototype.getPingRequest = function() {
  return /** @type{?proto.cometbft.privval.v1beta2.PingRequest} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.privval.v1beta2.PingRequest, 7));
};


/**
 * @param {?proto.cometbft.privval.v1beta2.PingRequest|undefined} value
 * @return {!proto.cometbft.privval.v1beta2.Message} returns this
*/
proto.cometbft.privval.v1beta2.Message.prototype.setPingRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.cometbft.privval.v1beta2.Message.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.privval.v1beta2.Message} returns this
 */
proto.cometbft.privval.v1beta2.Message.prototype.clearPingRequest = function() {
  return this.setPingRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.privval.v1beta2.Message.prototype.hasPingRequest = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional PingResponse ping_response = 8;
 * @return {?proto.cometbft.privval.v1beta2.PingResponse}
 */
proto.cometbft.privval.v1beta2.Message.prototype.getPingResponse = function() {
  return /** @type{?proto.cometbft.privval.v1beta2.PingResponse} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.privval.v1beta2.PingResponse, 8));
};


/**
 * @param {?proto.cometbft.privval.v1beta2.PingResponse|undefined} value
 * @return {!proto.cometbft.privval.v1beta2.Message} returns this
*/
proto.cometbft.privval.v1beta2.Message.prototype.setPingResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.cometbft.privval.v1beta2.Message.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.privval.v1beta2.Message} returns this
 */
proto.cometbft.privval.v1beta2.Message.prototype.clearPingResponse = function() {
  return this.setPingResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.privval.v1beta2.Message.prototype.hasPingResponse = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * @enum {number}
 */
proto.cometbft.privval.v1beta2.Errors = {
  ERRORS_UNKNOWN: 0,
  ERRORS_UNEXPECTED_RESPONSE: 1,
  ERRORS_NO_CONNECTION: 2,
  ERRORS_CONNECTION_TIMEOUT: 3,
  ERRORS_READ_TIMEOUT: 4,
  ERRORS_WRITE_TIMEOUT: 5
};

goog.object.extend(exports, proto.cometbft.privval.v1beta2);
