/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: cometbft/services/block_results/v1/block_results.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../../../abci/v1/types";
import * as dependency_2 from "./../../../types/v1/params";
import * as pb_1 from "google-protobuf";
export namespace cometbft.services.block_results.v1 {
    export class GetBlockResultsRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            height?: number;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("height" in data && data.height != undefined) {
                    this.height = data.height;
                }
            }
        }
        get height() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set height(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data: {
            height?: number;
        }): GetBlockResultsRequest {
            const message = new GetBlockResultsRequest({});
            if (data.height != null) {
                message.height = data.height;
            }
            return message;
        }
        toObject() {
            const data: {
                height?: number;
            } = {};
            if (this.height != null) {
                data.height = this.height;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.height != 0)
                writer.writeInt64(1, this.height);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GetBlockResultsRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GetBlockResultsRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.height = reader.readInt64();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GetBlockResultsRequest {
            return GetBlockResultsRequest.deserialize(bytes);
        }
    }
    export class GetBlockResultsResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            height?: number;
            tx_results?: dependency_1.cometbft.abci.v1.ExecTxResult[];
            finalize_block_events?: dependency_1.cometbft.abci.v1.Event[];
            validator_updates?: dependency_1.cometbft.abci.v1.ValidatorUpdate[];
            consensus_param_updates?: dependency_2.cometbft.types.v1.ConsensusParams;
            app_hash?: Uint8Array;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2, 3, 4], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("height" in data && data.height != undefined) {
                    this.height = data.height;
                }
                if ("tx_results" in data && data.tx_results != undefined) {
                    this.tx_results = data.tx_results;
                }
                if ("finalize_block_events" in data && data.finalize_block_events != undefined) {
                    this.finalize_block_events = data.finalize_block_events;
                }
                if ("validator_updates" in data && data.validator_updates != undefined) {
                    this.validator_updates = data.validator_updates;
                }
                if ("consensus_param_updates" in data && data.consensus_param_updates != undefined) {
                    this.consensus_param_updates = data.consensus_param_updates;
                }
                if ("app_hash" in data && data.app_hash != undefined) {
                    this.app_hash = data.app_hash;
                }
            }
        }
        get height() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set height(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get tx_results() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_1.cometbft.abci.v1.ExecTxResult, 2) as dependency_1.cometbft.abci.v1.ExecTxResult[];
        }
        set tx_results(value: dependency_1.cometbft.abci.v1.ExecTxResult[]) {
            pb_1.Message.setRepeatedWrapperField(this, 2, value);
        }
        get finalize_block_events() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_1.cometbft.abci.v1.Event, 3) as dependency_1.cometbft.abci.v1.Event[];
        }
        set finalize_block_events(value: dependency_1.cometbft.abci.v1.Event[]) {
            pb_1.Message.setRepeatedWrapperField(this, 3, value);
        }
        get validator_updates() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_1.cometbft.abci.v1.ValidatorUpdate, 4) as dependency_1.cometbft.abci.v1.ValidatorUpdate[];
        }
        set validator_updates(value: dependency_1.cometbft.abci.v1.ValidatorUpdate[]) {
            pb_1.Message.setRepeatedWrapperField(this, 4, value);
        }
        get consensus_param_updates() {
            return pb_1.Message.getWrapperField(this, dependency_2.cometbft.types.v1.ConsensusParams, 5) as dependency_2.cometbft.types.v1.ConsensusParams;
        }
        set consensus_param_updates(value: dependency_2.cometbft.types.v1.ConsensusParams) {
            pb_1.Message.setWrapperField(this, 5, value);
        }
        get has_consensus_param_updates() {
            return pb_1.Message.getField(this, 5) != null;
        }
        get app_hash() {
            return pb_1.Message.getFieldWithDefault(this, 6, new Uint8Array(0)) as Uint8Array;
        }
        set app_hash(value: Uint8Array) {
            pb_1.Message.setField(this, 6, value);
        }
        static fromObject(data: {
            height?: number;
            tx_results?: ReturnType<typeof dependency_1.cometbft.abci.v1.ExecTxResult.prototype.toObject>[];
            finalize_block_events?: ReturnType<typeof dependency_1.cometbft.abci.v1.Event.prototype.toObject>[];
            validator_updates?: ReturnType<typeof dependency_1.cometbft.abci.v1.ValidatorUpdate.prototype.toObject>[];
            consensus_param_updates?: ReturnType<typeof dependency_2.cometbft.types.v1.ConsensusParams.prototype.toObject>;
            app_hash?: Uint8Array;
        }): GetBlockResultsResponse {
            const message = new GetBlockResultsResponse({});
            if (data.height != null) {
                message.height = data.height;
            }
            if (data.tx_results != null) {
                message.tx_results = data.tx_results.map(item => dependency_1.cometbft.abci.v1.ExecTxResult.fromObject(item));
            }
            if (data.finalize_block_events != null) {
                message.finalize_block_events = data.finalize_block_events.map(item => dependency_1.cometbft.abci.v1.Event.fromObject(item));
            }
            if (data.validator_updates != null) {
                message.validator_updates = data.validator_updates.map(item => dependency_1.cometbft.abci.v1.ValidatorUpdate.fromObject(item));
            }
            if (data.consensus_param_updates != null) {
                message.consensus_param_updates = dependency_2.cometbft.types.v1.ConsensusParams.fromObject(data.consensus_param_updates);
            }
            if (data.app_hash != null) {
                message.app_hash = data.app_hash;
            }
            return message;
        }
        toObject() {
            const data: {
                height?: number;
                tx_results?: ReturnType<typeof dependency_1.cometbft.abci.v1.ExecTxResult.prototype.toObject>[];
                finalize_block_events?: ReturnType<typeof dependency_1.cometbft.abci.v1.Event.prototype.toObject>[];
                validator_updates?: ReturnType<typeof dependency_1.cometbft.abci.v1.ValidatorUpdate.prototype.toObject>[];
                consensus_param_updates?: ReturnType<typeof dependency_2.cometbft.types.v1.ConsensusParams.prototype.toObject>;
                app_hash?: Uint8Array;
            } = {};
            if (this.height != null) {
                data.height = this.height;
            }
            if (this.tx_results != null) {
                data.tx_results = this.tx_results.map((item: dependency_1.cometbft.abci.v1.ExecTxResult) => item.toObject());
            }
            if (this.finalize_block_events != null) {
                data.finalize_block_events = this.finalize_block_events.map((item: dependency_1.cometbft.abci.v1.Event) => item.toObject());
            }
            if (this.validator_updates != null) {
                data.validator_updates = this.validator_updates.map((item: dependency_1.cometbft.abci.v1.ValidatorUpdate) => item.toObject());
            }
            if (this.consensus_param_updates != null) {
                data.consensus_param_updates = this.consensus_param_updates.toObject();
            }
            if (this.app_hash != null) {
                data.app_hash = this.app_hash;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.height != 0)
                writer.writeInt64(1, this.height);
            if (this.tx_results.length)
                writer.writeRepeatedMessage(2, this.tx_results, (item: dependency_1.cometbft.abci.v1.ExecTxResult) => item.serialize(writer));
            if (this.finalize_block_events.length)
                writer.writeRepeatedMessage(3, this.finalize_block_events, (item: dependency_1.cometbft.abci.v1.Event) => item.serialize(writer));
            if (this.validator_updates.length)
                writer.writeRepeatedMessage(4, this.validator_updates, (item: dependency_1.cometbft.abci.v1.ValidatorUpdate) => item.serialize(writer));
            if (this.has_consensus_param_updates)
                writer.writeMessage(5, this.consensus_param_updates, () => this.consensus_param_updates.serialize(writer));
            if (this.app_hash.length)
                writer.writeBytes(6, this.app_hash);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GetBlockResultsResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GetBlockResultsResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.height = reader.readInt64();
                        break;
                    case 2:
                        reader.readMessage(message.tx_results, () => pb_1.Message.addToRepeatedWrapperField(message, 2, dependency_1.cometbft.abci.v1.ExecTxResult.deserialize(reader), dependency_1.cometbft.abci.v1.ExecTxResult));
                        break;
                    case 3:
                        reader.readMessage(message.finalize_block_events, () => pb_1.Message.addToRepeatedWrapperField(message, 3, dependency_1.cometbft.abci.v1.Event.deserialize(reader), dependency_1.cometbft.abci.v1.Event));
                        break;
                    case 4:
                        reader.readMessage(message.validator_updates, () => pb_1.Message.addToRepeatedWrapperField(message, 4, dependency_1.cometbft.abci.v1.ValidatorUpdate.deserialize(reader), dependency_1.cometbft.abci.v1.ValidatorUpdate));
                        break;
                    case 5:
                        reader.readMessage(message.consensus_param_updates, () => message.consensus_param_updates = dependency_2.cometbft.types.v1.ConsensusParams.deserialize(reader));
                        break;
                    case 6:
                        message.app_hash = reader.readBytes();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GetBlockResultsResponse {
            return GetBlockResultsResponse.deserialize(bytes);
        }
    }
}
