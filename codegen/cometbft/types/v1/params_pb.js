// source: cometbft/types/v1/params.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var gogoproto_gogo_pb = require('../../../gogoproto/gogo_pb.js');
goog.object.extend(proto, gogoproto_gogo_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
goog.exportSymbol('proto.cometbft.types.v1.ABCIParams', null, global);
goog.exportSymbol('proto.cometbft.types.v1.BlockParams', null, global);
goog.exportSymbol('proto.cometbft.types.v1.ConsensusParams', null, global);
goog.exportSymbol('proto.cometbft.types.v1.EvidenceParams', null, global);
goog.exportSymbol('proto.cometbft.types.v1.FeatureParams', null, global);
goog.exportSymbol('proto.cometbft.types.v1.HashedParams', null, global);
goog.exportSymbol('proto.cometbft.types.v1.SynchronyParams', null, global);
goog.exportSymbol('proto.cometbft.types.v1.ValidatorParams', null, global);
goog.exportSymbol('proto.cometbft.types.v1.VersionParams', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.types.v1.ConsensusParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cometbft.types.v1.ConsensusParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.types.v1.ConsensusParams.displayName = 'proto.cometbft.types.v1.ConsensusParams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.types.v1.BlockParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cometbft.types.v1.BlockParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.types.v1.BlockParams.displayName = 'proto.cometbft.types.v1.BlockParams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.types.v1.EvidenceParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cometbft.types.v1.EvidenceParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.types.v1.EvidenceParams.displayName = 'proto.cometbft.types.v1.EvidenceParams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.types.v1.ValidatorParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cometbft.types.v1.ValidatorParams.repeatedFields_, null);
};
goog.inherits(proto.cometbft.types.v1.ValidatorParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.types.v1.ValidatorParams.displayName = 'proto.cometbft.types.v1.ValidatorParams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.types.v1.VersionParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cometbft.types.v1.VersionParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.types.v1.VersionParams.displayName = 'proto.cometbft.types.v1.VersionParams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.types.v1.HashedParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cometbft.types.v1.HashedParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.types.v1.HashedParams.displayName = 'proto.cometbft.types.v1.HashedParams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.types.v1.SynchronyParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cometbft.types.v1.SynchronyParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.types.v1.SynchronyParams.displayName = 'proto.cometbft.types.v1.SynchronyParams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.types.v1.FeatureParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cometbft.types.v1.FeatureParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.types.v1.FeatureParams.displayName = 'proto.cometbft.types.v1.FeatureParams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.types.v1.ABCIParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cometbft.types.v1.ABCIParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.types.v1.ABCIParams.displayName = 'proto.cometbft.types.v1.ABCIParams';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.types.v1.ConsensusParams.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.types.v1.ConsensusParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.types.v1.ConsensusParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.types.v1.ConsensusParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    block: (f = msg.getBlock()) && proto.cometbft.types.v1.BlockParams.toObject(includeInstance, f),
    evidence: (f = msg.getEvidence()) && proto.cometbft.types.v1.EvidenceParams.toObject(includeInstance, f),
    validator: (f = msg.getValidator()) && proto.cometbft.types.v1.ValidatorParams.toObject(includeInstance, f),
    version: (f = msg.getVersion()) && proto.cometbft.types.v1.VersionParams.toObject(includeInstance, f),
    abci: (f = msg.getAbci()) && proto.cometbft.types.v1.ABCIParams.toObject(includeInstance, f),
    synchrony: (f = msg.getSynchrony()) && proto.cometbft.types.v1.SynchronyParams.toObject(includeInstance, f),
    feature: (f = msg.getFeature()) && proto.cometbft.types.v1.FeatureParams.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.types.v1.ConsensusParams}
 */
proto.cometbft.types.v1.ConsensusParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.types.v1.ConsensusParams;
  return proto.cometbft.types.v1.ConsensusParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.types.v1.ConsensusParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.types.v1.ConsensusParams}
 */
proto.cometbft.types.v1.ConsensusParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cometbft.types.v1.BlockParams;
      reader.readMessage(value,proto.cometbft.types.v1.BlockParams.deserializeBinaryFromReader);
      msg.setBlock(value);
      break;
    case 2:
      var value = new proto.cometbft.types.v1.EvidenceParams;
      reader.readMessage(value,proto.cometbft.types.v1.EvidenceParams.deserializeBinaryFromReader);
      msg.setEvidence(value);
      break;
    case 3:
      var value = new proto.cometbft.types.v1.ValidatorParams;
      reader.readMessage(value,proto.cometbft.types.v1.ValidatorParams.deserializeBinaryFromReader);
      msg.setValidator(value);
      break;
    case 4:
      var value = new proto.cometbft.types.v1.VersionParams;
      reader.readMessage(value,proto.cometbft.types.v1.VersionParams.deserializeBinaryFromReader);
      msg.setVersion(value);
      break;
    case 5:
      var value = new proto.cometbft.types.v1.ABCIParams;
      reader.readMessage(value,proto.cometbft.types.v1.ABCIParams.deserializeBinaryFromReader);
      msg.setAbci(value);
      break;
    case 6:
      var value = new proto.cometbft.types.v1.SynchronyParams;
      reader.readMessage(value,proto.cometbft.types.v1.SynchronyParams.deserializeBinaryFromReader);
      msg.setSynchrony(value);
      break;
    case 7:
      var value = new proto.cometbft.types.v1.FeatureParams;
      reader.readMessage(value,proto.cometbft.types.v1.FeatureParams.deserializeBinaryFromReader);
      msg.setFeature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.types.v1.ConsensusParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.types.v1.ConsensusParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.types.v1.ConsensusParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.types.v1.ConsensusParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlock();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.cometbft.types.v1.BlockParams.serializeBinaryToWriter
    );
  }
  f = message.getEvidence();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cometbft.types.v1.EvidenceParams.serializeBinaryToWriter
    );
  }
  f = message.getValidator();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cometbft.types.v1.ValidatorParams.serializeBinaryToWriter
    );
  }
  f = message.getVersion();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.cometbft.types.v1.VersionParams.serializeBinaryToWriter
    );
  }
  f = message.getAbci();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.cometbft.types.v1.ABCIParams.serializeBinaryToWriter
    );
  }
  f = message.getSynchrony();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.cometbft.types.v1.SynchronyParams.serializeBinaryToWriter
    );
  }
  f = message.getFeature();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.cometbft.types.v1.FeatureParams.serializeBinaryToWriter
    );
  }
};


/**
 * optional BlockParams block = 1;
 * @return {?proto.cometbft.types.v1.BlockParams}
 */
proto.cometbft.types.v1.ConsensusParams.prototype.getBlock = function() {
  return /** @type{?proto.cometbft.types.v1.BlockParams} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.types.v1.BlockParams, 1));
};


/**
 * @param {?proto.cometbft.types.v1.BlockParams|undefined} value
 * @return {!proto.cometbft.types.v1.ConsensusParams} returns this
*/
proto.cometbft.types.v1.ConsensusParams.prototype.setBlock = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.types.v1.ConsensusParams} returns this
 */
proto.cometbft.types.v1.ConsensusParams.prototype.clearBlock = function() {
  return this.setBlock(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.types.v1.ConsensusParams.prototype.hasBlock = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional EvidenceParams evidence = 2;
 * @return {?proto.cometbft.types.v1.EvidenceParams}
 */
proto.cometbft.types.v1.ConsensusParams.prototype.getEvidence = function() {
  return /** @type{?proto.cometbft.types.v1.EvidenceParams} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.types.v1.EvidenceParams, 2));
};


/**
 * @param {?proto.cometbft.types.v1.EvidenceParams|undefined} value
 * @return {!proto.cometbft.types.v1.ConsensusParams} returns this
*/
proto.cometbft.types.v1.ConsensusParams.prototype.setEvidence = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.types.v1.ConsensusParams} returns this
 */
proto.cometbft.types.v1.ConsensusParams.prototype.clearEvidence = function() {
  return this.setEvidence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.types.v1.ConsensusParams.prototype.hasEvidence = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ValidatorParams validator = 3;
 * @return {?proto.cometbft.types.v1.ValidatorParams}
 */
proto.cometbft.types.v1.ConsensusParams.prototype.getValidator = function() {
  return /** @type{?proto.cometbft.types.v1.ValidatorParams} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.types.v1.ValidatorParams, 3));
};


/**
 * @param {?proto.cometbft.types.v1.ValidatorParams|undefined} value
 * @return {!proto.cometbft.types.v1.ConsensusParams} returns this
*/
proto.cometbft.types.v1.ConsensusParams.prototype.setValidator = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.types.v1.ConsensusParams} returns this
 */
proto.cometbft.types.v1.ConsensusParams.prototype.clearValidator = function() {
  return this.setValidator(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.types.v1.ConsensusParams.prototype.hasValidator = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional VersionParams version = 4;
 * @return {?proto.cometbft.types.v1.VersionParams}
 */
proto.cometbft.types.v1.ConsensusParams.prototype.getVersion = function() {
  return /** @type{?proto.cometbft.types.v1.VersionParams} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.types.v1.VersionParams, 4));
};


/**
 * @param {?proto.cometbft.types.v1.VersionParams|undefined} value
 * @return {!proto.cometbft.types.v1.ConsensusParams} returns this
*/
proto.cometbft.types.v1.ConsensusParams.prototype.setVersion = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.types.v1.ConsensusParams} returns this
 */
proto.cometbft.types.v1.ConsensusParams.prototype.clearVersion = function() {
  return this.setVersion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.types.v1.ConsensusParams.prototype.hasVersion = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ABCIParams abci = 5;
 * @return {?proto.cometbft.types.v1.ABCIParams}
 */
proto.cometbft.types.v1.ConsensusParams.prototype.getAbci = function() {
  return /** @type{?proto.cometbft.types.v1.ABCIParams} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.types.v1.ABCIParams, 5));
};


/**
 * @param {?proto.cometbft.types.v1.ABCIParams|undefined} value
 * @return {!proto.cometbft.types.v1.ConsensusParams} returns this
*/
proto.cometbft.types.v1.ConsensusParams.prototype.setAbci = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.types.v1.ConsensusParams} returns this
 */
proto.cometbft.types.v1.ConsensusParams.prototype.clearAbci = function() {
  return this.setAbci(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.types.v1.ConsensusParams.prototype.hasAbci = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional SynchronyParams synchrony = 6;
 * @return {?proto.cometbft.types.v1.SynchronyParams}
 */
proto.cometbft.types.v1.ConsensusParams.prototype.getSynchrony = function() {
  return /** @type{?proto.cometbft.types.v1.SynchronyParams} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.types.v1.SynchronyParams, 6));
};


/**
 * @param {?proto.cometbft.types.v1.SynchronyParams|undefined} value
 * @return {!proto.cometbft.types.v1.ConsensusParams} returns this
*/
proto.cometbft.types.v1.ConsensusParams.prototype.setSynchrony = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.types.v1.ConsensusParams} returns this
 */
proto.cometbft.types.v1.ConsensusParams.prototype.clearSynchrony = function() {
  return this.setSynchrony(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.types.v1.ConsensusParams.prototype.hasSynchrony = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional FeatureParams feature = 7;
 * @return {?proto.cometbft.types.v1.FeatureParams}
 */
proto.cometbft.types.v1.ConsensusParams.prototype.getFeature = function() {
  return /** @type{?proto.cometbft.types.v1.FeatureParams} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.types.v1.FeatureParams, 7));
};


/**
 * @param {?proto.cometbft.types.v1.FeatureParams|undefined} value
 * @return {!proto.cometbft.types.v1.ConsensusParams} returns this
*/
proto.cometbft.types.v1.ConsensusParams.prototype.setFeature = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.types.v1.ConsensusParams} returns this
 */
proto.cometbft.types.v1.ConsensusParams.prototype.clearFeature = function() {
  return this.setFeature(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.types.v1.ConsensusParams.prototype.hasFeature = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.types.v1.BlockParams.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.types.v1.BlockParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.types.v1.BlockParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.types.v1.BlockParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    maxBytes: jspb.Message.getFieldWithDefault(msg, 1, 0),
    maxGas: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.types.v1.BlockParams}
 */
proto.cometbft.types.v1.BlockParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.types.v1.BlockParams;
  return proto.cometbft.types.v1.BlockParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.types.v1.BlockParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.types.v1.BlockParams}
 */
proto.cometbft.types.v1.BlockParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxBytes(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxGas(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.types.v1.BlockParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.types.v1.BlockParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.types.v1.BlockParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.types.v1.BlockParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMaxBytes();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getMaxGas();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int64 max_bytes = 1;
 * @return {number}
 */
proto.cometbft.types.v1.BlockParams.prototype.getMaxBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.types.v1.BlockParams} returns this
 */
proto.cometbft.types.v1.BlockParams.prototype.setMaxBytes = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 max_gas = 2;
 * @return {number}
 */
proto.cometbft.types.v1.BlockParams.prototype.getMaxGas = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.types.v1.BlockParams} returns this
 */
proto.cometbft.types.v1.BlockParams.prototype.setMaxGas = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.types.v1.EvidenceParams.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.types.v1.EvidenceParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.types.v1.EvidenceParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.types.v1.EvidenceParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    maxAgeNumBlocks: jspb.Message.getFieldWithDefault(msg, 1, 0),
    maxAgeDuration: (f = msg.getMaxAgeDuration()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    maxBytes: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.types.v1.EvidenceParams}
 */
proto.cometbft.types.v1.EvidenceParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.types.v1.EvidenceParams;
  return proto.cometbft.types.v1.EvidenceParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.types.v1.EvidenceParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.types.v1.EvidenceParams}
 */
proto.cometbft.types.v1.EvidenceParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxAgeNumBlocks(value);
      break;
    case 2:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setMaxAgeDuration(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxBytes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.types.v1.EvidenceParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.types.v1.EvidenceParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.types.v1.EvidenceParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.types.v1.EvidenceParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMaxAgeNumBlocks();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getMaxAgeDuration();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getMaxBytes();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional int64 max_age_num_blocks = 1;
 * @return {number}
 */
proto.cometbft.types.v1.EvidenceParams.prototype.getMaxAgeNumBlocks = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.types.v1.EvidenceParams} returns this
 */
proto.cometbft.types.v1.EvidenceParams.prototype.setMaxAgeNumBlocks = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional google.protobuf.Duration max_age_duration = 2;
 * @return {?proto.google.protobuf.Duration}
 */
proto.cometbft.types.v1.EvidenceParams.prototype.getMaxAgeDuration = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 2));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.cometbft.types.v1.EvidenceParams} returns this
*/
proto.cometbft.types.v1.EvidenceParams.prototype.setMaxAgeDuration = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.types.v1.EvidenceParams} returns this
 */
proto.cometbft.types.v1.EvidenceParams.prototype.clearMaxAgeDuration = function() {
  return this.setMaxAgeDuration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.types.v1.EvidenceParams.prototype.hasMaxAgeDuration = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 max_bytes = 3;
 * @return {number}
 */
proto.cometbft.types.v1.EvidenceParams.prototype.getMaxBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.types.v1.EvidenceParams} returns this
 */
proto.cometbft.types.v1.EvidenceParams.prototype.setMaxBytes = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cometbft.types.v1.ValidatorParams.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.types.v1.ValidatorParams.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.types.v1.ValidatorParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.types.v1.ValidatorParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.types.v1.ValidatorParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    pubKeyTypesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.types.v1.ValidatorParams}
 */
proto.cometbft.types.v1.ValidatorParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.types.v1.ValidatorParams;
  return proto.cometbft.types.v1.ValidatorParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.types.v1.ValidatorParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.types.v1.ValidatorParams}
 */
proto.cometbft.types.v1.ValidatorParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addPubKeyTypes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.types.v1.ValidatorParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.types.v1.ValidatorParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.types.v1.ValidatorParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.types.v1.ValidatorParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPubKeyTypesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string pub_key_types = 1;
 * @return {!Array<string>}
 */
proto.cometbft.types.v1.ValidatorParams.prototype.getPubKeyTypesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cometbft.types.v1.ValidatorParams} returns this
 */
proto.cometbft.types.v1.ValidatorParams.prototype.setPubKeyTypesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cometbft.types.v1.ValidatorParams} returns this
 */
proto.cometbft.types.v1.ValidatorParams.prototype.addPubKeyTypes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cometbft.types.v1.ValidatorParams} returns this
 */
proto.cometbft.types.v1.ValidatorParams.prototype.clearPubKeyTypesList = function() {
  return this.setPubKeyTypesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.types.v1.VersionParams.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.types.v1.VersionParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.types.v1.VersionParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.types.v1.VersionParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    app: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.types.v1.VersionParams}
 */
proto.cometbft.types.v1.VersionParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.types.v1.VersionParams;
  return proto.cometbft.types.v1.VersionParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.types.v1.VersionParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.types.v1.VersionParams}
 */
proto.cometbft.types.v1.VersionParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setApp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.types.v1.VersionParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.types.v1.VersionParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.types.v1.VersionParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.types.v1.VersionParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApp();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 app = 1;
 * @return {number}
 */
proto.cometbft.types.v1.VersionParams.prototype.getApp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.types.v1.VersionParams} returns this
 */
proto.cometbft.types.v1.VersionParams.prototype.setApp = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.types.v1.HashedParams.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.types.v1.HashedParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.types.v1.HashedParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.types.v1.HashedParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    blockMaxBytes: jspb.Message.getFieldWithDefault(msg, 1, 0),
    blockMaxGas: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.types.v1.HashedParams}
 */
proto.cometbft.types.v1.HashedParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.types.v1.HashedParams;
  return proto.cometbft.types.v1.HashedParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.types.v1.HashedParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.types.v1.HashedParams}
 */
proto.cometbft.types.v1.HashedParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBlockMaxBytes(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBlockMaxGas(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.types.v1.HashedParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.types.v1.HashedParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.types.v1.HashedParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.types.v1.HashedParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlockMaxBytes();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getBlockMaxGas();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int64 block_max_bytes = 1;
 * @return {number}
 */
proto.cometbft.types.v1.HashedParams.prototype.getBlockMaxBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.types.v1.HashedParams} returns this
 */
proto.cometbft.types.v1.HashedParams.prototype.setBlockMaxBytes = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 block_max_gas = 2;
 * @return {number}
 */
proto.cometbft.types.v1.HashedParams.prototype.getBlockMaxGas = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.types.v1.HashedParams} returns this
 */
proto.cometbft.types.v1.HashedParams.prototype.setBlockMaxGas = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.types.v1.SynchronyParams.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.types.v1.SynchronyParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.types.v1.SynchronyParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.types.v1.SynchronyParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    precision: (f = msg.getPrecision()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    messageDelay: (f = msg.getMessageDelay()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.types.v1.SynchronyParams}
 */
proto.cometbft.types.v1.SynchronyParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.types.v1.SynchronyParams;
  return proto.cometbft.types.v1.SynchronyParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.types.v1.SynchronyParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.types.v1.SynchronyParams}
 */
proto.cometbft.types.v1.SynchronyParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setPrecision(value);
      break;
    case 2:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setMessageDelay(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.types.v1.SynchronyParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.types.v1.SynchronyParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.types.v1.SynchronyParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.types.v1.SynchronyParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrecision();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getMessageDelay();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Duration precision = 1;
 * @return {?proto.google.protobuf.Duration}
 */
proto.cometbft.types.v1.SynchronyParams.prototype.getPrecision = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 1));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.cometbft.types.v1.SynchronyParams} returns this
*/
proto.cometbft.types.v1.SynchronyParams.prototype.setPrecision = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.types.v1.SynchronyParams} returns this
 */
proto.cometbft.types.v1.SynchronyParams.prototype.clearPrecision = function() {
  return this.setPrecision(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.types.v1.SynchronyParams.prototype.hasPrecision = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Duration message_delay = 2;
 * @return {?proto.google.protobuf.Duration}
 */
proto.cometbft.types.v1.SynchronyParams.prototype.getMessageDelay = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 2));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.cometbft.types.v1.SynchronyParams} returns this
*/
proto.cometbft.types.v1.SynchronyParams.prototype.setMessageDelay = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.types.v1.SynchronyParams} returns this
 */
proto.cometbft.types.v1.SynchronyParams.prototype.clearMessageDelay = function() {
  return this.setMessageDelay(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.types.v1.SynchronyParams.prototype.hasMessageDelay = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.types.v1.FeatureParams.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.types.v1.FeatureParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.types.v1.FeatureParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.types.v1.FeatureParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    voteExtensionsEnableHeight: (f = msg.getVoteExtensionsEnableHeight()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    pbtsEnableHeight: (f = msg.getPbtsEnableHeight()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.types.v1.FeatureParams}
 */
proto.cometbft.types.v1.FeatureParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.types.v1.FeatureParams;
  return proto.cometbft.types.v1.FeatureParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.types.v1.FeatureParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.types.v1.FeatureParams}
 */
proto.cometbft.types.v1.FeatureParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setVoteExtensionsEnableHeight(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setPbtsEnableHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.types.v1.FeatureParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.types.v1.FeatureParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.types.v1.FeatureParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.types.v1.FeatureParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVoteExtensionsEnableHeight();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getPbtsEnableHeight();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Int64Value vote_extensions_enable_height = 1;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.cometbft.types.v1.FeatureParams.prototype.getVoteExtensionsEnableHeight = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 1));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.cometbft.types.v1.FeatureParams} returns this
*/
proto.cometbft.types.v1.FeatureParams.prototype.setVoteExtensionsEnableHeight = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.types.v1.FeatureParams} returns this
 */
proto.cometbft.types.v1.FeatureParams.prototype.clearVoteExtensionsEnableHeight = function() {
  return this.setVoteExtensionsEnableHeight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.types.v1.FeatureParams.prototype.hasVoteExtensionsEnableHeight = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Int64Value pbts_enable_height = 2;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.cometbft.types.v1.FeatureParams.prototype.getPbtsEnableHeight = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 2));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.cometbft.types.v1.FeatureParams} returns this
*/
proto.cometbft.types.v1.FeatureParams.prototype.setPbtsEnableHeight = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.types.v1.FeatureParams} returns this
 */
proto.cometbft.types.v1.FeatureParams.prototype.clearPbtsEnableHeight = function() {
  return this.setPbtsEnableHeight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.types.v1.FeatureParams.prototype.hasPbtsEnableHeight = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.types.v1.ABCIParams.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.types.v1.ABCIParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.types.v1.ABCIParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.types.v1.ABCIParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    voteExtensionsEnableHeight: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.types.v1.ABCIParams}
 */
proto.cometbft.types.v1.ABCIParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.types.v1.ABCIParams;
  return proto.cometbft.types.v1.ABCIParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.types.v1.ABCIParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.types.v1.ABCIParams}
 */
proto.cometbft.types.v1.ABCIParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVoteExtensionsEnableHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.types.v1.ABCIParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.types.v1.ABCIParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.types.v1.ABCIParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.types.v1.ABCIParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVoteExtensionsEnableHeight();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 vote_extensions_enable_height = 1;
 * @return {number}
 */
proto.cometbft.types.v1.ABCIParams.prototype.getVoteExtensionsEnableHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.types.v1.ABCIParams} returns this
 */
proto.cometbft.types.v1.ABCIParams.prototype.setVoteExtensionsEnableHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


goog.object.extend(exports, proto.cometbft.types.v1);
