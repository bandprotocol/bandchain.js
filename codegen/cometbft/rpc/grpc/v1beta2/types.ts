/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: cometbft/rpc/grpc/v1beta2/types.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../v1beta1/types";
import * as dependency_2 from "./../../../abci/v1beta2/types";
import * as pb_1 from "google-protobuf";
import * as grpc_1 from "@grpc/grpc-js";
export namespace cometbft.rpc.grpc.v1beta2 {
    export class ResponseBroadcastTx extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            check_tx?: dependency_2.cometbft.abci.v1beta2.ResponseCheckTx;
            deliver_tx?: dependency_2.cometbft.abci.v1beta2.ResponseDeliverTx;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("check_tx" in data && data.check_tx != undefined) {
                    this.check_tx = data.check_tx;
                }
                if ("deliver_tx" in data && data.deliver_tx != undefined) {
                    this.deliver_tx = data.deliver_tx;
                }
            }
        }
        get check_tx() {
            return pb_1.Message.getWrapperField(this, dependency_2.cometbft.abci.v1beta2.ResponseCheckTx, 1) as dependency_2.cometbft.abci.v1beta2.ResponseCheckTx;
        }
        set check_tx(value: dependency_2.cometbft.abci.v1beta2.ResponseCheckTx) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_check_tx() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get deliver_tx() {
            return pb_1.Message.getWrapperField(this, dependency_2.cometbft.abci.v1beta2.ResponseDeliverTx, 2) as dependency_2.cometbft.abci.v1beta2.ResponseDeliverTx;
        }
        set deliver_tx(value: dependency_2.cometbft.abci.v1beta2.ResponseDeliverTx) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_deliver_tx() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            check_tx?: ReturnType<typeof dependency_2.cometbft.abci.v1beta2.ResponseCheckTx.prototype.toObject>;
            deliver_tx?: ReturnType<typeof dependency_2.cometbft.abci.v1beta2.ResponseDeliverTx.prototype.toObject>;
        }): ResponseBroadcastTx {
            const message = new ResponseBroadcastTx({});
            if (data.check_tx != null) {
                message.check_tx = dependency_2.cometbft.abci.v1beta2.ResponseCheckTx.fromObject(data.check_tx);
            }
            if (data.deliver_tx != null) {
                message.deliver_tx = dependency_2.cometbft.abci.v1beta2.ResponseDeliverTx.fromObject(data.deliver_tx);
            }
            return message;
        }
        toObject() {
            const data: {
                check_tx?: ReturnType<typeof dependency_2.cometbft.abci.v1beta2.ResponseCheckTx.prototype.toObject>;
                deliver_tx?: ReturnType<typeof dependency_2.cometbft.abci.v1beta2.ResponseDeliverTx.prototype.toObject>;
            } = {};
            if (this.check_tx != null) {
                data.check_tx = this.check_tx.toObject();
            }
            if (this.deliver_tx != null) {
                data.deliver_tx = this.deliver_tx.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_check_tx)
                writer.writeMessage(1, this.check_tx, () => this.check_tx.serialize(writer));
            if (this.has_deliver_tx)
                writer.writeMessage(2, this.deliver_tx, () => this.deliver_tx.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ResponseBroadcastTx {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ResponseBroadcastTx();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.check_tx, () => message.check_tx = dependency_2.cometbft.abci.v1beta2.ResponseCheckTx.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.deliver_tx, () => message.deliver_tx = dependency_2.cometbft.abci.v1beta2.ResponseDeliverTx.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ResponseBroadcastTx {
            return ResponseBroadcastTx.deserialize(bytes);
        }
    }
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    interface GrpcStreamServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
        (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
    }
    interface GrpWritableServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
    }
    interface GrpcChunkServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
        (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
    }
    interface GrpcPromiseServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): Promise<R>;
        (message: P, options?: grpc_1.CallOptions): Promise<R>;
    }
    export abstract class UnimplementedBroadcastAPIService {
        static definition = {
            Ping: {
                path: "/cometbft.rpc.grpc.v1beta2.BroadcastAPI/Ping",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.cometbft.rpc.grpc.v1beta1.RequestPing) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.cometbft.rpc.grpc.v1beta1.RequestPing.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.cometbft.rpc.grpc.v1beta1.ResponsePing) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.cometbft.rpc.grpc.v1beta1.ResponsePing.deserialize(new Uint8Array(bytes))
            },
            BroadcastTx: {
                path: "/cometbft.rpc.grpc.v1beta2.BroadcastAPI/BroadcastTx",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.cometbft.rpc.grpc.v1beta1.RequestBroadcastTx) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.cometbft.rpc.grpc.v1beta1.RequestBroadcastTx.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: ResponseBroadcastTx) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => ResponseBroadcastTx.deserialize(new Uint8Array(bytes))
            }
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract Ping(call: grpc_1.ServerUnaryCall<dependency_1.cometbft.rpc.grpc.v1beta1.RequestPing, dependency_1.cometbft.rpc.grpc.v1beta1.ResponsePing>, callback: grpc_1.sendUnaryData<dependency_1.cometbft.rpc.grpc.v1beta1.ResponsePing>): void;
        abstract BroadcastTx(call: grpc_1.ServerUnaryCall<dependency_1.cometbft.rpc.grpc.v1beta1.RequestBroadcastTx, ResponseBroadcastTx>, callback: grpc_1.sendUnaryData<ResponseBroadcastTx>): void;
    }
    export class BroadcastAPIClient extends grpc_1.makeGenericClientConstructor(UnimplementedBroadcastAPIService.definition, "BroadcastAPI", {}) {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>) {
            super(address, credentials, options);
        }
        Ping: GrpcUnaryServiceInterface<dependency_1.cometbft.rpc.grpc.v1beta1.RequestPing, dependency_1.cometbft.rpc.grpc.v1beta1.ResponsePing> = (message: dependency_1.cometbft.rpc.grpc.v1beta1.RequestPing, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.cometbft.rpc.grpc.v1beta1.ResponsePing>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.cometbft.rpc.grpc.v1beta1.ResponsePing>, callback?: grpc_1.requestCallback<dependency_1.cometbft.rpc.grpc.v1beta1.ResponsePing>): grpc_1.ClientUnaryCall => {
            return super.Ping(message, metadata, options, callback);
        };
        BroadcastTx: GrpcUnaryServiceInterface<dependency_1.cometbft.rpc.grpc.v1beta1.RequestBroadcastTx, ResponseBroadcastTx> = (message: dependency_1.cometbft.rpc.grpc.v1beta1.RequestBroadcastTx, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<ResponseBroadcastTx>, options?: grpc_1.CallOptions | grpc_1.requestCallback<ResponseBroadcastTx>, callback?: grpc_1.requestCallback<ResponseBroadcastTx>): grpc_1.ClientUnaryCall => {
            return super.BroadcastTx(message, metadata, options, callback);
        };
    }
}
