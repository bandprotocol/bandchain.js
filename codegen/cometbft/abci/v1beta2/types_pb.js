// source: cometbft/abci/v1beta2/types.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var gogoproto_gogo_pb = require('../../../gogoproto/gogo_pb.js');
goog.object.extend(proto, gogoproto_gogo_pb);
var cometbft_abci_v1beta1_types_pb = require('../../../cometbft/abci/v1beta1/types_pb.js');
goog.object.extend(proto, cometbft_abci_v1beta1_types_pb);
var cometbft_types_v1beta1_types_pb = require('../../../cometbft/types/v1beta1/types_pb.js');
goog.object.extend(proto, cometbft_types_v1beta1_types_pb);
var cometbft_types_v1beta2_params_pb = require('../../../cometbft/types/v1beta2/params_pb.js');
goog.object.extend(proto, cometbft_types_v1beta2_params_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.cometbft.abci.v1beta2.CommitInfo', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta2.Event', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta2.EventAttribute', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta2.ExtendedCommitInfo', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta2.ExtendedVoteInfo', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta2.Misbehavior', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta2.MisbehaviorType', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta2.Request', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta2.Request.ValueCase', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta2.RequestBeginBlock', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta2.RequestInfo', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta2.RequestInitChain', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta2.RequestPrepareProposal', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta2.RequestProcessProposal', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta2.Response', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta2.Response.ValueCase', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta2.ResponseBeginBlock', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta2.ResponseCheckTx', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta2.ResponseDeliverTx', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta2.ResponseEndBlock', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta2.ResponseInitChain', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta2.ResponsePrepareProposal', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta2.ResponseProcessProposal', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta2.ResponseProcessProposal.ProposalStatus', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta2.Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.cometbft.abci.v1beta2.Request.oneofGroups_);
};
goog.inherits(proto.cometbft.abci.v1beta2.Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta2.Request.displayName = 'proto.cometbft.abci.v1beta2.Request';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta2.RequestInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cometbft.abci.v1beta2.RequestInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta2.RequestInfo.displayName = 'proto.cometbft.abci.v1beta2.RequestInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta2.RequestInitChain = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cometbft.abci.v1beta2.RequestInitChain.repeatedFields_, null);
};
goog.inherits(proto.cometbft.abci.v1beta2.RequestInitChain, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta2.RequestInitChain.displayName = 'proto.cometbft.abci.v1beta2.RequestInitChain';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta2.RequestBeginBlock = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cometbft.abci.v1beta2.RequestBeginBlock.repeatedFields_, null);
};
goog.inherits(proto.cometbft.abci.v1beta2.RequestBeginBlock, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta2.RequestBeginBlock.displayName = 'proto.cometbft.abci.v1beta2.RequestBeginBlock';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta2.RequestPrepareProposal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cometbft.abci.v1beta2.RequestPrepareProposal.repeatedFields_, null);
};
goog.inherits(proto.cometbft.abci.v1beta2.RequestPrepareProposal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta2.RequestPrepareProposal.displayName = 'proto.cometbft.abci.v1beta2.RequestPrepareProposal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta2.RequestProcessProposal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cometbft.abci.v1beta2.RequestProcessProposal.repeatedFields_, null);
};
goog.inherits(proto.cometbft.abci.v1beta2.RequestProcessProposal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta2.RequestProcessProposal.displayName = 'proto.cometbft.abci.v1beta2.RequestProcessProposal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta2.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.cometbft.abci.v1beta2.Response.oneofGroups_);
};
goog.inherits(proto.cometbft.abci.v1beta2.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta2.Response.displayName = 'proto.cometbft.abci.v1beta2.Response';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta2.ResponseInitChain = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cometbft.abci.v1beta2.ResponseInitChain.repeatedFields_, null);
};
goog.inherits(proto.cometbft.abci.v1beta2.ResponseInitChain, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta2.ResponseInitChain.displayName = 'proto.cometbft.abci.v1beta2.ResponseInitChain';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta2.ResponseBeginBlock = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cometbft.abci.v1beta2.ResponseBeginBlock.repeatedFields_, null);
};
goog.inherits(proto.cometbft.abci.v1beta2.ResponseBeginBlock, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta2.ResponseBeginBlock.displayName = 'proto.cometbft.abci.v1beta2.ResponseBeginBlock';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta2.ResponseCheckTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cometbft.abci.v1beta2.ResponseCheckTx.repeatedFields_, null);
};
goog.inherits(proto.cometbft.abci.v1beta2.ResponseCheckTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta2.ResponseCheckTx.displayName = 'proto.cometbft.abci.v1beta2.ResponseCheckTx';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta2.ResponseDeliverTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cometbft.abci.v1beta2.ResponseDeliverTx.repeatedFields_, null);
};
goog.inherits(proto.cometbft.abci.v1beta2.ResponseDeliverTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta2.ResponseDeliverTx.displayName = 'proto.cometbft.abci.v1beta2.ResponseDeliverTx';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta2.ResponseEndBlock = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cometbft.abci.v1beta2.ResponseEndBlock.repeatedFields_, null);
};
goog.inherits(proto.cometbft.abci.v1beta2.ResponseEndBlock, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta2.ResponseEndBlock.displayName = 'proto.cometbft.abci.v1beta2.ResponseEndBlock';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta2.ResponsePrepareProposal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cometbft.abci.v1beta2.ResponsePrepareProposal.repeatedFields_, null);
};
goog.inherits(proto.cometbft.abci.v1beta2.ResponsePrepareProposal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta2.ResponsePrepareProposal.displayName = 'proto.cometbft.abci.v1beta2.ResponsePrepareProposal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta2.ResponseProcessProposal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cometbft.abci.v1beta2.ResponseProcessProposal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta2.ResponseProcessProposal.displayName = 'proto.cometbft.abci.v1beta2.ResponseProcessProposal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta2.CommitInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cometbft.abci.v1beta2.CommitInfo.repeatedFields_, null);
};
goog.inherits(proto.cometbft.abci.v1beta2.CommitInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta2.CommitInfo.displayName = 'proto.cometbft.abci.v1beta2.CommitInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta2.ExtendedCommitInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cometbft.abci.v1beta2.ExtendedCommitInfo.repeatedFields_, null);
};
goog.inherits(proto.cometbft.abci.v1beta2.ExtendedCommitInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta2.ExtendedCommitInfo.displayName = 'proto.cometbft.abci.v1beta2.ExtendedCommitInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta2.Event = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cometbft.abci.v1beta2.Event.repeatedFields_, null);
};
goog.inherits(proto.cometbft.abci.v1beta2.Event, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta2.Event.displayName = 'proto.cometbft.abci.v1beta2.Event';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta2.EventAttribute = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cometbft.abci.v1beta2.EventAttribute, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta2.EventAttribute.displayName = 'proto.cometbft.abci.v1beta2.EventAttribute';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta2.ExtendedVoteInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cometbft.abci.v1beta2.ExtendedVoteInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta2.ExtendedVoteInfo.displayName = 'proto.cometbft.abci.v1beta2.ExtendedVoteInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta2.Misbehavior = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cometbft.abci.v1beta2.Misbehavior, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta2.Misbehavior.displayName = 'proto.cometbft.abci.v1beta2.Misbehavior';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.cometbft.abci.v1beta2.Request.oneofGroups_ = [[1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17]];

/**
 * @enum {number}
 */
proto.cometbft.abci.v1beta2.Request.ValueCase = {
  VALUE_NOT_SET: 0,
  ECHO: 1,
  FLUSH: 2,
  INFO: 3,
  INIT_CHAIN: 5,
  QUERY: 6,
  BEGIN_BLOCK: 7,
  CHECK_TX: 8,
  DELIVER_TX: 9,
  END_BLOCK: 10,
  COMMIT: 11,
  LIST_SNAPSHOTS: 12,
  OFFER_SNAPSHOT: 13,
  LOAD_SNAPSHOT_CHUNK: 14,
  APPLY_SNAPSHOT_CHUNK: 15,
  PREPARE_PROPOSAL: 16,
  PROCESS_PROPOSAL: 17
};

/**
 * @return {proto.cometbft.abci.v1beta2.Request.ValueCase}
 */
proto.cometbft.abci.v1beta2.Request.prototype.getValueCase = function() {
  return /** @type {proto.cometbft.abci.v1beta2.Request.ValueCase} */(jspb.Message.computeOneofCase(this, proto.cometbft.abci.v1beta2.Request.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta2.Request.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta2.Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta2.Request} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.Request.toObject = function(includeInstance, msg) {
  var f, obj = {
    echo: (f = msg.getEcho()) && cometbft_abci_v1beta1_types_pb.RequestEcho.toObject(includeInstance, f),
    flush: (f = msg.getFlush()) && cometbft_abci_v1beta1_types_pb.RequestFlush.toObject(includeInstance, f),
    info: (f = msg.getInfo()) && proto.cometbft.abci.v1beta2.RequestInfo.toObject(includeInstance, f),
    initChain: (f = msg.getInitChain()) && proto.cometbft.abci.v1beta2.RequestInitChain.toObject(includeInstance, f),
    query: (f = msg.getQuery()) && cometbft_abci_v1beta1_types_pb.RequestQuery.toObject(includeInstance, f),
    beginBlock: (f = msg.getBeginBlock()) && proto.cometbft.abci.v1beta2.RequestBeginBlock.toObject(includeInstance, f),
    checkTx: (f = msg.getCheckTx()) && cometbft_abci_v1beta1_types_pb.RequestCheckTx.toObject(includeInstance, f),
    deliverTx: (f = msg.getDeliverTx()) && cometbft_abci_v1beta1_types_pb.RequestDeliverTx.toObject(includeInstance, f),
    endBlock: (f = msg.getEndBlock()) && cometbft_abci_v1beta1_types_pb.RequestEndBlock.toObject(includeInstance, f),
    commit: (f = msg.getCommit()) && cometbft_abci_v1beta1_types_pb.RequestCommit.toObject(includeInstance, f),
    listSnapshots: (f = msg.getListSnapshots()) && cometbft_abci_v1beta1_types_pb.RequestListSnapshots.toObject(includeInstance, f),
    offerSnapshot: (f = msg.getOfferSnapshot()) && cometbft_abci_v1beta1_types_pb.RequestOfferSnapshot.toObject(includeInstance, f),
    loadSnapshotChunk: (f = msg.getLoadSnapshotChunk()) && cometbft_abci_v1beta1_types_pb.RequestLoadSnapshotChunk.toObject(includeInstance, f),
    applySnapshotChunk: (f = msg.getApplySnapshotChunk()) && cometbft_abci_v1beta1_types_pb.RequestApplySnapshotChunk.toObject(includeInstance, f),
    prepareProposal: (f = msg.getPrepareProposal()) && proto.cometbft.abci.v1beta2.RequestPrepareProposal.toObject(includeInstance, f),
    processProposal: (f = msg.getProcessProposal()) && proto.cometbft.abci.v1beta2.RequestProcessProposal.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta2.Request}
 */
proto.cometbft.abci.v1beta2.Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta2.Request;
  return proto.cometbft.abci.v1beta2.Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta2.Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta2.Request}
 */
proto.cometbft.abci.v1beta2.Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cometbft_abci_v1beta1_types_pb.RequestEcho;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.RequestEcho.deserializeBinaryFromReader);
      msg.setEcho(value);
      break;
    case 2:
      var value = new cometbft_abci_v1beta1_types_pb.RequestFlush;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.RequestFlush.deserializeBinaryFromReader);
      msg.setFlush(value);
      break;
    case 3:
      var value = new proto.cometbft.abci.v1beta2.RequestInfo;
      reader.readMessage(value,proto.cometbft.abci.v1beta2.RequestInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    case 5:
      var value = new proto.cometbft.abci.v1beta2.RequestInitChain;
      reader.readMessage(value,proto.cometbft.abci.v1beta2.RequestInitChain.deserializeBinaryFromReader);
      msg.setInitChain(value);
      break;
    case 6:
      var value = new cometbft_abci_v1beta1_types_pb.RequestQuery;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.RequestQuery.deserializeBinaryFromReader);
      msg.setQuery(value);
      break;
    case 7:
      var value = new proto.cometbft.abci.v1beta2.RequestBeginBlock;
      reader.readMessage(value,proto.cometbft.abci.v1beta2.RequestBeginBlock.deserializeBinaryFromReader);
      msg.setBeginBlock(value);
      break;
    case 8:
      var value = new cometbft_abci_v1beta1_types_pb.RequestCheckTx;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.RequestCheckTx.deserializeBinaryFromReader);
      msg.setCheckTx(value);
      break;
    case 9:
      var value = new cometbft_abci_v1beta1_types_pb.RequestDeliverTx;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.RequestDeliverTx.deserializeBinaryFromReader);
      msg.setDeliverTx(value);
      break;
    case 10:
      var value = new cometbft_abci_v1beta1_types_pb.RequestEndBlock;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.RequestEndBlock.deserializeBinaryFromReader);
      msg.setEndBlock(value);
      break;
    case 11:
      var value = new cometbft_abci_v1beta1_types_pb.RequestCommit;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.RequestCommit.deserializeBinaryFromReader);
      msg.setCommit(value);
      break;
    case 12:
      var value = new cometbft_abci_v1beta1_types_pb.RequestListSnapshots;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.RequestListSnapshots.deserializeBinaryFromReader);
      msg.setListSnapshots(value);
      break;
    case 13:
      var value = new cometbft_abci_v1beta1_types_pb.RequestOfferSnapshot;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.RequestOfferSnapshot.deserializeBinaryFromReader);
      msg.setOfferSnapshot(value);
      break;
    case 14:
      var value = new cometbft_abci_v1beta1_types_pb.RequestLoadSnapshotChunk;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.RequestLoadSnapshotChunk.deserializeBinaryFromReader);
      msg.setLoadSnapshotChunk(value);
      break;
    case 15:
      var value = new cometbft_abci_v1beta1_types_pb.RequestApplySnapshotChunk;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.RequestApplySnapshotChunk.deserializeBinaryFromReader);
      msg.setApplySnapshotChunk(value);
      break;
    case 16:
      var value = new proto.cometbft.abci.v1beta2.RequestPrepareProposal;
      reader.readMessage(value,proto.cometbft.abci.v1beta2.RequestPrepareProposal.deserializeBinaryFromReader);
      msg.setPrepareProposal(value);
      break;
    case 17:
      var value = new proto.cometbft.abci.v1beta2.RequestProcessProposal;
      reader.readMessage(value,proto.cometbft.abci.v1beta2.RequestProcessProposal.deserializeBinaryFromReader);
      msg.setProcessProposal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta2.Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta2.Request.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta2.Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.Request.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEcho();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cometbft_abci_v1beta1_types_pb.RequestEcho.serializeBinaryToWriter
    );
  }
  f = message.getFlush();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cometbft_abci_v1beta1_types_pb.RequestFlush.serializeBinaryToWriter
    );
  }
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cometbft.abci.v1beta2.RequestInfo.serializeBinaryToWriter
    );
  }
  f = message.getInitChain();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.cometbft.abci.v1beta2.RequestInitChain.serializeBinaryToWriter
    );
  }
  f = message.getQuery();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      cometbft_abci_v1beta1_types_pb.RequestQuery.serializeBinaryToWriter
    );
  }
  f = message.getBeginBlock();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.cometbft.abci.v1beta2.RequestBeginBlock.serializeBinaryToWriter
    );
  }
  f = message.getCheckTx();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      cometbft_abci_v1beta1_types_pb.RequestCheckTx.serializeBinaryToWriter
    );
  }
  f = message.getDeliverTx();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      cometbft_abci_v1beta1_types_pb.RequestDeliverTx.serializeBinaryToWriter
    );
  }
  f = message.getEndBlock();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      cometbft_abci_v1beta1_types_pb.RequestEndBlock.serializeBinaryToWriter
    );
  }
  f = message.getCommit();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      cometbft_abci_v1beta1_types_pb.RequestCommit.serializeBinaryToWriter
    );
  }
  f = message.getListSnapshots();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      cometbft_abci_v1beta1_types_pb.RequestListSnapshots.serializeBinaryToWriter
    );
  }
  f = message.getOfferSnapshot();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      cometbft_abci_v1beta1_types_pb.RequestOfferSnapshot.serializeBinaryToWriter
    );
  }
  f = message.getLoadSnapshotChunk();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      cometbft_abci_v1beta1_types_pb.RequestLoadSnapshotChunk.serializeBinaryToWriter
    );
  }
  f = message.getApplySnapshotChunk();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      cometbft_abci_v1beta1_types_pb.RequestApplySnapshotChunk.serializeBinaryToWriter
    );
  }
  f = message.getPrepareProposal();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.cometbft.abci.v1beta2.RequestPrepareProposal.serializeBinaryToWriter
    );
  }
  f = message.getProcessProposal();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.cometbft.abci.v1beta2.RequestProcessProposal.serializeBinaryToWriter
    );
  }
};


/**
 * optional cometbft.abci.v1beta1.RequestEcho echo = 1;
 * @return {?proto.cometbft.abci.v1beta1.RequestEcho}
 */
proto.cometbft.abci.v1beta2.Request.prototype.getEcho = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.RequestEcho} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.RequestEcho, 1));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.RequestEcho|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.Request} returns this
*/
proto.cometbft.abci.v1beta2.Request.prototype.setEcho = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.cometbft.abci.v1beta2.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.Request} returns this
 */
proto.cometbft.abci.v1beta2.Request.prototype.clearEcho = function() {
  return this.setEcho(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.Request.prototype.hasEcho = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional cometbft.abci.v1beta1.RequestFlush flush = 2;
 * @return {?proto.cometbft.abci.v1beta1.RequestFlush}
 */
proto.cometbft.abci.v1beta2.Request.prototype.getFlush = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.RequestFlush} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.RequestFlush, 2));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.RequestFlush|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.Request} returns this
*/
proto.cometbft.abci.v1beta2.Request.prototype.setFlush = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.cometbft.abci.v1beta2.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.Request} returns this
 */
proto.cometbft.abci.v1beta2.Request.prototype.clearFlush = function() {
  return this.setFlush(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.Request.prototype.hasFlush = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RequestInfo info = 3;
 * @return {?proto.cometbft.abci.v1beta2.RequestInfo}
 */
proto.cometbft.abci.v1beta2.Request.prototype.getInfo = function() {
  return /** @type{?proto.cometbft.abci.v1beta2.RequestInfo} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.abci.v1beta2.RequestInfo, 3));
};


/**
 * @param {?proto.cometbft.abci.v1beta2.RequestInfo|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.Request} returns this
*/
proto.cometbft.abci.v1beta2.Request.prototype.setInfo = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.cometbft.abci.v1beta2.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.Request} returns this
 */
proto.cometbft.abci.v1beta2.Request.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.Request.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional RequestInitChain init_chain = 5;
 * @return {?proto.cometbft.abci.v1beta2.RequestInitChain}
 */
proto.cometbft.abci.v1beta2.Request.prototype.getInitChain = function() {
  return /** @type{?proto.cometbft.abci.v1beta2.RequestInitChain} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.abci.v1beta2.RequestInitChain, 5));
};


/**
 * @param {?proto.cometbft.abci.v1beta2.RequestInitChain|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.Request} returns this
*/
proto.cometbft.abci.v1beta2.Request.prototype.setInitChain = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.cometbft.abci.v1beta2.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.Request} returns this
 */
proto.cometbft.abci.v1beta2.Request.prototype.clearInitChain = function() {
  return this.setInitChain(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.Request.prototype.hasInitChain = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional cometbft.abci.v1beta1.RequestQuery query = 6;
 * @return {?proto.cometbft.abci.v1beta1.RequestQuery}
 */
proto.cometbft.abci.v1beta2.Request.prototype.getQuery = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.RequestQuery} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.RequestQuery, 6));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.RequestQuery|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.Request} returns this
*/
proto.cometbft.abci.v1beta2.Request.prototype.setQuery = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.cometbft.abci.v1beta2.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.Request} returns this
 */
proto.cometbft.abci.v1beta2.Request.prototype.clearQuery = function() {
  return this.setQuery(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.Request.prototype.hasQuery = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional RequestBeginBlock begin_block = 7;
 * @return {?proto.cometbft.abci.v1beta2.RequestBeginBlock}
 */
proto.cometbft.abci.v1beta2.Request.prototype.getBeginBlock = function() {
  return /** @type{?proto.cometbft.abci.v1beta2.RequestBeginBlock} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.abci.v1beta2.RequestBeginBlock, 7));
};


/**
 * @param {?proto.cometbft.abci.v1beta2.RequestBeginBlock|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.Request} returns this
*/
proto.cometbft.abci.v1beta2.Request.prototype.setBeginBlock = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.cometbft.abci.v1beta2.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.Request} returns this
 */
proto.cometbft.abci.v1beta2.Request.prototype.clearBeginBlock = function() {
  return this.setBeginBlock(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.Request.prototype.hasBeginBlock = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional cometbft.abci.v1beta1.RequestCheckTx check_tx = 8;
 * @return {?proto.cometbft.abci.v1beta1.RequestCheckTx}
 */
proto.cometbft.abci.v1beta2.Request.prototype.getCheckTx = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.RequestCheckTx} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.RequestCheckTx, 8));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.RequestCheckTx|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.Request} returns this
*/
proto.cometbft.abci.v1beta2.Request.prototype.setCheckTx = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.cometbft.abci.v1beta2.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.Request} returns this
 */
proto.cometbft.abci.v1beta2.Request.prototype.clearCheckTx = function() {
  return this.setCheckTx(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.Request.prototype.hasCheckTx = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional cometbft.abci.v1beta1.RequestDeliverTx deliver_tx = 9;
 * @return {?proto.cometbft.abci.v1beta1.RequestDeliverTx}
 */
proto.cometbft.abci.v1beta2.Request.prototype.getDeliverTx = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.RequestDeliverTx} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.RequestDeliverTx, 9));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.RequestDeliverTx|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.Request} returns this
*/
proto.cometbft.abci.v1beta2.Request.prototype.setDeliverTx = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.cometbft.abci.v1beta2.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.Request} returns this
 */
proto.cometbft.abci.v1beta2.Request.prototype.clearDeliverTx = function() {
  return this.setDeliverTx(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.Request.prototype.hasDeliverTx = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional cometbft.abci.v1beta1.RequestEndBlock end_block = 10;
 * @return {?proto.cometbft.abci.v1beta1.RequestEndBlock}
 */
proto.cometbft.abci.v1beta2.Request.prototype.getEndBlock = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.RequestEndBlock} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.RequestEndBlock, 10));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.RequestEndBlock|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.Request} returns this
*/
proto.cometbft.abci.v1beta2.Request.prototype.setEndBlock = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.cometbft.abci.v1beta2.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.Request} returns this
 */
proto.cometbft.abci.v1beta2.Request.prototype.clearEndBlock = function() {
  return this.setEndBlock(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.Request.prototype.hasEndBlock = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional cometbft.abci.v1beta1.RequestCommit commit = 11;
 * @return {?proto.cometbft.abci.v1beta1.RequestCommit}
 */
proto.cometbft.abci.v1beta2.Request.prototype.getCommit = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.RequestCommit} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.RequestCommit, 11));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.RequestCommit|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.Request} returns this
*/
proto.cometbft.abci.v1beta2.Request.prototype.setCommit = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.cometbft.abci.v1beta2.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.Request} returns this
 */
proto.cometbft.abci.v1beta2.Request.prototype.clearCommit = function() {
  return this.setCommit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.Request.prototype.hasCommit = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional cometbft.abci.v1beta1.RequestListSnapshots list_snapshots = 12;
 * @return {?proto.cometbft.abci.v1beta1.RequestListSnapshots}
 */
proto.cometbft.abci.v1beta2.Request.prototype.getListSnapshots = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.RequestListSnapshots} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.RequestListSnapshots, 12));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.RequestListSnapshots|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.Request} returns this
*/
proto.cometbft.abci.v1beta2.Request.prototype.setListSnapshots = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.cometbft.abci.v1beta2.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.Request} returns this
 */
proto.cometbft.abci.v1beta2.Request.prototype.clearListSnapshots = function() {
  return this.setListSnapshots(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.Request.prototype.hasListSnapshots = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional cometbft.abci.v1beta1.RequestOfferSnapshot offer_snapshot = 13;
 * @return {?proto.cometbft.abci.v1beta1.RequestOfferSnapshot}
 */
proto.cometbft.abci.v1beta2.Request.prototype.getOfferSnapshot = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.RequestOfferSnapshot} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.RequestOfferSnapshot, 13));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.RequestOfferSnapshot|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.Request} returns this
*/
proto.cometbft.abci.v1beta2.Request.prototype.setOfferSnapshot = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.cometbft.abci.v1beta2.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.Request} returns this
 */
proto.cometbft.abci.v1beta2.Request.prototype.clearOfferSnapshot = function() {
  return this.setOfferSnapshot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.Request.prototype.hasOfferSnapshot = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional cometbft.abci.v1beta1.RequestLoadSnapshotChunk load_snapshot_chunk = 14;
 * @return {?proto.cometbft.abci.v1beta1.RequestLoadSnapshotChunk}
 */
proto.cometbft.abci.v1beta2.Request.prototype.getLoadSnapshotChunk = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.RequestLoadSnapshotChunk} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.RequestLoadSnapshotChunk, 14));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.RequestLoadSnapshotChunk|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.Request} returns this
*/
proto.cometbft.abci.v1beta2.Request.prototype.setLoadSnapshotChunk = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.cometbft.abci.v1beta2.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.Request} returns this
 */
proto.cometbft.abci.v1beta2.Request.prototype.clearLoadSnapshotChunk = function() {
  return this.setLoadSnapshotChunk(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.Request.prototype.hasLoadSnapshotChunk = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional cometbft.abci.v1beta1.RequestApplySnapshotChunk apply_snapshot_chunk = 15;
 * @return {?proto.cometbft.abci.v1beta1.RequestApplySnapshotChunk}
 */
proto.cometbft.abci.v1beta2.Request.prototype.getApplySnapshotChunk = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.RequestApplySnapshotChunk} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.RequestApplySnapshotChunk, 15));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.RequestApplySnapshotChunk|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.Request} returns this
*/
proto.cometbft.abci.v1beta2.Request.prototype.setApplySnapshotChunk = function(value) {
  return jspb.Message.setOneofWrapperField(this, 15, proto.cometbft.abci.v1beta2.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.Request} returns this
 */
proto.cometbft.abci.v1beta2.Request.prototype.clearApplySnapshotChunk = function() {
  return this.setApplySnapshotChunk(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.Request.prototype.hasApplySnapshotChunk = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional RequestPrepareProposal prepare_proposal = 16;
 * @return {?proto.cometbft.abci.v1beta2.RequestPrepareProposal}
 */
proto.cometbft.abci.v1beta2.Request.prototype.getPrepareProposal = function() {
  return /** @type{?proto.cometbft.abci.v1beta2.RequestPrepareProposal} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.abci.v1beta2.RequestPrepareProposal, 16));
};


/**
 * @param {?proto.cometbft.abci.v1beta2.RequestPrepareProposal|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.Request} returns this
*/
proto.cometbft.abci.v1beta2.Request.prototype.setPrepareProposal = function(value) {
  return jspb.Message.setOneofWrapperField(this, 16, proto.cometbft.abci.v1beta2.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.Request} returns this
 */
proto.cometbft.abci.v1beta2.Request.prototype.clearPrepareProposal = function() {
  return this.setPrepareProposal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.Request.prototype.hasPrepareProposal = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional RequestProcessProposal process_proposal = 17;
 * @return {?proto.cometbft.abci.v1beta2.RequestProcessProposal}
 */
proto.cometbft.abci.v1beta2.Request.prototype.getProcessProposal = function() {
  return /** @type{?proto.cometbft.abci.v1beta2.RequestProcessProposal} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.abci.v1beta2.RequestProcessProposal, 17));
};


/**
 * @param {?proto.cometbft.abci.v1beta2.RequestProcessProposal|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.Request} returns this
*/
proto.cometbft.abci.v1beta2.Request.prototype.setProcessProposal = function(value) {
  return jspb.Message.setOneofWrapperField(this, 17, proto.cometbft.abci.v1beta2.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.Request} returns this
 */
proto.cometbft.abci.v1beta2.Request.prototype.clearProcessProposal = function() {
  return this.setProcessProposal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.Request.prototype.hasProcessProposal = function() {
  return jspb.Message.getField(this, 17) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta2.RequestInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta2.RequestInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta2.RequestInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.RequestInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: jspb.Message.getFieldWithDefault(msg, 1, ""),
    blockVersion: jspb.Message.getFieldWithDefault(msg, 2, 0),
    p2pVersion: jspb.Message.getFieldWithDefault(msg, 3, 0),
    abciVersion: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta2.RequestInfo}
 */
proto.cometbft.abci.v1beta2.RequestInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta2.RequestInfo;
  return proto.cometbft.abci.v1beta2.RequestInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta2.RequestInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta2.RequestInfo}
 */
proto.cometbft.abci.v1beta2.RequestInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBlockVersion(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setP2pVersion(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAbciVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta2.RequestInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta2.RequestInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta2.RequestInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.RequestInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBlockVersion();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getP2pVersion();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getAbciVersion();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string version = 1;
 * @return {string}
 */
proto.cometbft.abci.v1beta2.RequestInfo.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cometbft.abci.v1beta2.RequestInfo} returns this
 */
proto.cometbft.abci.v1beta2.RequestInfo.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 block_version = 2;
 * @return {number}
 */
proto.cometbft.abci.v1beta2.RequestInfo.prototype.getBlockVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.abci.v1beta2.RequestInfo} returns this
 */
proto.cometbft.abci.v1beta2.RequestInfo.prototype.setBlockVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 p2p_version = 3;
 * @return {number}
 */
proto.cometbft.abci.v1beta2.RequestInfo.prototype.getP2pVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.abci.v1beta2.RequestInfo} returns this
 */
proto.cometbft.abci.v1beta2.RequestInfo.prototype.setP2pVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string abci_version = 4;
 * @return {string}
 */
proto.cometbft.abci.v1beta2.RequestInfo.prototype.getAbciVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cometbft.abci.v1beta2.RequestInfo} returns this
 */
proto.cometbft.abci.v1beta2.RequestInfo.prototype.setAbciVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cometbft.abci.v1beta2.RequestInitChain.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta2.RequestInitChain.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta2.RequestInitChain.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta2.RequestInitChain} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.RequestInitChain.toObject = function(includeInstance, msg) {
  var f, obj = {
    time: (f = msg.getTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    chainId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    consensusParams: (f = msg.getConsensusParams()) && cometbft_types_v1beta2_params_pb.ConsensusParams.toObject(includeInstance, f),
    validatorsList: jspb.Message.toObjectList(msg.getValidatorsList(),
    cometbft_abci_v1beta1_types_pb.ValidatorUpdate.toObject, includeInstance),
    appStateBytes: msg.getAppStateBytes_asB64(),
    initialHeight: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta2.RequestInitChain}
 */
proto.cometbft.abci.v1beta2.RequestInitChain.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta2.RequestInitChain;
  return proto.cometbft.abci.v1beta2.RequestInitChain.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta2.RequestInitChain} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta2.RequestInitChain}
 */
proto.cometbft.abci.v1beta2.RequestInitChain.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChainId(value);
      break;
    case 3:
      var value = new cometbft_types_v1beta2_params_pb.ConsensusParams;
      reader.readMessage(value,cometbft_types_v1beta2_params_pb.ConsensusParams.deserializeBinaryFromReader);
      msg.setConsensusParams(value);
      break;
    case 4:
      var value = new cometbft_abci_v1beta1_types_pb.ValidatorUpdate;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.ValidatorUpdate.deserializeBinaryFromReader);
      msg.addValidators(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAppStateBytes(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInitialHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta2.RequestInitChain.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta2.RequestInitChain.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta2.RequestInitChain} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.RequestInitChain.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getChainId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getConsensusParams();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cometbft_types_v1beta2_params_pb.ConsensusParams.serializeBinaryToWriter
    );
  }
  f = message.getValidatorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      cometbft_abci_v1beta1_types_pb.ValidatorUpdate.serializeBinaryToWriter
    );
  }
  f = message.getAppStateBytes_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getInitialHeight();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
};


/**
 * optional google.protobuf.Timestamp time = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.cometbft.abci.v1beta2.RequestInitChain.prototype.getTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.RequestInitChain} returns this
*/
proto.cometbft.abci.v1beta2.RequestInitChain.prototype.setTime = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.RequestInitChain} returns this
 */
proto.cometbft.abci.v1beta2.RequestInitChain.prototype.clearTime = function() {
  return this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.RequestInitChain.prototype.hasTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string chain_id = 2;
 * @return {string}
 */
proto.cometbft.abci.v1beta2.RequestInitChain.prototype.getChainId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cometbft.abci.v1beta2.RequestInitChain} returns this
 */
proto.cometbft.abci.v1beta2.RequestInitChain.prototype.setChainId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional cometbft.types.v1beta2.ConsensusParams consensus_params = 3;
 * @return {?proto.cometbft.types.v1beta2.ConsensusParams}
 */
proto.cometbft.abci.v1beta2.RequestInitChain.prototype.getConsensusParams = function() {
  return /** @type{?proto.cometbft.types.v1beta2.ConsensusParams} */ (
    jspb.Message.getWrapperField(this, cometbft_types_v1beta2_params_pb.ConsensusParams, 3));
};


/**
 * @param {?proto.cometbft.types.v1beta2.ConsensusParams|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.RequestInitChain} returns this
*/
proto.cometbft.abci.v1beta2.RequestInitChain.prototype.setConsensusParams = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.RequestInitChain} returns this
 */
proto.cometbft.abci.v1beta2.RequestInitChain.prototype.clearConsensusParams = function() {
  return this.setConsensusParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.RequestInitChain.prototype.hasConsensusParams = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated cometbft.abci.v1beta1.ValidatorUpdate validators = 4;
 * @return {!Array<!proto.cometbft.abci.v1beta1.ValidatorUpdate>}
 */
proto.cometbft.abci.v1beta2.RequestInitChain.prototype.getValidatorsList = function() {
  return /** @type{!Array<!proto.cometbft.abci.v1beta1.ValidatorUpdate>} */ (
    jspb.Message.getRepeatedWrapperField(this, cometbft_abci_v1beta1_types_pb.ValidatorUpdate, 4));
};


/**
 * @param {!Array<!proto.cometbft.abci.v1beta1.ValidatorUpdate>} value
 * @return {!proto.cometbft.abci.v1beta2.RequestInitChain} returns this
*/
proto.cometbft.abci.v1beta2.RequestInitChain.prototype.setValidatorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.cometbft.abci.v1beta1.ValidatorUpdate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cometbft.abci.v1beta1.ValidatorUpdate}
 */
proto.cometbft.abci.v1beta2.RequestInitChain.prototype.addValidators = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.cometbft.abci.v1beta1.ValidatorUpdate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cometbft.abci.v1beta2.RequestInitChain} returns this
 */
proto.cometbft.abci.v1beta2.RequestInitChain.prototype.clearValidatorsList = function() {
  return this.setValidatorsList([]);
};


/**
 * optional bytes app_state_bytes = 5;
 * @return {!(string|Uint8Array)}
 */
proto.cometbft.abci.v1beta2.RequestInitChain.prototype.getAppStateBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes app_state_bytes = 5;
 * This is a type-conversion wrapper around `getAppStateBytes()`
 * @return {string}
 */
proto.cometbft.abci.v1beta2.RequestInitChain.prototype.getAppStateBytes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAppStateBytes()));
};


/**
 * optional bytes app_state_bytes = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAppStateBytes()`
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta2.RequestInitChain.prototype.getAppStateBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAppStateBytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cometbft.abci.v1beta2.RequestInitChain} returns this
 */
proto.cometbft.abci.v1beta2.RequestInitChain.prototype.setAppStateBytes = function(value) {
  return jspb.Message.setProto3BytesField(this, 5, value);
};


/**
 * optional int64 initial_height = 6;
 * @return {number}
 */
proto.cometbft.abci.v1beta2.RequestInitChain.prototype.getInitialHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.abci.v1beta2.RequestInitChain} returns this
 */
proto.cometbft.abci.v1beta2.RequestInitChain.prototype.setInitialHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cometbft.abci.v1beta2.RequestBeginBlock.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta2.RequestBeginBlock.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta2.RequestBeginBlock.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta2.RequestBeginBlock} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.RequestBeginBlock.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: msg.getHash_asB64(),
    header: (f = msg.getHeader()) && cometbft_types_v1beta1_types_pb.Header.toObject(includeInstance, f),
    lastCommitInfo: (f = msg.getLastCommitInfo()) && proto.cometbft.abci.v1beta2.CommitInfo.toObject(includeInstance, f),
    byzantineValidatorsList: jspb.Message.toObjectList(msg.getByzantineValidatorsList(),
    proto.cometbft.abci.v1beta2.Misbehavior.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta2.RequestBeginBlock}
 */
proto.cometbft.abci.v1beta2.RequestBeginBlock.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta2.RequestBeginBlock;
  return proto.cometbft.abci.v1beta2.RequestBeginBlock.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta2.RequestBeginBlock} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta2.RequestBeginBlock}
 */
proto.cometbft.abci.v1beta2.RequestBeginBlock.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    case 2:
      var value = new cometbft_types_v1beta1_types_pb.Header;
      reader.readMessage(value,cometbft_types_v1beta1_types_pb.Header.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 3:
      var value = new proto.cometbft.abci.v1beta2.CommitInfo;
      reader.readMessage(value,proto.cometbft.abci.v1beta2.CommitInfo.deserializeBinaryFromReader);
      msg.setLastCommitInfo(value);
      break;
    case 4:
      var value = new proto.cometbft.abci.v1beta2.Misbehavior;
      reader.readMessage(value,proto.cometbft.abci.v1beta2.Misbehavior.deserializeBinaryFromReader);
      msg.addByzantineValidators(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta2.RequestBeginBlock.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta2.RequestBeginBlock.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta2.RequestBeginBlock} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.RequestBeginBlock.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cometbft_types_v1beta1_types_pb.Header.serializeBinaryToWriter
    );
  }
  f = message.getLastCommitInfo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cometbft.abci.v1beta2.CommitInfo.serializeBinaryToWriter
    );
  }
  f = message.getByzantineValidatorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.cometbft.abci.v1beta2.Misbehavior.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cometbft.abci.v1beta2.RequestBeginBlock.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes hash = 1;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.cometbft.abci.v1beta2.RequestBeginBlock.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta2.RequestBeginBlock.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cometbft.abci.v1beta2.RequestBeginBlock} returns this
 */
proto.cometbft.abci.v1beta2.RequestBeginBlock.prototype.setHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional cometbft.types.v1beta1.Header header = 2;
 * @return {?proto.cometbft.types.v1beta1.Header}
 */
proto.cometbft.abci.v1beta2.RequestBeginBlock.prototype.getHeader = function() {
  return /** @type{?proto.cometbft.types.v1beta1.Header} */ (
    jspb.Message.getWrapperField(this, cometbft_types_v1beta1_types_pb.Header, 2));
};


/**
 * @param {?proto.cometbft.types.v1beta1.Header|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.RequestBeginBlock} returns this
*/
proto.cometbft.abci.v1beta2.RequestBeginBlock.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.RequestBeginBlock} returns this
 */
proto.cometbft.abci.v1beta2.RequestBeginBlock.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.RequestBeginBlock.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional CommitInfo last_commit_info = 3;
 * @return {?proto.cometbft.abci.v1beta2.CommitInfo}
 */
proto.cometbft.abci.v1beta2.RequestBeginBlock.prototype.getLastCommitInfo = function() {
  return /** @type{?proto.cometbft.abci.v1beta2.CommitInfo} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.abci.v1beta2.CommitInfo, 3));
};


/**
 * @param {?proto.cometbft.abci.v1beta2.CommitInfo|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.RequestBeginBlock} returns this
*/
proto.cometbft.abci.v1beta2.RequestBeginBlock.prototype.setLastCommitInfo = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.RequestBeginBlock} returns this
 */
proto.cometbft.abci.v1beta2.RequestBeginBlock.prototype.clearLastCommitInfo = function() {
  return this.setLastCommitInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.RequestBeginBlock.prototype.hasLastCommitInfo = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Misbehavior byzantine_validators = 4;
 * @return {!Array<!proto.cometbft.abci.v1beta2.Misbehavior>}
 */
proto.cometbft.abci.v1beta2.RequestBeginBlock.prototype.getByzantineValidatorsList = function() {
  return /** @type{!Array<!proto.cometbft.abci.v1beta2.Misbehavior>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cometbft.abci.v1beta2.Misbehavior, 4));
};


/**
 * @param {!Array<!proto.cometbft.abci.v1beta2.Misbehavior>} value
 * @return {!proto.cometbft.abci.v1beta2.RequestBeginBlock} returns this
*/
proto.cometbft.abci.v1beta2.RequestBeginBlock.prototype.setByzantineValidatorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.cometbft.abci.v1beta2.Misbehavior=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cometbft.abci.v1beta2.Misbehavior}
 */
proto.cometbft.abci.v1beta2.RequestBeginBlock.prototype.addByzantineValidators = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.cometbft.abci.v1beta2.Misbehavior, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cometbft.abci.v1beta2.RequestBeginBlock} returns this
 */
proto.cometbft.abci.v1beta2.RequestBeginBlock.prototype.clearByzantineValidatorsList = function() {
  return this.setByzantineValidatorsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cometbft.abci.v1beta2.RequestPrepareProposal.repeatedFields_ = [2,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta2.RequestPrepareProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta2.RequestPrepareProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta2.RequestPrepareProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.RequestPrepareProposal.toObject = function(includeInstance, msg) {
  var f, obj = {
    maxTxBytes: jspb.Message.getFieldWithDefault(msg, 1, 0),
    txsList: msg.getTxsList_asB64(),
    localLastCommit: (f = msg.getLocalLastCommit()) && proto.cometbft.abci.v1beta2.ExtendedCommitInfo.toObject(includeInstance, f),
    misbehaviorList: jspb.Message.toObjectList(msg.getMisbehaviorList(),
    proto.cometbft.abci.v1beta2.Misbehavior.toObject, includeInstance),
    height: jspb.Message.getFieldWithDefault(msg, 5, 0),
    time: (f = msg.getTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    nextValidatorsHash: msg.getNextValidatorsHash_asB64(),
    proposerAddress: msg.getProposerAddress_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta2.RequestPrepareProposal}
 */
proto.cometbft.abci.v1beta2.RequestPrepareProposal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta2.RequestPrepareProposal;
  return proto.cometbft.abci.v1beta2.RequestPrepareProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta2.RequestPrepareProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta2.RequestPrepareProposal}
 */
proto.cometbft.abci.v1beta2.RequestPrepareProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxTxBytes(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addTxs(value);
      break;
    case 3:
      var value = new proto.cometbft.abci.v1beta2.ExtendedCommitInfo;
      reader.readMessage(value,proto.cometbft.abci.v1beta2.ExtendedCommitInfo.deserializeBinaryFromReader);
      msg.setLocalLastCommit(value);
      break;
    case 4:
      var value = new proto.cometbft.abci.v1beta2.Misbehavior;
      reader.readMessage(value,proto.cometbft.abci.v1beta2.Misbehavior.deserializeBinaryFromReader);
      msg.addMisbehavior(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHeight(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setNextValidatorsHash(value);
      break;
    case 8:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setProposerAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta2.RequestPrepareProposal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta2.RequestPrepareProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta2.RequestPrepareProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.RequestPrepareProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMaxTxBytes();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTxsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      2,
      f
    );
  }
  f = message.getLocalLastCommit();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cometbft.abci.v1beta2.ExtendedCommitInfo.serializeBinaryToWriter
    );
  }
  f = message.getMisbehaviorList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.cometbft.abci.v1beta2.Misbehavior.serializeBinaryToWriter
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getNextValidatorsHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      7,
      f
    );
  }
  f = message.getProposerAddress_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      8,
      f
    );
  }
};


/**
 * optional int64 max_tx_bytes = 1;
 * @return {number}
 */
proto.cometbft.abci.v1beta2.RequestPrepareProposal.prototype.getMaxTxBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.abci.v1beta2.RequestPrepareProposal} returns this
 */
proto.cometbft.abci.v1beta2.RequestPrepareProposal.prototype.setMaxTxBytes = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated bytes txs = 2;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.cometbft.abci.v1beta2.RequestPrepareProposal.prototype.getTxsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * repeated bytes txs = 2;
 * This is a type-conversion wrapper around `getTxsList()`
 * @return {!Array<string>}
 */
proto.cometbft.abci.v1beta2.RequestPrepareProposal.prototype.getTxsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getTxsList()));
};


/**
 * repeated bytes txs = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.cometbft.abci.v1beta2.RequestPrepareProposal.prototype.getTxsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getTxsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.cometbft.abci.v1beta2.RequestPrepareProposal} returns this
 */
proto.cometbft.abci.v1beta2.RequestPrepareProposal.prototype.setTxsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.cometbft.abci.v1beta2.RequestPrepareProposal} returns this
 */
proto.cometbft.abci.v1beta2.RequestPrepareProposal.prototype.addTxs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cometbft.abci.v1beta2.RequestPrepareProposal} returns this
 */
proto.cometbft.abci.v1beta2.RequestPrepareProposal.prototype.clearTxsList = function() {
  return this.setTxsList([]);
};


/**
 * optional ExtendedCommitInfo local_last_commit = 3;
 * @return {?proto.cometbft.abci.v1beta2.ExtendedCommitInfo}
 */
proto.cometbft.abci.v1beta2.RequestPrepareProposal.prototype.getLocalLastCommit = function() {
  return /** @type{?proto.cometbft.abci.v1beta2.ExtendedCommitInfo} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.abci.v1beta2.ExtendedCommitInfo, 3));
};


/**
 * @param {?proto.cometbft.abci.v1beta2.ExtendedCommitInfo|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.RequestPrepareProposal} returns this
*/
proto.cometbft.abci.v1beta2.RequestPrepareProposal.prototype.setLocalLastCommit = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.RequestPrepareProposal} returns this
 */
proto.cometbft.abci.v1beta2.RequestPrepareProposal.prototype.clearLocalLastCommit = function() {
  return this.setLocalLastCommit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.RequestPrepareProposal.prototype.hasLocalLastCommit = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Misbehavior misbehavior = 4;
 * @return {!Array<!proto.cometbft.abci.v1beta2.Misbehavior>}
 */
proto.cometbft.abci.v1beta2.RequestPrepareProposal.prototype.getMisbehaviorList = function() {
  return /** @type{!Array<!proto.cometbft.abci.v1beta2.Misbehavior>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cometbft.abci.v1beta2.Misbehavior, 4));
};


/**
 * @param {!Array<!proto.cometbft.abci.v1beta2.Misbehavior>} value
 * @return {!proto.cometbft.abci.v1beta2.RequestPrepareProposal} returns this
*/
proto.cometbft.abci.v1beta2.RequestPrepareProposal.prototype.setMisbehaviorList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.cometbft.abci.v1beta2.Misbehavior=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cometbft.abci.v1beta2.Misbehavior}
 */
proto.cometbft.abci.v1beta2.RequestPrepareProposal.prototype.addMisbehavior = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.cometbft.abci.v1beta2.Misbehavior, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cometbft.abci.v1beta2.RequestPrepareProposal} returns this
 */
proto.cometbft.abci.v1beta2.RequestPrepareProposal.prototype.clearMisbehaviorList = function() {
  return this.setMisbehaviorList([]);
};


/**
 * optional int64 height = 5;
 * @return {number}
 */
proto.cometbft.abci.v1beta2.RequestPrepareProposal.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.abci.v1beta2.RequestPrepareProposal} returns this
 */
proto.cometbft.abci.v1beta2.RequestPrepareProposal.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional google.protobuf.Timestamp time = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.cometbft.abci.v1beta2.RequestPrepareProposal.prototype.getTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.RequestPrepareProposal} returns this
*/
proto.cometbft.abci.v1beta2.RequestPrepareProposal.prototype.setTime = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.RequestPrepareProposal} returns this
 */
proto.cometbft.abci.v1beta2.RequestPrepareProposal.prototype.clearTime = function() {
  return this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.RequestPrepareProposal.prototype.hasTime = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bytes next_validators_hash = 7;
 * @return {!(string|Uint8Array)}
 */
proto.cometbft.abci.v1beta2.RequestPrepareProposal.prototype.getNextValidatorsHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * optional bytes next_validators_hash = 7;
 * This is a type-conversion wrapper around `getNextValidatorsHash()`
 * @return {string}
 */
proto.cometbft.abci.v1beta2.RequestPrepareProposal.prototype.getNextValidatorsHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getNextValidatorsHash()));
};


/**
 * optional bytes next_validators_hash = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getNextValidatorsHash()`
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta2.RequestPrepareProposal.prototype.getNextValidatorsHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getNextValidatorsHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cometbft.abci.v1beta2.RequestPrepareProposal} returns this
 */
proto.cometbft.abci.v1beta2.RequestPrepareProposal.prototype.setNextValidatorsHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 7, value);
};


/**
 * optional bytes proposer_address = 8;
 * @return {!(string|Uint8Array)}
 */
proto.cometbft.abci.v1beta2.RequestPrepareProposal.prototype.getProposerAddress = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * optional bytes proposer_address = 8;
 * This is a type-conversion wrapper around `getProposerAddress()`
 * @return {string}
 */
proto.cometbft.abci.v1beta2.RequestPrepareProposal.prototype.getProposerAddress_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getProposerAddress()));
};


/**
 * optional bytes proposer_address = 8;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getProposerAddress()`
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta2.RequestPrepareProposal.prototype.getProposerAddress_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getProposerAddress()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cometbft.abci.v1beta2.RequestPrepareProposal} returns this
 */
proto.cometbft.abci.v1beta2.RequestPrepareProposal.prototype.setProposerAddress = function(value) {
  return jspb.Message.setProto3BytesField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cometbft.abci.v1beta2.RequestProcessProposal.repeatedFields_ = [1,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta2.RequestProcessProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta2.RequestProcessProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta2.RequestProcessProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.RequestProcessProposal.toObject = function(includeInstance, msg) {
  var f, obj = {
    txsList: msg.getTxsList_asB64(),
    proposedLastCommit: (f = msg.getProposedLastCommit()) && proto.cometbft.abci.v1beta2.CommitInfo.toObject(includeInstance, f),
    misbehaviorList: jspb.Message.toObjectList(msg.getMisbehaviorList(),
    proto.cometbft.abci.v1beta2.Misbehavior.toObject, includeInstance),
    hash: msg.getHash_asB64(),
    height: jspb.Message.getFieldWithDefault(msg, 5, 0),
    time: (f = msg.getTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    nextValidatorsHash: msg.getNextValidatorsHash_asB64(),
    proposerAddress: msg.getProposerAddress_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta2.RequestProcessProposal}
 */
proto.cometbft.abci.v1beta2.RequestProcessProposal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta2.RequestProcessProposal;
  return proto.cometbft.abci.v1beta2.RequestProcessProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta2.RequestProcessProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta2.RequestProcessProposal}
 */
proto.cometbft.abci.v1beta2.RequestProcessProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addTxs(value);
      break;
    case 2:
      var value = new proto.cometbft.abci.v1beta2.CommitInfo;
      reader.readMessage(value,proto.cometbft.abci.v1beta2.CommitInfo.deserializeBinaryFromReader);
      msg.setProposedLastCommit(value);
      break;
    case 3:
      var value = new proto.cometbft.abci.v1beta2.Misbehavior;
      reader.readMessage(value,proto.cometbft.abci.v1beta2.Misbehavior.deserializeBinaryFromReader);
      msg.addMisbehavior(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHeight(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setNextValidatorsHash(value);
      break;
    case 8:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setProposerAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta2.RequestProcessProposal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta2.RequestProcessProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta2.RequestProcessProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.RequestProcessProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTxsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      1,
      f
    );
  }
  f = message.getProposedLastCommit();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cometbft.abci.v1beta2.CommitInfo.serializeBinaryToWriter
    );
  }
  f = message.getMisbehaviorList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.cometbft.abci.v1beta2.Misbehavior.serializeBinaryToWriter
    );
  }
  f = message.getHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getNextValidatorsHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      7,
      f
    );
  }
  f = message.getProposerAddress_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      8,
      f
    );
  }
};


/**
 * repeated bytes txs = 1;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.cometbft.abci.v1beta2.RequestProcessProposal.prototype.getTxsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * repeated bytes txs = 1;
 * This is a type-conversion wrapper around `getTxsList()`
 * @return {!Array<string>}
 */
proto.cometbft.abci.v1beta2.RequestProcessProposal.prototype.getTxsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getTxsList()));
};


/**
 * repeated bytes txs = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.cometbft.abci.v1beta2.RequestProcessProposal.prototype.getTxsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getTxsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.cometbft.abci.v1beta2.RequestProcessProposal} returns this
 */
proto.cometbft.abci.v1beta2.RequestProcessProposal.prototype.setTxsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.cometbft.abci.v1beta2.RequestProcessProposal} returns this
 */
proto.cometbft.abci.v1beta2.RequestProcessProposal.prototype.addTxs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cometbft.abci.v1beta2.RequestProcessProposal} returns this
 */
proto.cometbft.abci.v1beta2.RequestProcessProposal.prototype.clearTxsList = function() {
  return this.setTxsList([]);
};


/**
 * optional CommitInfo proposed_last_commit = 2;
 * @return {?proto.cometbft.abci.v1beta2.CommitInfo}
 */
proto.cometbft.abci.v1beta2.RequestProcessProposal.prototype.getProposedLastCommit = function() {
  return /** @type{?proto.cometbft.abci.v1beta2.CommitInfo} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.abci.v1beta2.CommitInfo, 2));
};


/**
 * @param {?proto.cometbft.abci.v1beta2.CommitInfo|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.RequestProcessProposal} returns this
*/
proto.cometbft.abci.v1beta2.RequestProcessProposal.prototype.setProposedLastCommit = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.RequestProcessProposal} returns this
 */
proto.cometbft.abci.v1beta2.RequestProcessProposal.prototype.clearProposedLastCommit = function() {
  return this.setProposedLastCommit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.RequestProcessProposal.prototype.hasProposedLastCommit = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Misbehavior misbehavior = 3;
 * @return {!Array<!proto.cometbft.abci.v1beta2.Misbehavior>}
 */
proto.cometbft.abci.v1beta2.RequestProcessProposal.prototype.getMisbehaviorList = function() {
  return /** @type{!Array<!proto.cometbft.abci.v1beta2.Misbehavior>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cometbft.abci.v1beta2.Misbehavior, 3));
};


/**
 * @param {!Array<!proto.cometbft.abci.v1beta2.Misbehavior>} value
 * @return {!proto.cometbft.abci.v1beta2.RequestProcessProposal} returns this
*/
proto.cometbft.abci.v1beta2.RequestProcessProposal.prototype.setMisbehaviorList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.cometbft.abci.v1beta2.Misbehavior=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cometbft.abci.v1beta2.Misbehavior}
 */
proto.cometbft.abci.v1beta2.RequestProcessProposal.prototype.addMisbehavior = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.cometbft.abci.v1beta2.Misbehavior, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cometbft.abci.v1beta2.RequestProcessProposal} returns this
 */
proto.cometbft.abci.v1beta2.RequestProcessProposal.prototype.clearMisbehaviorList = function() {
  return this.setMisbehaviorList([]);
};


/**
 * optional bytes hash = 4;
 * @return {!(string|Uint8Array)}
 */
proto.cometbft.abci.v1beta2.RequestProcessProposal.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes hash = 4;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.cometbft.abci.v1beta2.RequestProcessProposal.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta2.RequestProcessProposal.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cometbft.abci.v1beta2.RequestProcessProposal} returns this
 */
proto.cometbft.abci.v1beta2.RequestProcessProposal.prototype.setHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional int64 height = 5;
 * @return {number}
 */
proto.cometbft.abci.v1beta2.RequestProcessProposal.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.abci.v1beta2.RequestProcessProposal} returns this
 */
proto.cometbft.abci.v1beta2.RequestProcessProposal.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional google.protobuf.Timestamp time = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.cometbft.abci.v1beta2.RequestProcessProposal.prototype.getTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.RequestProcessProposal} returns this
*/
proto.cometbft.abci.v1beta2.RequestProcessProposal.prototype.setTime = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.RequestProcessProposal} returns this
 */
proto.cometbft.abci.v1beta2.RequestProcessProposal.prototype.clearTime = function() {
  return this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.RequestProcessProposal.prototype.hasTime = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bytes next_validators_hash = 7;
 * @return {!(string|Uint8Array)}
 */
proto.cometbft.abci.v1beta2.RequestProcessProposal.prototype.getNextValidatorsHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * optional bytes next_validators_hash = 7;
 * This is a type-conversion wrapper around `getNextValidatorsHash()`
 * @return {string}
 */
proto.cometbft.abci.v1beta2.RequestProcessProposal.prototype.getNextValidatorsHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getNextValidatorsHash()));
};


/**
 * optional bytes next_validators_hash = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getNextValidatorsHash()`
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta2.RequestProcessProposal.prototype.getNextValidatorsHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getNextValidatorsHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cometbft.abci.v1beta2.RequestProcessProposal} returns this
 */
proto.cometbft.abci.v1beta2.RequestProcessProposal.prototype.setNextValidatorsHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 7, value);
};


/**
 * optional bytes proposer_address = 8;
 * @return {!(string|Uint8Array)}
 */
proto.cometbft.abci.v1beta2.RequestProcessProposal.prototype.getProposerAddress = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * optional bytes proposer_address = 8;
 * This is a type-conversion wrapper around `getProposerAddress()`
 * @return {string}
 */
proto.cometbft.abci.v1beta2.RequestProcessProposal.prototype.getProposerAddress_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getProposerAddress()));
};


/**
 * optional bytes proposer_address = 8;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getProposerAddress()`
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta2.RequestProcessProposal.prototype.getProposerAddress_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getProposerAddress()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cometbft.abci.v1beta2.RequestProcessProposal} returns this
 */
proto.cometbft.abci.v1beta2.RequestProcessProposal.prototype.setProposerAddress = function(value) {
  return jspb.Message.setProto3BytesField(this, 8, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.cometbft.abci.v1beta2.Response.oneofGroups_ = [[1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18]];

/**
 * @enum {number}
 */
proto.cometbft.abci.v1beta2.Response.ValueCase = {
  VALUE_NOT_SET: 0,
  EXCEPTION: 1,
  ECHO: 2,
  FLUSH: 3,
  INFO: 4,
  INIT_CHAIN: 6,
  QUERY: 7,
  BEGIN_BLOCK: 8,
  CHECK_TX: 9,
  DELIVER_TX: 10,
  END_BLOCK: 11,
  COMMIT: 12,
  LIST_SNAPSHOTS: 13,
  OFFER_SNAPSHOT: 14,
  LOAD_SNAPSHOT_CHUNK: 15,
  APPLY_SNAPSHOT_CHUNK: 16,
  PREPARE_PROPOSAL: 17,
  PROCESS_PROPOSAL: 18
};

/**
 * @return {proto.cometbft.abci.v1beta2.Response.ValueCase}
 */
proto.cometbft.abci.v1beta2.Response.prototype.getValueCase = function() {
  return /** @type {proto.cometbft.abci.v1beta2.Response.ValueCase} */(jspb.Message.computeOneofCase(this, proto.cometbft.abci.v1beta2.Response.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta2.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta2.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta2.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    exception: (f = msg.getException()) && cometbft_abci_v1beta1_types_pb.ResponseException.toObject(includeInstance, f),
    echo: (f = msg.getEcho()) && cometbft_abci_v1beta1_types_pb.ResponseEcho.toObject(includeInstance, f),
    flush: (f = msg.getFlush()) && cometbft_abci_v1beta1_types_pb.ResponseFlush.toObject(includeInstance, f),
    info: (f = msg.getInfo()) && cometbft_abci_v1beta1_types_pb.ResponseInfo.toObject(includeInstance, f),
    initChain: (f = msg.getInitChain()) && proto.cometbft.abci.v1beta2.ResponseInitChain.toObject(includeInstance, f),
    query: (f = msg.getQuery()) && cometbft_abci_v1beta1_types_pb.ResponseQuery.toObject(includeInstance, f),
    beginBlock: (f = msg.getBeginBlock()) && proto.cometbft.abci.v1beta2.ResponseBeginBlock.toObject(includeInstance, f),
    checkTx: (f = msg.getCheckTx()) && proto.cometbft.abci.v1beta2.ResponseCheckTx.toObject(includeInstance, f),
    deliverTx: (f = msg.getDeliverTx()) && proto.cometbft.abci.v1beta2.ResponseDeliverTx.toObject(includeInstance, f),
    endBlock: (f = msg.getEndBlock()) && proto.cometbft.abci.v1beta2.ResponseEndBlock.toObject(includeInstance, f),
    commit: (f = msg.getCommit()) && cometbft_abci_v1beta1_types_pb.ResponseCommit.toObject(includeInstance, f),
    listSnapshots: (f = msg.getListSnapshots()) && cometbft_abci_v1beta1_types_pb.ResponseListSnapshots.toObject(includeInstance, f),
    offerSnapshot: (f = msg.getOfferSnapshot()) && cometbft_abci_v1beta1_types_pb.ResponseOfferSnapshot.toObject(includeInstance, f),
    loadSnapshotChunk: (f = msg.getLoadSnapshotChunk()) && cometbft_abci_v1beta1_types_pb.ResponseLoadSnapshotChunk.toObject(includeInstance, f),
    applySnapshotChunk: (f = msg.getApplySnapshotChunk()) && cometbft_abci_v1beta1_types_pb.ResponseApplySnapshotChunk.toObject(includeInstance, f),
    prepareProposal: (f = msg.getPrepareProposal()) && proto.cometbft.abci.v1beta2.ResponsePrepareProposal.toObject(includeInstance, f),
    processProposal: (f = msg.getProcessProposal()) && proto.cometbft.abci.v1beta2.ResponseProcessProposal.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta2.Response}
 */
proto.cometbft.abci.v1beta2.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta2.Response;
  return proto.cometbft.abci.v1beta2.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta2.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta2.Response}
 */
proto.cometbft.abci.v1beta2.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cometbft_abci_v1beta1_types_pb.ResponseException;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.ResponseException.deserializeBinaryFromReader);
      msg.setException(value);
      break;
    case 2:
      var value = new cometbft_abci_v1beta1_types_pb.ResponseEcho;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.ResponseEcho.deserializeBinaryFromReader);
      msg.setEcho(value);
      break;
    case 3:
      var value = new cometbft_abci_v1beta1_types_pb.ResponseFlush;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.ResponseFlush.deserializeBinaryFromReader);
      msg.setFlush(value);
      break;
    case 4:
      var value = new cometbft_abci_v1beta1_types_pb.ResponseInfo;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.ResponseInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    case 6:
      var value = new proto.cometbft.abci.v1beta2.ResponseInitChain;
      reader.readMessage(value,proto.cometbft.abci.v1beta2.ResponseInitChain.deserializeBinaryFromReader);
      msg.setInitChain(value);
      break;
    case 7:
      var value = new cometbft_abci_v1beta1_types_pb.ResponseQuery;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.ResponseQuery.deserializeBinaryFromReader);
      msg.setQuery(value);
      break;
    case 8:
      var value = new proto.cometbft.abci.v1beta2.ResponseBeginBlock;
      reader.readMessage(value,proto.cometbft.abci.v1beta2.ResponseBeginBlock.deserializeBinaryFromReader);
      msg.setBeginBlock(value);
      break;
    case 9:
      var value = new proto.cometbft.abci.v1beta2.ResponseCheckTx;
      reader.readMessage(value,proto.cometbft.abci.v1beta2.ResponseCheckTx.deserializeBinaryFromReader);
      msg.setCheckTx(value);
      break;
    case 10:
      var value = new proto.cometbft.abci.v1beta2.ResponseDeliverTx;
      reader.readMessage(value,proto.cometbft.abci.v1beta2.ResponseDeliverTx.deserializeBinaryFromReader);
      msg.setDeliverTx(value);
      break;
    case 11:
      var value = new proto.cometbft.abci.v1beta2.ResponseEndBlock;
      reader.readMessage(value,proto.cometbft.abci.v1beta2.ResponseEndBlock.deserializeBinaryFromReader);
      msg.setEndBlock(value);
      break;
    case 12:
      var value = new cometbft_abci_v1beta1_types_pb.ResponseCommit;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.ResponseCommit.deserializeBinaryFromReader);
      msg.setCommit(value);
      break;
    case 13:
      var value = new cometbft_abci_v1beta1_types_pb.ResponseListSnapshots;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.ResponseListSnapshots.deserializeBinaryFromReader);
      msg.setListSnapshots(value);
      break;
    case 14:
      var value = new cometbft_abci_v1beta1_types_pb.ResponseOfferSnapshot;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.ResponseOfferSnapshot.deserializeBinaryFromReader);
      msg.setOfferSnapshot(value);
      break;
    case 15:
      var value = new cometbft_abci_v1beta1_types_pb.ResponseLoadSnapshotChunk;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.ResponseLoadSnapshotChunk.deserializeBinaryFromReader);
      msg.setLoadSnapshotChunk(value);
      break;
    case 16:
      var value = new cometbft_abci_v1beta1_types_pb.ResponseApplySnapshotChunk;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.ResponseApplySnapshotChunk.deserializeBinaryFromReader);
      msg.setApplySnapshotChunk(value);
      break;
    case 17:
      var value = new proto.cometbft.abci.v1beta2.ResponsePrepareProposal;
      reader.readMessage(value,proto.cometbft.abci.v1beta2.ResponsePrepareProposal.deserializeBinaryFromReader);
      msg.setPrepareProposal(value);
      break;
    case 18:
      var value = new proto.cometbft.abci.v1beta2.ResponseProcessProposal;
      reader.readMessage(value,proto.cometbft.abci.v1beta2.ResponseProcessProposal.deserializeBinaryFromReader);
      msg.setProcessProposal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta2.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta2.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta2.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getException();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cometbft_abci_v1beta1_types_pb.ResponseException.serializeBinaryToWriter
    );
  }
  f = message.getEcho();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cometbft_abci_v1beta1_types_pb.ResponseEcho.serializeBinaryToWriter
    );
  }
  f = message.getFlush();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cometbft_abci_v1beta1_types_pb.ResponseFlush.serializeBinaryToWriter
    );
  }
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cometbft_abci_v1beta1_types_pb.ResponseInfo.serializeBinaryToWriter
    );
  }
  f = message.getInitChain();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.cometbft.abci.v1beta2.ResponseInitChain.serializeBinaryToWriter
    );
  }
  f = message.getQuery();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      cometbft_abci_v1beta1_types_pb.ResponseQuery.serializeBinaryToWriter
    );
  }
  f = message.getBeginBlock();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.cometbft.abci.v1beta2.ResponseBeginBlock.serializeBinaryToWriter
    );
  }
  f = message.getCheckTx();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.cometbft.abci.v1beta2.ResponseCheckTx.serializeBinaryToWriter
    );
  }
  f = message.getDeliverTx();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.cometbft.abci.v1beta2.ResponseDeliverTx.serializeBinaryToWriter
    );
  }
  f = message.getEndBlock();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.cometbft.abci.v1beta2.ResponseEndBlock.serializeBinaryToWriter
    );
  }
  f = message.getCommit();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      cometbft_abci_v1beta1_types_pb.ResponseCommit.serializeBinaryToWriter
    );
  }
  f = message.getListSnapshots();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      cometbft_abci_v1beta1_types_pb.ResponseListSnapshots.serializeBinaryToWriter
    );
  }
  f = message.getOfferSnapshot();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      cometbft_abci_v1beta1_types_pb.ResponseOfferSnapshot.serializeBinaryToWriter
    );
  }
  f = message.getLoadSnapshotChunk();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      cometbft_abci_v1beta1_types_pb.ResponseLoadSnapshotChunk.serializeBinaryToWriter
    );
  }
  f = message.getApplySnapshotChunk();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      cometbft_abci_v1beta1_types_pb.ResponseApplySnapshotChunk.serializeBinaryToWriter
    );
  }
  f = message.getPrepareProposal();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.cometbft.abci.v1beta2.ResponsePrepareProposal.serializeBinaryToWriter
    );
  }
  f = message.getProcessProposal();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.cometbft.abci.v1beta2.ResponseProcessProposal.serializeBinaryToWriter
    );
  }
};


/**
 * optional cometbft.abci.v1beta1.ResponseException exception = 1;
 * @return {?proto.cometbft.abci.v1beta1.ResponseException}
 */
proto.cometbft.abci.v1beta2.Response.prototype.getException = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.ResponseException} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.ResponseException, 1));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.ResponseException|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.Response} returns this
*/
proto.cometbft.abci.v1beta2.Response.prototype.setException = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.cometbft.abci.v1beta2.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.Response} returns this
 */
proto.cometbft.abci.v1beta2.Response.prototype.clearException = function() {
  return this.setException(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.Response.prototype.hasException = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional cometbft.abci.v1beta1.ResponseEcho echo = 2;
 * @return {?proto.cometbft.abci.v1beta1.ResponseEcho}
 */
proto.cometbft.abci.v1beta2.Response.prototype.getEcho = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.ResponseEcho} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.ResponseEcho, 2));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.ResponseEcho|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.Response} returns this
*/
proto.cometbft.abci.v1beta2.Response.prototype.setEcho = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.cometbft.abci.v1beta2.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.Response} returns this
 */
proto.cometbft.abci.v1beta2.Response.prototype.clearEcho = function() {
  return this.setEcho(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.Response.prototype.hasEcho = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional cometbft.abci.v1beta1.ResponseFlush flush = 3;
 * @return {?proto.cometbft.abci.v1beta1.ResponseFlush}
 */
proto.cometbft.abci.v1beta2.Response.prototype.getFlush = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.ResponseFlush} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.ResponseFlush, 3));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.ResponseFlush|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.Response} returns this
*/
proto.cometbft.abci.v1beta2.Response.prototype.setFlush = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.cometbft.abci.v1beta2.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.Response} returns this
 */
proto.cometbft.abci.v1beta2.Response.prototype.clearFlush = function() {
  return this.setFlush(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.Response.prototype.hasFlush = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional cometbft.abci.v1beta1.ResponseInfo info = 4;
 * @return {?proto.cometbft.abci.v1beta1.ResponseInfo}
 */
proto.cometbft.abci.v1beta2.Response.prototype.getInfo = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.ResponseInfo} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.ResponseInfo, 4));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.ResponseInfo|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.Response} returns this
*/
proto.cometbft.abci.v1beta2.Response.prototype.setInfo = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.cometbft.abci.v1beta2.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.Response} returns this
 */
proto.cometbft.abci.v1beta2.Response.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.Response.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ResponseInitChain init_chain = 6;
 * @return {?proto.cometbft.abci.v1beta2.ResponseInitChain}
 */
proto.cometbft.abci.v1beta2.Response.prototype.getInitChain = function() {
  return /** @type{?proto.cometbft.abci.v1beta2.ResponseInitChain} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.abci.v1beta2.ResponseInitChain, 6));
};


/**
 * @param {?proto.cometbft.abci.v1beta2.ResponseInitChain|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.Response} returns this
*/
proto.cometbft.abci.v1beta2.Response.prototype.setInitChain = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.cometbft.abci.v1beta2.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.Response} returns this
 */
proto.cometbft.abci.v1beta2.Response.prototype.clearInitChain = function() {
  return this.setInitChain(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.Response.prototype.hasInitChain = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional cometbft.abci.v1beta1.ResponseQuery query = 7;
 * @return {?proto.cometbft.abci.v1beta1.ResponseQuery}
 */
proto.cometbft.abci.v1beta2.Response.prototype.getQuery = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.ResponseQuery} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.ResponseQuery, 7));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.ResponseQuery|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.Response} returns this
*/
proto.cometbft.abci.v1beta2.Response.prototype.setQuery = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.cometbft.abci.v1beta2.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.Response} returns this
 */
proto.cometbft.abci.v1beta2.Response.prototype.clearQuery = function() {
  return this.setQuery(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.Response.prototype.hasQuery = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional ResponseBeginBlock begin_block = 8;
 * @return {?proto.cometbft.abci.v1beta2.ResponseBeginBlock}
 */
proto.cometbft.abci.v1beta2.Response.prototype.getBeginBlock = function() {
  return /** @type{?proto.cometbft.abci.v1beta2.ResponseBeginBlock} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.abci.v1beta2.ResponseBeginBlock, 8));
};


/**
 * @param {?proto.cometbft.abci.v1beta2.ResponseBeginBlock|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.Response} returns this
*/
proto.cometbft.abci.v1beta2.Response.prototype.setBeginBlock = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.cometbft.abci.v1beta2.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.Response} returns this
 */
proto.cometbft.abci.v1beta2.Response.prototype.clearBeginBlock = function() {
  return this.setBeginBlock(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.Response.prototype.hasBeginBlock = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional ResponseCheckTx check_tx = 9;
 * @return {?proto.cometbft.abci.v1beta2.ResponseCheckTx}
 */
proto.cometbft.abci.v1beta2.Response.prototype.getCheckTx = function() {
  return /** @type{?proto.cometbft.abci.v1beta2.ResponseCheckTx} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.abci.v1beta2.ResponseCheckTx, 9));
};


/**
 * @param {?proto.cometbft.abci.v1beta2.ResponseCheckTx|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.Response} returns this
*/
proto.cometbft.abci.v1beta2.Response.prototype.setCheckTx = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.cometbft.abci.v1beta2.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.Response} returns this
 */
proto.cometbft.abci.v1beta2.Response.prototype.clearCheckTx = function() {
  return this.setCheckTx(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.Response.prototype.hasCheckTx = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional ResponseDeliverTx deliver_tx = 10;
 * @return {?proto.cometbft.abci.v1beta2.ResponseDeliverTx}
 */
proto.cometbft.abci.v1beta2.Response.prototype.getDeliverTx = function() {
  return /** @type{?proto.cometbft.abci.v1beta2.ResponseDeliverTx} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.abci.v1beta2.ResponseDeliverTx, 10));
};


/**
 * @param {?proto.cometbft.abci.v1beta2.ResponseDeliverTx|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.Response} returns this
*/
proto.cometbft.abci.v1beta2.Response.prototype.setDeliverTx = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.cometbft.abci.v1beta2.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.Response} returns this
 */
proto.cometbft.abci.v1beta2.Response.prototype.clearDeliverTx = function() {
  return this.setDeliverTx(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.Response.prototype.hasDeliverTx = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional ResponseEndBlock end_block = 11;
 * @return {?proto.cometbft.abci.v1beta2.ResponseEndBlock}
 */
proto.cometbft.abci.v1beta2.Response.prototype.getEndBlock = function() {
  return /** @type{?proto.cometbft.abci.v1beta2.ResponseEndBlock} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.abci.v1beta2.ResponseEndBlock, 11));
};


/**
 * @param {?proto.cometbft.abci.v1beta2.ResponseEndBlock|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.Response} returns this
*/
proto.cometbft.abci.v1beta2.Response.prototype.setEndBlock = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.cometbft.abci.v1beta2.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.Response} returns this
 */
proto.cometbft.abci.v1beta2.Response.prototype.clearEndBlock = function() {
  return this.setEndBlock(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.Response.prototype.hasEndBlock = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional cometbft.abci.v1beta1.ResponseCommit commit = 12;
 * @return {?proto.cometbft.abci.v1beta1.ResponseCommit}
 */
proto.cometbft.abci.v1beta2.Response.prototype.getCommit = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.ResponseCommit} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.ResponseCommit, 12));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.ResponseCommit|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.Response} returns this
*/
proto.cometbft.abci.v1beta2.Response.prototype.setCommit = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.cometbft.abci.v1beta2.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.Response} returns this
 */
proto.cometbft.abci.v1beta2.Response.prototype.clearCommit = function() {
  return this.setCommit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.Response.prototype.hasCommit = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional cometbft.abci.v1beta1.ResponseListSnapshots list_snapshots = 13;
 * @return {?proto.cometbft.abci.v1beta1.ResponseListSnapshots}
 */
proto.cometbft.abci.v1beta2.Response.prototype.getListSnapshots = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.ResponseListSnapshots} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.ResponseListSnapshots, 13));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.ResponseListSnapshots|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.Response} returns this
*/
proto.cometbft.abci.v1beta2.Response.prototype.setListSnapshots = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.cometbft.abci.v1beta2.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.Response} returns this
 */
proto.cometbft.abci.v1beta2.Response.prototype.clearListSnapshots = function() {
  return this.setListSnapshots(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.Response.prototype.hasListSnapshots = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional cometbft.abci.v1beta1.ResponseOfferSnapshot offer_snapshot = 14;
 * @return {?proto.cometbft.abci.v1beta1.ResponseOfferSnapshot}
 */
proto.cometbft.abci.v1beta2.Response.prototype.getOfferSnapshot = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.ResponseOfferSnapshot} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.ResponseOfferSnapshot, 14));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.ResponseOfferSnapshot|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.Response} returns this
*/
proto.cometbft.abci.v1beta2.Response.prototype.setOfferSnapshot = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.cometbft.abci.v1beta2.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.Response} returns this
 */
proto.cometbft.abci.v1beta2.Response.prototype.clearOfferSnapshot = function() {
  return this.setOfferSnapshot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.Response.prototype.hasOfferSnapshot = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional cometbft.abci.v1beta1.ResponseLoadSnapshotChunk load_snapshot_chunk = 15;
 * @return {?proto.cometbft.abci.v1beta1.ResponseLoadSnapshotChunk}
 */
proto.cometbft.abci.v1beta2.Response.prototype.getLoadSnapshotChunk = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.ResponseLoadSnapshotChunk} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.ResponseLoadSnapshotChunk, 15));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.ResponseLoadSnapshotChunk|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.Response} returns this
*/
proto.cometbft.abci.v1beta2.Response.prototype.setLoadSnapshotChunk = function(value) {
  return jspb.Message.setOneofWrapperField(this, 15, proto.cometbft.abci.v1beta2.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.Response} returns this
 */
proto.cometbft.abci.v1beta2.Response.prototype.clearLoadSnapshotChunk = function() {
  return this.setLoadSnapshotChunk(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.Response.prototype.hasLoadSnapshotChunk = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional cometbft.abci.v1beta1.ResponseApplySnapshotChunk apply_snapshot_chunk = 16;
 * @return {?proto.cometbft.abci.v1beta1.ResponseApplySnapshotChunk}
 */
proto.cometbft.abci.v1beta2.Response.prototype.getApplySnapshotChunk = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.ResponseApplySnapshotChunk} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.ResponseApplySnapshotChunk, 16));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.ResponseApplySnapshotChunk|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.Response} returns this
*/
proto.cometbft.abci.v1beta2.Response.prototype.setApplySnapshotChunk = function(value) {
  return jspb.Message.setOneofWrapperField(this, 16, proto.cometbft.abci.v1beta2.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.Response} returns this
 */
proto.cometbft.abci.v1beta2.Response.prototype.clearApplySnapshotChunk = function() {
  return this.setApplySnapshotChunk(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.Response.prototype.hasApplySnapshotChunk = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional ResponsePrepareProposal prepare_proposal = 17;
 * @return {?proto.cometbft.abci.v1beta2.ResponsePrepareProposal}
 */
proto.cometbft.abci.v1beta2.Response.prototype.getPrepareProposal = function() {
  return /** @type{?proto.cometbft.abci.v1beta2.ResponsePrepareProposal} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.abci.v1beta2.ResponsePrepareProposal, 17));
};


/**
 * @param {?proto.cometbft.abci.v1beta2.ResponsePrepareProposal|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.Response} returns this
*/
proto.cometbft.abci.v1beta2.Response.prototype.setPrepareProposal = function(value) {
  return jspb.Message.setOneofWrapperField(this, 17, proto.cometbft.abci.v1beta2.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.Response} returns this
 */
proto.cometbft.abci.v1beta2.Response.prototype.clearPrepareProposal = function() {
  return this.setPrepareProposal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.Response.prototype.hasPrepareProposal = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional ResponseProcessProposal process_proposal = 18;
 * @return {?proto.cometbft.abci.v1beta2.ResponseProcessProposal}
 */
proto.cometbft.abci.v1beta2.Response.prototype.getProcessProposal = function() {
  return /** @type{?proto.cometbft.abci.v1beta2.ResponseProcessProposal} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.abci.v1beta2.ResponseProcessProposal, 18));
};


/**
 * @param {?proto.cometbft.abci.v1beta2.ResponseProcessProposal|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.Response} returns this
*/
proto.cometbft.abci.v1beta2.Response.prototype.setProcessProposal = function(value) {
  return jspb.Message.setOneofWrapperField(this, 18, proto.cometbft.abci.v1beta2.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.Response} returns this
 */
proto.cometbft.abci.v1beta2.Response.prototype.clearProcessProposal = function() {
  return this.setProcessProposal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.Response.prototype.hasProcessProposal = function() {
  return jspb.Message.getField(this, 18) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cometbft.abci.v1beta2.ResponseInitChain.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta2.ResponseInitChain.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta2.ResponseInitChain.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta2.ResponseInitChain} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.ResponseInitChain.toObject = function(includeInstance, msg) {
  var f, obj = {
    consensusParams: (f = msg.getConsensusParams()) && cometbft_types_v1beta2_params_pb.ConsensusParams.toObject(includeInstance, f),
    validatorsList: jspb.Message.toObjectList(msg.getValidatorsList(),
    cometbft_abci_v1beta1_types_pb.ValidatorUpdate.toObject, includeInstance),
    appHash: msg.getAppHash_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta2.ResponseInitChain}
 */
proto.cometbft.abci.v1beta2.ResponseInitChain.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta2.ResponseInitChain;
  return proto.cometbft.abci.v1beta2.ResponseInitChain.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta2.ResponseInitChain} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta2.ResponseInitChain}
 */
proto.cometbft.abci.v1beta2.ResponseInitChain.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cometbft_types_v1beta2_params_pb.ConsensusParams;
      reader.readMessage(value,cometbft_types_v1beta2_params_pb.ConsensusParams.deserializeBinaryFromReader);
      msg.setConsensusParams(value);
      break;
    case 2:
      var value = new cometbft_abci_v1beta1_types_pb.ValidatorUpdate;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.ValidatorUpdate.deserializeBinaryFromReader);
      msg.addValidators(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAppHash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta2.ResponseInitChain.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta2.ResponseInitChain.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta2.ResponseInitChain} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.ResponseInitChain.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConsensusParams();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cometbft_types_v1beta2_params_pb.ConsensusParams.serializeBinaryToWriter
    );
  }
  f = message.getValidatorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      cometbft_abci_v1beta1_types_pb.ValidatorUpdate.serializeBinaryToWriter
    );
  }
  f = message.getAppHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional cometbft.types.v1beta2.ConsensusParams consensus_params = 1;
 * @return {?proto.cometbft.types.v1beta2.ConsensusParams}
 */
proto.cometbft.abci.v1beta2.ResponseInitChain.prototype.getConsensusParams = function() {
  return /** @type{?proto.cometbft.types.v1beta2.ConsensusParams} */ (
    jspb.Message.getWrapperField(this, cometbft_types_v1beta2_params_pb.ConsensusParams, 1));
};


/**
 * @param {?proto.cometbft.types.v1beta2.ConsensusParams|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.ResponseInitChain} returns this
*/
proto.cometbft.abci.v1beta2.ResponseInitChain.prototype.setConsensusParams = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.ResponseInitChain} returns this
 */
proto.cometbft.abci.v1beta2.ResponseInitChain.prototype.clearConsensusParams = function() {
  return this.setConsensusParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.ResponseInitChain.prototype.hasConsensusParams = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated cometbft.abci.v1beta1.ValidatorUpdate validators = 2;
 * @return {!Array<!proto.cometbft.abci.v1beta1.ValidatorUpdate>}
 */
proto.cometbft.abci.v1beta2.ResponseInitChain.prototype.getValidatorsList = function() {
  return /** @type{!Array<!proto.cometbft.abci.v1beta1.ValidatorUpdate>} */ (
    jspb.Message.getRepeatedWrapperField(this, cometbft_abci_v1beta1_types_pb.ValidatorUpdate, 2));
};


/**
 * @param {!Array<!proto.cometbft.abci.v1beta1.ValidatorUpdate>} value
 * @return {!proto.cometbft.abci.v1beta2.ResponseInitChain} returns this
*/
proto.cometbft.abci.v1beta2.ResponseInitChain.prototype.setValidatorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.cometbft.abci.v1beta1.ValidatorUpdate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cometbft.abci.v1beta1.ValidatorUpdate}
 */
proto.cometbft.abci.v1beta2.ResponseInitChain.prototype.addValidators = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.cometbft.abci.v1beta1.ValidatorUpdate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cometbft.abci.v1beta2.ResponseInitChain} returns this
 */
proto.cometbft.abci.v1beta2.ResponseInitChain.prototype.clearValidatorsList = function() {
  return this.setValidatorsList([]);
};


/**
 * optional bytes app_hash = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cometbft.abci.v1beta2.ResponseInitChain.prototype.getAppHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes app_hash = 3;
 * This is a type-conversion wrapper around `getAppHash()`
 * @return {string}
 */
proto.cometbft.abci.v1beta2.ResponseInitChain.prototype.getAppHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAppHash()));
};


/**
 * optional bytes app_hash = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAppHash()`
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta2.ResponseInitChain.prototype.getAppHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAppHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cometbft.abci.v1beta2.ResponseInitChain} returns this
 */
proto.cometbft.abci.v1beta2.ResponseInitChain.prototype.setAppHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cometbft.abci.v1beta2.ResponseBeginBlock.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta2.ResponseBeginBlock.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta2.ResponseBeginBlock.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta2.ResponseBeginBlock} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.ResponseBeginBlock.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventsList: jspb.Message.toObjectList(msg.getEventsList(),
    proto.cometbft.abci.v1beta2.Event.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta2.ResponseBeginBlock}
 */
proto.cometbft.abci.v1beta2.ResponseBeginBlock.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta2.ResponseBeginBlock;
  return proto.cometbft.abci.v1beta2.ResponseBeginBlock.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta2.ResponseBeginBlock} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta2.ResponseBeginBlock}
 */
proto.cometbft.abci.v1beta2.ResponseBeginBlock.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cometbft.abci.v1beta2.Event;
      reader.readMessage(value,proto.cometbft.abci.v1beta2.Event.deserializeBinaryFromReader);
      msg.addEvents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta2.ResponseBeginBlock.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta2.ResponseBeginBlock.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta2.ResponseBeginBlock} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.ResponseBeginBlock.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cometbft.abci.v1beta2.Event.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Event events = 1;
 * @return {!Array<!proto.cometbft.abci.v1beta2.Event>}
 */
proto.cometbft.abci.v1beta2.ResponseBeginBlock.prototype.getEventsList = function() {
  return /** @type{!Array<!proto.cometbft.abci.v1beta2.Event>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cometbft.abci.v1beta2.Event, 1));
};


/**
 * @param {!Array<!proto.cometbft.abci.v1beta2.Event>} value
 * @return {!proto.cometbft.abci.v1beta2.ResponseBeginBlock} returns this
*/
proto.cometbft.abci.v1beta2.ResponseBeginBlock.prototype.setEventsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cometbft.abci.v1beta2.Event=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cometbft.abci.v1beta2.Event}
 */
proto.cometbft.abci.v1beta2.ResponseBeginBlock.prototype.addEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cometbft.abci.v1beta2.Event, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cometbft.abci.v1beta2.ResponseBeginBlock} returns this
 */
proto.cometbft.abci.v1beta2.ResponseBeginBlock.prototype.clearEventsList = function() {
  return this.setEventsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cometbft.abci.v1beta2.ResponseCheckTx.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta2.ResponseCheckTx.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta2.ResponseCheckTx.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta2.ResponseCheckTx} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.ResponseCheckTx.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    data: msg.getData_asB64(),
    log: jspb.Message.getFieldWithDefault(msg, 3, ""),
    info: jspb.Message.getFieldWithDefault(msg, 4, ""),
    gasWanted: jspb.Message.getFieldWithDefault(msg, 5, 0),
    gasUsed: jspb.Message.getFieldWithDefault(msg, 6, 0),
    eventsList: jspb.Message.toObjectList(msg.getEventsList(),
    proto.cometbft.abci.v1beta2.Event.toObject, includeInstance),
    codespace: jspb.Message.getFieldWithDefault(msg, 8, ""),
    sender: jspb.Message.getFieldWithDefault(msg, 9, ""),
    priority: jspb.Message.getFieldWithDefault(msg, 10, 0),
    mempoolError: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta2.ResponseCheckTx}
 */
proto.cometbft.abci.v1beta2.ResponseCheckTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta2.ResponseCheckTx;
  return proto.cometbft.abci.v1beta2.ResponseCheckTx.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta2.ResponseCheckTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta2.ResponseCheckTx}
 */
proto.cometbft.abci.v1beta2.ResponseCheckTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLog(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setInfo(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGasWanted(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGasUsed(value);
      break;
    case 7:
      var value = new proto.cometbft.abci.v1beta2.Event;
      reader.readMessage(value,proto.cometbft.abci.v1beta2.Event.deserializeBinaryFromReader);
      msg.addEvents(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCodespace(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPriority(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setMempoolError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta2.ResponseCheckTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta2.ResponseCheckTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta2.ResponseCheckTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.ResponseCheckTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getLog();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getInfo();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getGasWanted();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getGasUsed();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.cometbft.abci.v1beta2.Event.serializeBinaryToWriter
    );
  }
  f = message.getCodespace();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getPriority();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getMempoolError();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional uint32 code = 1;
 * @return {number}
 */
proto.cometbft.abci.v1beta2.ResponseCheckTx.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.abci.v1beta2.ResponseCheckTx} returns this
 */
proto.cometbft.abci.v1beta2.ResponseCheckTx.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bytes data = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cometbft.abci.v1beta2.ResponseCheckTx.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes data = 2;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.cometbft.abci.v1beta2.ResponseCheckTx.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta2.ResponseCheckTx.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cometbft.abci.v1beta2.ResponseCheckTx} returns this
 */
proto.cometbft.abci.v1beta2.ResponseCheckTx.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional string log = 3;
 * @return {string}
 */
proto.cometbft.abci.v1beta2.ResponseCheckTx.prototype.getLog = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cometbft.abci.v1beta2.ResponseCheckTx} returns this
 */
proto.cometbft.abci.v1beta2.ResponseCheckTx.prototype.setLog = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string info = 4;
 * @return {string}
 */
proto.cometbft.abci.v1beta2.ResponseCheckTx.prototype.getInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cometbft.abci.v1beta2.ResponseCheckTx} returns this
 */
proto.cometbft.abci.v1beta2.ResponseCheckTx.prototype.setInfo = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 gas_wanted = 5;
 * @return {number}
 */
proto.cometbft.abci.v1beta2.ResponseCheckTx.prototype.getGasWanted = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.abci.v1beta2.ResponseCheckTx} returns this
 */
proto.cometbft.abci.v1beta2.ResponseCheckTx.prototype.setGasWanted = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 gas_used = 6;
 * @return {number}
 */
proto.cometbft.abci.v1beta2.ResponseCheckTx.prototype.getGasUsed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.abci.v1beta2.ResponseCheckTx} returns this
 */
proto.cometbft.abci.v1beta2.ResponseCheckTx.prototype.setGasUsed = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * repeated Event events = 7;
 * @return {!Array<!proto.cometbft.abci.v1beta2.Event>}
 */
proto.cometbft.abci.v1beta2.ResponseCheckTx.prototype.getEventsList = function() {
  return /** @type{!Array<!proto.cometbft.abci.v1beta2.Event>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cometbft.abci.v1beta2.Event, 7));
};


/**
 * @param {!Array<!proto.cometbft.abci.v1beta2.Event>} value
 * @return {!proto.cometbft.abci.v1beta2.ResponseCheckTx} returns this
*/
proto.cometbft.abci.v1beta2.ResponseCheckTx.prototype.setEventsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.cometbft.abci.v1beta2.Event=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cometbft.abci.v1beta2.Event}
 */
proto.cometbft.abci.v1beta2.ResponseCheckTx.prototype.addEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.cometbft.abci.v1beta2.Event, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cometbft.abci.v1beta2.ResponseCheckTx} returns this
 */
proto.cometbft.abci.v1beta2.ResponseCheckTx.prototype.clearEventsList = function() {
  return this.setEventsList([]);
};


/**
 * optional string codespace = 8;
 * @return {string}
 */
proto.cometbft.abci.v1beta2.ResponseCheckTx.prototype.getCodespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.cometbft.abci.v1beta2.ResponseCheckTx} returns this
 */
proto.cometbft.abci.v1beta2.ResponseCheckTx.prototype.setCodespace = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string sender = 9;
 * @return {string}
 */
proto.cometbft.abci.v1beta2.ResponseCheckTx.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.cometbft.abci.v1beta2.ResponseCheckTx} returns this
 */
proto.cometbft.abci.v1beta2.ResponseCheckTx.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int64 priority = 10;
 * @return {number}
 */
proto.cometbft.abci.v1beta2.ResponseCheckTx.prototype.getPriority = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.abci.v1beta2.ResponseCheckTx} returns this
 */
proto.cometbft.abci.v1beta2.ResponseCheckTx.prototype.setPriority = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string mempool_error = 11;
 * @return {string}
 */
proto.cometbft.abci.v1beta2.ResponseCheckTx.prototype.getMempoolError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.cometbft.abci.v1beta2.ResponseCheckTx} returns this
 */
proto.cometbft.abci.v1beta2.ResponseCheckTx.prototype.setMempoolError = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cometbft.abci.v1beta2.ResponseDeliverTx.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta2.ResponseDeliverTx.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta2.ResponseDeliverTx.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta2.ResponseDeliverTx} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.ResponseDeliverTx.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    data: msg.getData_asB64(),
    log: jspb.Message.getFieldWithDefault(msg, 3, ""),
    info: jspb.Message.getFieldWithDefault(msg, 4, ""),
    gasWanted: jspb.Message.getFieldWithDefault(msg, 5, 0),
    gasUsed: jspb.Message.getFieldWithDefault(msg, 6, 0),
    eventsList: jspb.Message.toObjectList(msg.getEventsList(),
    proto.cometbft.abci.v1beta2.Event.toObject, includeInstance),
    codespace: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta2.ResponseDeliverTx}
 */
proto.cometbft.abci.v1beta2.ResponseDeliverTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta2.ResponseDeliverTx;
  return proto.cometbft.abci.v1beta2.ResponseDeliverTx.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta2.ResponseDeliverTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta2.ResponseDeliverTx}
 */
proto.cometbft.abci.v1beta2.ResponseDeliverTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLog(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setInfo(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGasWanted(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGasUsed(value);
      break;
    case 7:
      var value = new proto.cometbft.abci.v1beta2.Event;
      reader.readMessage(value,proto.cometbft.abci.v1beta2.Event.deserializeBinaryFromReader);
      msg.addEvents(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCodespace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta2.ResponseDeliverTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta2.ResponseDeliverTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta2.ResponseDeliverTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.ResponseDeliverTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getLog();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getInfo();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getGasWanted();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getGasUsed();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.cometbft.abci.v1beta2.Event.serializeBinaryToWriter
    );
  }
  f = message.getCodespace();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional uint32 code = 1;
 * @return {number}
 */
proto.cometbft.abci.v1beta2.ResponseDeliverTx.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.abci.v1beta2.ResponseDeliverTx} returns this
 */
proto.cometbft.abci.v1beta2.ResponseDeliverTx.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bytes data = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cometbft.abci.v1beta2.ResponseDeliverTx.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes data = 2;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.cometbft.abci.v1beta2.ResponseDeliverTx.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta2.ResponseDeliverTx.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cometbft.abci.v1beta2.ResponseDeliverTx} returns this
 */
proto.cometbft.abci.v1beta2.ResponseDeliverTx.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional string log = 3;
 * @return {string}
 */
proto.cometbft.abci.v1beta2.ResponseDeliverTx.prototype.getLog = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cometbft.abci.v1beta2.ResponseDeliverTx} returns this
 */
proto.cometbft.abci.v1beta2.ResponseDeliverTx.prototype.setLog = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string info = 4;
 * @return {string}
 */
proto.cometbft.abci.v1beta2.ResponseDeliverTx.prototype.getInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cometbft.abci.v1beta2.ResponseDeliverTx} returns this
 */
proto.cometbft.abci.v1beta2.ResponseDeliverTx.prototype.setInfo = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 gas_wanted = 5;
 * @return {number}
 */
proto.cometbft.abci.v1beta2.ResponseDeliverTx.prototype.getGasWanted = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.abci.v1beta2.ResponseDeliverTx} returns this
 */
proto.cometbft.abci.v1beta2.ResponseDeliverTx.prototype.setGasWanted = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 gas_used = 6;
 * @return {number}
 */
proto.cometbft.abci.v1beta2.ResponseDeliverTx.prototype.getGasUsed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.abci.v1beta2.ResponseDeliverTx} returns this
 */
proto.cometbft.abci.v1beta2.ResponseDeliverTx.prototype.setGasUsed = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * repeated Event events = 7;
 * @return {!Array<!proto.cometbft.abci.v1beta2.Event>}
 */
proto.cometbft.abci.v1beta2.ResponseDeliverTx.prototype.getEventsList = function() {
  return /** @type{!Array<!proto.cometbft.abci.v1beta2.Event>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cometbft.abci.v1beta2.Event, 7));
};


/**
 * @param {!Array<!proto.cometbft.abci.v1beta2.Event>} value
 * @return {!proto.cometbft.abci.v1beta2.ResponseDeliverTx} returns this
*/
proto.cometbft.abci.v1beta2.ResponseDeliverTx.prototype.setEventsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.cometbft.abci.v1beta2.Event=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cometbft.abci.v1beta2.Event}
 */
proto.cometbft.abci.v1beta2.ResponseDeliverTx.prototype.addEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.cometbft.abci.v1beta2.Event, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cometbft.abci.v1beta2.ResponseDeliverTx} returns this
 */
proto.cometbft.abci.v1beta2.ResponseDeliverTx.prototype.clearEventsList = function() {
  return this.setEventsList([]);
};


/**
 * optional string codespace = 8;
 * @return {string}
 */
proto.cometbft.abci.v1beta2.ResponseDeliverTx.prototype.getCodespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.cometbft.abci.v1beta2.ResponseDeliverTx} returns this
 */
proto.cometbft.abci.v1beta2.ResponseDeliverTx.prototype.setCodespace = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cometbft.abci.v1beta2.ResponseEndBlock.repeatedFields_ = [1,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta2.ResponseEndBlock.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta2.ResponseEndBlock.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta2.ResponseEndBlock} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.ResponseEndBlock.toObject = function(includeInstance, msg) {
  var f, obj = {
    validatorUpdatesList: jspb.Message.toObjectList(msg.getValidatorUpdatesList(),
    cometbft_abci_v1beta1_types_pb.ValidatorUpdate.toObject, includeInstance),
    consensusParamUpdates: (f = msg.getConsensusParamUpdates()) && cometbft_types_v1beta2_params_pb.ConsensusParams.toObject(includeInstance, f),
    eventsList: jspb.Message.toObjectList(msg.getEventsList(),
    proto.cometbft.abci.v1beta2.Event.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta2.ResponseEndBlock}
 */
proto.cometbft.abci.v1beta2.ResponseEndBlock.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta2.ResponseEndBlock;
  return proto.cometbft.abci.v1beta2.ResponseEndBlock.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta2.ResponseEndBlock} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta2.ResponseEndBlock}
 */
proto.cometbft.abci.v1beta2.ResponseEndBlock.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cometbft_abci_v1beta1_types_pb.ValidatorUpdate;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.ValidatorUpdate.deserializeBinaryFromReader);
      msg.addValidatorUpdates(value);
      break;
    case 2:
      var value = new cometbft_types_v1beta2_params_pb.ConsensusParams;
      reader.readMessage(value,cometbft_types_v1beta2_params_pb.ConsensusParams.deserializeBinaryFromReader);
      msg.setConsensusParamUpdates(value);
      break;
    case 3:
      var value = new proto.cometbft.abci.v1beta2.Event;
      reader.readMessage(value,proto.cometbft.abci.v1beta2.Event.deserializeBinaryFromReader);
      msg.addEvents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta2.ResponseEndBlock.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta2.ResponseEndBlock.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta2.ResponseEndBlock} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.ResponseEndBlock.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidatorUpdatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      cometbft_abci_v1beta1_types_pb.ValidatorUpdate.serializeBinaryToWriter
    );
  }
  f = message.getConsensusParamUpdates();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cometbft_types_v1beta2_params_pb.ConsensusParams.serializeBinaryToWriter
    );
  }
  f = message.getEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.cometbft.abci.v1beta2.Event.serializeBinaryToWriter
    );
  }
};


/**
 * repeated cometbft.abci.v1beta1.ValidatorUpdate validator_updates = 1;
 * @return {!Array<!proto.cometbft.abci.v1beta1.ValidatorUpdate>}
 */
proto.cometbft.abci.v1beta2.ResponseEndBlock.prototype.getValidatorUpdatesList = function() {
  return /** @type{!Array<!proto.cometbft.abci.v1beta1.ValidatorUpdate>} */ (
    jspb.Message.getRepeatedWrapperField(this, cometbft_abci_v1beta1_types_pb.ValidatorUpdate, 1));
};


/**
 * @param {!Array<!proto.cometbft.abci.v1beta1.ValidatorUpdate>} value
 * @return {!proto.cometbft.abci.v1beta2.ResponseEndBlock} returns this
*/
proto.cometbft.abci.v1beta2.ResponseEndBlock.prototype.setValidatorUpdatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cometbft.abci.v1beta1.ValidatorUpdate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cometbft.abci.v1beta1.ValidatorUpdate}
 */
proto.cometbft.abci.v1beta2.ResponseEndBlock.prototype.addValidatorUpdates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cometbft.abci.v1beta1.ValidatorUpdate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cometbft.abci.v1beta2.ResponseEndBlock} returns this
 */
proto.cometbft.abci.v1beta2.ResponseEndBlock.prototype.clearValidatorUpdatesList = function() {
  return this.setValidatorUpdatesList([]);
};


/**
 * optional cometbft.types.v1beta2.ConsensusParams consensus_param_updates = 2;
 * @return {?proto.cometbft.types.v1beta2.ConsensusParams}
 */
proto.cometbft.abci.v1beta2.ResponseEndBlock.prototype.getConsensusParamUpdates = function() {
  return /** @type{?proto.cometbft.types.v1beta2.ConsensusParams} */ (
    jspb.Message.getWrapperField(this, cometbft_types_v1beta2_params_pb.ConsensusParams, 2));
};


/**
 * @param {?proto.cometbft.types.v1beta2.ConsensusParams|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.ResponseEndBlock} returns this
*/
proto.cometbft.abci.v1beta2.ResponseEndBlock.prototype.setConsensusParamUpdates = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.ResponseEndBlock} returns this
 */
proto.cometbft.abci.v1beta2.ResponseEndBlock.prototype.clearConsensusParamUpdates = function() {
  return this.setConsensusParamUpdates(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.ResponseEndBlock.prototype.hasConsensusParamUpdates = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Event events = 3;
 * @return {!Array<!proto.cometbft.abci.v1beta2.Event>}
 */
proto.cometbft.abci.v1beta2.ResponseEndBlock.prototype.getEventsList = function() {
  return /** @type{!Array<!proto.cometbft.abci.v1beta2.Event>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cometbft.abci.v1beta2.Event, 3));
};


/**
 * @param {!Array<!proto.cometbft.abci.v1beta2.Event>} value
 * @return {!proto.cometbft.abci.v1beta2.ResponseEndBlock} returns this
*/
proto.cometbft.abci.v1beta2.ResponseEndBlock.prototype.setEventsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.cometbft.abci.v1beta2.Event=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cometbft.abci.v1beta2.Event}
 */
proto.cometbft.abci.v1beta2.ResponseEndBlock.prototype.addEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.cometbft.abci.v1beta2.Event, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cometbft.abci.v1beta2.ResponseEndBlock} returns this
 */
proto.cometbft.abci.v1beta2.ResponseEndBlock.prototype.clearEventsList = function() {
  return this.setEventsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cometbft.abci.v1beta2.ResponsePrepareProposal.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta2.ResponsePrepareProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta2.ResponsePrepareProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta2.ResponsePrepareProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.ResponsePrepareProposal.toObject = function(includeInstance, msg) {
  var f, obj = {
    txsList: msg.getTxsList_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta2.ResponsePrepareProposal}
 */
proto.cometbft.abci.v1beta2.ResponsePrepareProposal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta2.ResponsePrepareProposal;
  return proto.cometbft.abci.v1beta2.ResponsePrepareProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta2.ResponsePrepareProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta2.ResponsePrepareProposal}
 */
proto.cometbft.abci.v1beta2.ResponsePrepareProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addTxs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta2.ResponsePrepareProposal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta2.ResponsePrepareProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta2.ResponsePrepareProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.ResponsePrepareProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTxsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      1,
      f
    );
  }
};


/**
 * repeated bytes txs = 1;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.cometbft.abci.v1beta2.ResponsePrepareProposal.prototype.getTxsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * repeated bytes txs = 1;
 * This is a type-conversion wrapper around `getTxsList()`
 * @return {!Array<string>}
 */
proto.cometbft.abci.v1beta2.ResponsePrepareProposal.prototype.getTxsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getTxsList()));
};


/**
 * repeated bytes txs = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.cometbft.abci.v1beta2.ResponsePrepareProposal.prototype.getTxsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getTxsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.cometbft.abci.v1beta2.ResponsePrepareProposal} returns this
 */
proto.cometbft.abci.v1beta2.ResponsePrepareProposal.prototype.setTxsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.cometbft.abci.v1beta2.ResponsePrepareProposal} returns this
 */
proto.cometbft.abci.v1beta2.ResponsePrepareProposal.prototype.addTxs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cometbft.abci.v1beta2.ResponsePrepareProposal} returns this
 */
proto.cometbft.abci.v1beta2.ResponsePrepareProposal.prototype.clearTxsList = function() {
  return this.setTxsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta2.ResponseProcessProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta2.ResponseProcessProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta2.ResponseProcessProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.ResponseProcessProposal.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta2.ResponseProcessProposal}
 */
proto.cometbft.abci.v1beta2.ResponseProcessProposal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta2.ResponseProcessProposal;
  return proto.cometbft.abci.v1beta2.ResponseProcessProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta2.ResponseProcessProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta2.ResponseProcessProposal}
 */
proto.cometbft.abci.v1beta2.ResponseProcessProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cometbft.abci.v1beta2.ResponseProcessProposal.ProposalStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta2.ResponseProcessProposal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta2.ResponseProcessProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta2.ResponseProcessProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.ResponseProcessProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cometbft.abci.v1beta2.ResponseProcessProposal.ProposalStatus = {
  UNKNOWN: 0,
  ACCEPT: 1,
  REJECT: 2
};

/**
 * optional ProposalStatus status = 1;
 * @return {!proto.cometbft.abci.v1beta2.ResponseProcessProposal.ProposalStatus}
 */
proto.cometbft.abci.v1beta2.ResponseProcessProposal.prototype.getStatus = function() {
  return /** @type {!proto.cometbft.abci.v1beta2.ResponseProcessProposal.ProposalStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cometbft.abci.v1beta2.ResponseProcessProposal.ProposalStatus} value
 * @return {!proto.cometbft.abci.v1beta2.ResponseProcessProposal} returns this
 */
proto.cometbft.abci.v1beta2.ResponseProcessProposal.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cometbft.abci.v1beta2.CommitInfo.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta2.CommitInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta2.CommitInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta2.CommitInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.CommitInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    round: jspb.Message.getFieldWithDefault(msg, 1, 0),
    votesList: jspb.Message.toObjectList(msg.getVotesList(),
    cometbft_abci_v1beta1_types_pb.VoteInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta2.CommitInfo}
 */
proto.cometbft.abci.v1beta2.CommitInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta2.CommitInfo;
  return proto.cometbft.abci.v1beta2.CommitInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta2.CommitInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta2.CommitInfo}
 */
proto.cometbft.abci.v1beta2.CommitInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRound(value);
      break;
    case 2:
      var value = new cometbft_abci_v1beta1_types_pb.VoteInfo;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.VoteInfo.deserializeBinaryFromReader);
      msg.addVotes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta2.CommitInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta2.CommitInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta2.CommitInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.CommitInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRound();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getVotesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      cometbft_abci_v1beta1_types_pb.VoteInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 round = 1;
 * @return {number}
 */
proto.cometbft.abci.v1beta2.CommitInfo.prototype.getRound = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.abci.v1beta2.CommitInfo} returns this
 */
proto.cometbft.abci.v1beta2.CommitInfo.prototype.setRound = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated cometbft.abci.v1beta1.VoteInfo votes = 2;
 * @return {!Array<!proto.cometbft.abci.v1beta1.VoteInfo>}
 */
proto.cometbft.abci.v1beta2.CommitInfo.prototype.getVotesList = function() {
  return /** @type{!Array<!proto.cometbft.abci.v1beta1.VoteInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, cometbft_abci_v1beta1_types_pb.VoteInfo, 2));
};


/**
 * @param {!Array<!proto.cometbft.abci.v1beta1.VoteInfo>} value
 * @return {!proto.cometbft.abci.v1beta2.CommitInfo} returns this
*/
proto.cometbft.abci.v1beta2.CommitInfo.prototype.setVotesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.cometbft.abci.v1beta1.VoteInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cometbft.abci.v1beta1.VoteInfo}
 */
proto.cometbft.abci.v1beta2.CommitInfo.prototype.addVotes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.cometbft.abci.v1beta1.VoteInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cometbft.abci.v1beta2.CommitInfo} returns this
 */
proto.cometbft.abci.v1beta2.CommitInfo.prototype.clearVotesList = function() {
  return this.setVotesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cometbft.abci.v1beta2.ExtendedCommitInfo.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta2.ExtendedCommitInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta2.ExtendedCommitInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta2.ExtendedCommitInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.ExtendedCommitInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    round: jspb.Message.getFieldWithDefault(msg, 1, 0),
    votesList: jspb.Message.toObjectList(msg.getVotesList(),
    proto.cometbft.abci.v1beta2.ExtendedVoteInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta2.ExtendedCommitInfo}
 */
proto.cometbft.abci.v1beta2.ExtendedCommitInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta2.ExtendedCommitInfo;
  return proto.cometbft.abci.v1beta2.ExtendedCommitInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta2.ExtendedCommitInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta2.ExtendedCommitInfo}
 */
proto.cometbft.abci.v1beta2.ExtendedCommitInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRound(value);
      break;
    case 2:
      var value = new proto.cometbft.abci.v1beta2.ExtendedVoteInfo;
      reader.readMessage(value,proto.cometbft.abci.v1beta2.ExtendedVoteInfo.deserializeBinaryFromReader);
      msg.addVotes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta2.ExtendedCommitInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta2.ExtendedCommitInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta2.ExtendedCommitInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.ExtendedCommitInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRound();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getVotesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.cometbft.abci.v1beta2.ExtendedVoteInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 round = 1;
 * @return {number}
 */
proto.cometbft.abci.v1beta2.ExtendedCommitInfo.prototype.getRound = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.abci.v1beta2.ExtendedCommitInfo} returns this
 */
proto.cometbft.abci.v1beta2.ExtendedCommitInfo.prototype.setRound = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated ExtendedVoteInfo votes = 2;
 * @return {!Array<!proto.cometbft.abci.v1beta2.ExtendedVoteInfo>}
 */
proto.cometbft.abci.v1beta2.ExtendedCommitInfo.prototype.getVotesList = function() {
  return /** @type{!Array<!proto.cometbft.abci.v1beta2.ExtendedVoteInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cometbft.abci.v1beta2.ExtendedVoteInfo, 2));
};


/**
 * @param {!Array<!proto.cometbft.abci.v1beta2.ExtendedVoteInfo>} value
 * @return {!proto.cometbft.abci.v1beta2.ExtendedCommitInfo} returns this
*/
proto.cometbft.abci.v1beta2.ExtendedCommitInfo.prototype.setVotesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.cometbft.abci.v1beta2.ExtendedVoteInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cometbft.abci.v1beta2.ExtendedVoteInfo}
 */
proto.cometbft.abci.v1beta2.ExtendedCommitInfo.prototype.addVotes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.cometbft.abci.v1beta2.ExtendedVoteInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cometbft.abci.v1beta2.ExtendedCommitInfo} returns this
 */
proto.cometbft.abci.v1beta2.ExtendedCommitInfo.prototype.clearVotesList = function() {
  return this.setVotesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cometbft.abci.v1beta2.Event.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta2.Event.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta2.Event.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta2.Event} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.Event.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    attributesList: jspb.Message.toObjectList(msg.getAttributesList(),
    proto.cometbft.abci.v1beta2.EventAttribute.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta2.Event}
 */
proto.cometbft.abci.v1beta2.Event.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta2.Event;
  return proto.cometbft.abci.v1beta2.Event.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta2.Event} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta2.Event}
 */
proto.cometbft.abci.v1beta2.Event.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = new proto.cometbft.abci.v1beta2.EventAttribute;
      reader.readMessage(value,proto.cometbft.abci.v1beta2.EventAttribute.deserializeBinaryFromReader);
      msg.addAttributes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta2.Event.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta2.Event.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta2.Event} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.Event.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAttributesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.cometbft.abci.v1beta2.EventAttribute.serializeBinaryToWriter
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.cometbft.abci.v1beta2.Event.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cometbft.abci.v1beta2.Event} returns this
 */
proto.cometbft.abci.v1beta2.Event.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated EventAttribute attributes = 2;
 * @return {!Array<!proto.cometbft.abci.v1beta2.EventAttribute>}
 */
proto.cometbft.abci.v1beta2.Event.prototype.getAttributesList = function() {
  return /** @type{!Array<!proto.cometbft.abci.v1beta2.EventAttribute>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cometbft.abci.v1beta2.EventAttribute, 2));
};


/**
 * @param {!Array<!proto.cometbft.abci.v1beta2.EventAttribute>} value
 * @return {!proto.cometbft.abci.v1beta2.Event} returns this
*/
proto.cometbft.abci.v1beta2.Event.prototype.setAttributesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.cometbft.abci.v1beta2.EventAttribute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cometbft.abci.v1beta2.EventAttribute}
 */
proto.cometbft.abci.v1beta2.Event.prototype.addAttributes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.cometbft.abci.v1beta2.EventAttribute, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cometbft.abci.v1beta2.Event} returns this
 */
proto.cometbft.abci.v1beta2.Event.prototype.clearAttributesList = function() {
  return this.setAttributesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta2.EventAttribute.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta2.EventAttribute.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta2.EventAttribute} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.EventAttribute.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, ""),
    index: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta2.EventAttribute}
 */
proto.cometbft.abci.v1beta2.EventAttribute.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta2.EventAttribute;
  return proto.cometbft.abci.v1beta2.EventAttribute.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta2.EventAttribute} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta2.EventAttribute}
 */
proto.cometbft.abci.v1beta2.EventAttribute.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIndex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta2.EventAttribute.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta2.EventAttribute.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta2.EventAttribute} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.EventAttribute.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIndex();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.cometbft.abci.v1beta2.EventAttribute.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cometbft.abci.v1beta2.EventAttribute} returns this
 */
proto.cometbft.abci.v1beta2.EventAttribute.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.cometbft.abci.v1beta2.EventAttribute.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cometbft.abci.v1beta2.EventAttribute} returns this
 */
proto.cometbft.abci.v1beta2.EventAttribute.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool index = 3;
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.EventAttribute.prototype.getIndex = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cometbft.abci.v1beta2.EventAttribute} returns this
 */
proto.cometbft.abci.v1beta2.EventAttribute.prototype.setIndex = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta2.ExtendedVoteInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta2.ExtendedVoteInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta2.ExtendedVoteInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.ExtendedVoteInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    validator: (f = msg.getValidator()) && cometbft_abci_v1beta1_types_pb.Validator.toObject(includeInstance, f),
    signedLastBlock: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    voteExtension: msg.getVoteExtension_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta2.ExtendedVoteInfo}
 */
proto.cometbft.abci.v1beta2.ExtendedVoteInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta2.ExtendedVoteInfo;
  return proto.cometbft.abci.v1beta2.ExtendedVoteInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta2.ExtendedVoteInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta2.ExtendedVoteInfo}
 */
proto.cometbft.abci.v1beta2.ExtendedVoteInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cometbft_abci_v1beta1_types_pb.Validator;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.Validator.deserializeBinaryFromReader);
      msg.setValidator(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSignedLastBlock(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setVoteExtension(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta2.ExtendedVoteInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta2.ExtendedVoteInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta2.ExtendedVoteInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.ExtendedVoteInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidator();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cometbft_abci_v1beta1_types_pb.Validator.serializeBinaryToWriter
    );
  }
  f = message.getSignedLastBlock();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getVoteExtension_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional cometbft.abci.v1beta1.Validator validator = 1;
 * @return {?proto.cometbft.abci.v1beta1.Validator}
 */
proto.cometbft.abci.v1beta2.ExtendedVoteInfo.prototype.getValidator = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.Validator} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.Validator, 1));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.Validator|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.ExtendedVoteInfo} returns this
*/
proto.cometbft.abci.v1beta2.ExtendedVoteInfo.prototype.setValidator = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.ExtendedVoteInfo} returns this
 */
proto.cometbft.abci.v1beta2.ExtendedVoteInfo.prototype.clearValidator = function() {
  return this.setValidator(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.ExtendedVoteInfo.prototype.hasValidator = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool signed_last_block = 2;
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.ExtendedVoteInfo.prototype.getSignedLastBlock = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cometbft.abci.v1beta2.ExtendedVoteInfo} returns this
 */
proto.cometbft.abci.v1beta2.ExtendedVoteInfo.prototype.setSignedLastBlock = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bytes vote_extension = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cometbft.abci.v1beta2.ExtendedVoteInfo.prototype.getVoteExtension = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes vote_extension = 3;
 * This is a type-conversion wrapper around `getVoteExtension()`
 * @return {string}
 */
proto.cometbft.abci.v1beta2.ExtendedVoteInfo.prototype.getVoteExtension_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getVoteExtension()));
};


/**
 * optional bytes vote_extension = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getVoteExtension()`
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta2.ExtendedVoteInfo.prototype.getVoteExtension_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getVoteExtension()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cometbft.abci.v1beta2.ExtendedVoteInfo} returns this
 */
proto.cometbft.abci.v1beta2.ExtendedVoteInfo.prototype.setVoteExtension = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta2.Misbehavior.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta2.Misbehavior.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta2.Misbehavior} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.Misbehavior.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    validator: (f = msg.getValidator()) && cometbft_abci_v1beta1_types_pb.Validator.toObject(includeInstance, f),
    height: jspb.Message.getFieldWithDefault(msg, 3, 0),
    time: (f = msg.getTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    totalVotingPower: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta2.Misbehavior}
 */
proto.cometbft.abci.v1beta2.Misbehavior.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta2.Misbehavior;
  return proto.cometbft.abci.v1beta2.Misbehavior.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta2.Misbehavior} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta2.Misbehavior}
 */
proto.cometbft.abci.v1beta2.Misbehavior.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cometbft.abci.v1beta2.MisbehaviorType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new cometbft_abci_v1beta1_types_pb.Validator;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.Validator.deserializeBinaryFromReader);
      msg.setValidator(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHeight(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalVotingPower(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta2.Misbehavior.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta2.Misbehavior.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta2.Misbehavior} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta2.Misbehavior.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getValidator();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cometbft_abci_v1beta1_types_pb.Validator.serializeBinaryToWriter
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTotalVotingPower();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional MisbehaviorType type = 1;
 * @return {!proto.cometbft.abci.v1beta2.MisbehaviorType}
 */
proto.cometbft.abci.v1beta2.Misbehavior.prototype.getType = function() {
  return /** @type {!proto.cometbft.abci.v1beta2.MisbehaviorType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cometbft.abci.v1beta2.MisbehaviorType} value
 * @return {!proto.cometbft.abci.v1beta2.Misbehavior} returns this
 */
proto.cometbft.abci.v1beta2.Misbehavior.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional cometbft.abci.v1beta1.Validator validator = 2;
 * @return {?proto.cometbft.abci.v1beta1.Validator}
 */
proto.cometbft.abci.v1beta2.Misbehavior.prototype.getValidator = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.Validator} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.Validator, 2));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.Validator|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.Misbehavior} returns this
*/
proto.cometbft.abci.v1beta2.Misbehavior.prototype.setValidator = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.Misbehavior} returns this
 */
proto.cometbft.abci.v1beta2.Misbehavior.prototype.clearValidator = function() {
  return this.setValidator(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.Misbehavior.prototype.hasValidator = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 height = 3;
 * @return {number}
 */
proto.cometbft.abci.v1beta2.Misbehavior.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.abci.v1beta2.Misbehavior} returns this
 */
proto.cometbft.abci.v1beta2.Misbehavior.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp time = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.cometbft.abci.v1beta2.Misbehavior.prototype.getTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.cometbft.abci.v1beta2.Misbehavior} returns this
*/
proto.cometbft.abci.v1beta2.Misbehavior.prototype.setTime = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta2.Misbehavior} returns this
 */
proto.cometbft.abci.v1beta2.Misbehavior.prototype.clearTime = function() {
  return this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta2.Misbehavior.prototype.hasTime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int64 total_voting_power = 5;
 * @return {number}
 */
proto.cometbft.abci.v1beta2.Misbehavior.prototype.getTotalVotingPower = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.abci.v1beta2.Misbehavior} returns this
 */
proto.cometbft.abci.v1beta2.Misbehavior.prototype.setTotalVotingPower = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * @enum {number}
 */
proto.cometbft.abci.v1beta2.MisbehaviorType = {
  UNKNOWN: 0,
  DUPLICATE_VOTE: 1,
  LIGHT_CLIENT_ATTACK: 2
};

goog.object.extend(exports, proto.cometbft.abci.v1beta2);
