// source: cometbft/abci/v1beta3/types.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var cometbft_abci_v1beta1_types_pb = require('../../../cometbft/abci/v1beta1/types_pb.js');
goog.object.extend(proto, cometbft_abci_v1beta1_types_pb);
var cometbft_abci_v1beta2_types_pb = require('../../../cometbft/abci/v1beta2/types_pb.js');
goog.object.extend(proto, cometbft_abci_v1beta2_types_pb);
var cometbft_types_v1_params_pb = require('../../../cometbft/types/v1/params_pb.js');
goog.object.extend(proto, cometbft_types_v1_params_pb);
var cometbft_types_v1beta1_validator_pb = require('../../../cometbft/types/v1beta1/validator_pb.js');
goog.object.extend(proto, cometbft_types_v1beta1_validator_pb);
var gogoproto_gogo_pb = require('../../../gogoproto/gogo_pb.js');
goog.object.extend(proto, gogoproto_gogo_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.cometbft.abci.v1beta3.CommitInfo', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta3.ExecTxResult', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta3.ExtendedCommitInfo', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta3.ExtendedVoteInfo', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta3.Request', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta3.Request.ValueCase', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta3.RequestExtendVote', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta3.RequestFinalizeBlock', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta3.RequestInitChain', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta3.RequestPrepareProposal', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta3.RequestProcessProposal', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta3.Response', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta3.Response.ValueCase', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta3.ResponseCheckTx', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta3.ResponseCommit', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta3.ResponseExtendVote', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta3.ResponseFinalizeBlock', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta3.ResponseInitChain', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta3.ResponseVerifyVoteExtension', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta3.ResponseVerifyVoteExtension.VerifyStatus', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta3.TxResult', null, global);
goog.exportSymbol('proto.cometbft.abci.v1beta3.VoteInfo', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta3.Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.cometbft.abci.v1beta3.Request.oneofGroups_);
};
goog.inherits(proto.cometbft.abci.v1beta3.Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta3.Request.displayName = 'proto.cometbft.abci.v1beta3.Request';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta3.RequestInitChain = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cometbft.abci.v1beta3.RequestInitChain.repeatedFields_, null);
};
goog.inherits(proto.cometbft.abci.v1beta3.RequestInitChain, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta3.RequestInitChain.displayName = 'proto.cometbft.abci.v1beta3.RequestInitChain';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta3.RequestPrepareProposal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cometbft.abci.v1beta3.RequestPrepareProposal.repeatedFields_, null);
};
goog.inherits(proto.cometbft.abci.v1beta3.RequestPrepareProposal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta3.RequestPrepareProposal.displayName = 'proto.cometbft.abci.v1beta3.RequestPrepareProposal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta3.RequestProcessProposal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cometbft.abci.v1beta3.RequestProcessProposal.repeatedFields_, null);
};
goog.inherits(proto.cometbft.abci.v1beta3.RequestProcessProposal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta3.RequestProcessProposal.displayName = 'proto.cometbft.abci.v1beta3.RequestProcessProposal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta3.RequestExtendVote = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cometbft.abci.v1beta3.RequestExtendVote.repeatedFields_, null);
};
goog.inherits(proto.cometbft.abci.v1beta3.RequestExtendVote, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta3.RequestExtendVote.displayName = 'proto.cometbft.abci.v1beta3.RequestExtendVote';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension.displayName = 'proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta3.RequestFinalizeBlock = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cometbft.abci.v1beta3.RequestFinalizeBlock.repeatedFields_, null);
};
goog.inherits(proto.cometbft.abci.v1beta3.RequestFinalizeBlock, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta3.RequestFinalizeBlock.displayName = 'proto.cometbft.abci.v1beta3.RequestFinalizeBlock';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta3.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.cometbft.abci.v1beta3.Response.oneofGroups_);
};
goog.inherits(proto.cometbft.abci.v1beta3.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta3.Response.displayName = 'proto.cometbft.abci.v1beta3.Response';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta3.ResponseInitChain = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cometbft.abci.v1beta3.ResponseInitChain.repeatedFields_, null);
};
goog.inherits(proto.cometbft.abci.v1beta3.ResponseInitChain, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta3.ResponseInitChain.displayName = 'proto.cometbft.abci.v1beta3.ResponseInitChain';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta3.ResponseCheckTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cometbft.abci.v1beta3.ResponseCheckTx.repeatedFields_, null);
};
goog.inherits(proto.cometbft.abci.v1beta3.ResponseCheckTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta3.ResponseCheckTx.displayName = 'proto.cometbft.abci.v1beta3.ResponseCheckTx';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta3.ResponseCommit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cometbft.abci.v1beta3.ResponseCommit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta3.ResponseCommit.displayName = 'proto.cometbft.abci.v1beta3.ResponseCommit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta3.ResponseExtendVote = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cometbft.abci.v1beta3.ResponseExtendVote, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta3.ResponseExtendVote.displayName = 'proto.cometbft.abci.v1beta3.ResponseExtendVote';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta3.ResponseVerifyVoteExtension = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cometbft.abci.v1beta3.ResponseVerifyVoteExtension, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta3.ResponseVerifyVoteExtension.displayName = 'proto.cometbft.abci.v1beta3.ResponseVerifyVoteExtension';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta3.ResponseFinalizeBlock = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cometbft.abci.v1beta3.ResponseFinalizeBlock.repeatedFields_, null);
};
goog.inherits(proto.cometbft.abci.v1beta3.ResponseFinalizeBlock, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta3.ResponseFinalizeBlock.displayName = 'proto.cometbft.abci.v1beta3.ResponseFinalizeBlock';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta3.VoteInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cometbft.abci.v1beta3.VoteInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta3.VoteInfo.displayName = 'proto.cometbft.abci.v1beta3.VoteInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta3.ExtendedVoteInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cometbft.abci.v1beta3.ExtendedVoteInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta3.ExtendedVoteInfo.displayName = 'proto.cometbft.abci.v1beta3.ExtendedVoteInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta3.CommitInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cometbft.abci.v1beta3.CommitInfo.repeatedFields_, null);
};
goog.inherits(proto.cometbft.abci.v1beta3.CommitInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta3.CommitInfo.displayName = 'proto.cometbft.abci.v1beta3.CommitInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta3.ExtendedCommitInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cometbft.abci.v1beta3.ExtendedCommitInfo.repeatedFields_, null);
};
goog.inherits(proto.cometbft.abci.v1beta3.ExtendedCommitInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta3.ExtendedCommitInfo.displayName = 'proto.cometbft.abci.v1beta3.ExtendedCommitInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta3.ExecTxResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cometbft.abci.v1beta3.ExecTxResult.repeatedFields_, null);
};
goog.inherits(proto.cometbft.abci.v1beta3.ExecTxResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta3.ExecTxResult.displayName = 'proto.cometbft.abci.v1beta3.ExecTxResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.abci.v1beta3.TxResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cometbft.abci.v1beta3.TxResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.abci.v1beta3.TxResult.displayName = 'proto.cometbft.abci.v1beta3.TxResult';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.cometbft.abci.v1beta3.Request.oneofGroups_ = [[1,2,3,5,6,8,11,12,13,14,15,16,17,18,19,20]];

/**
 * @enum {number}
 */
proto.cometbft.abci.v1beta3.Request.ValueCase = {
  VALUE_NOT_SET: 0,
  ECHO: 1,
  FLUSH: 2,
  INFO: 3,
  INIT_CHAIN: 5,
  QUERY: 6,
  CHECK_TX: 8,
  COMMIT: 11,
  LIST_SNAPSHOTS: 12,
  OFFER_SNAPSHOT: 13,
  LOAD_SNAPSHOT_CHUNK: 14,
  APPLY_SNAPSHOT_CHUNK: 15,
  PREPARE_PROPOSAL: 16,
  PROCESS_PROPOSAL: 17,
  EXTEND_VOTE: 18,
  VERIFY_VOTE_EXTENSION: 19,
  FINALIZE_BLOCK: 20
};

/**
 * @return {proto.cometbft.abci.v1beta3.Request.ValueCase}
 */
proto.cometbft.abci.v1beta3.Request.prototype.getValueCase = function() {
  return /** @type {proto.cometbft.abci.v1beta3.Request.ValueCase} */(jspb.Message.computeOneofCase(this, proto.cometbft.abci.v1beta3.Request.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta3.Request.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta3.Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta3.Request} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.Request.toObject = function(includeInstance, msg) {
  var f, obj = {
    echo: (f = msg.getEcho()) && cometbft_abci_v1beta1_types_pb.RequestEcho.toObject(includeInstance, f),
    flush: (f = msg.getFlush()) && cometbft_abci_v1beta1_types_pb.RequestFlush.toObject(includeInstance, f),
    info: (f = msg.getInfo()) && cometbft_abci_v1beta2_types_pb.RequestInfo.toObject(includeInstance, f),
    initChain: (f = msg.getInitChain()) && proto.cometbft.abci.v1beta3.RequestInitChain.toObject(includeInstance, f),
    query: (f = msg.getQuery()) && cometbft_abci_v1beta1_types_pb.RequestQuery.toObject(includeInstance, f),
    checkTx: (f = msg.getCheckTx()) && cometbft_abci_v1beta1_types_pb.RequestCheckTx.toObject(includeInstance, f),
    commit: (f = msg.getCommit()) && cometbft_abci_v1beta1_types_pb.RequestCommit.toObject(includeInstance, f),
    listSnapshots: (f = msg.getListSnapshots()) && cometbft_abci_v1beta1_types_pb.RequestListSnapshots.toObject(includeInstance, f),
    offerSnapshot: (f = msg.getOfferSnapshot()) && cometbft_abci_v1beta1_types_pb.RequestOfferSnapshot.toObject(includeInstance, f),
    loadSnapshotChunk: (f = msg.getLoadSnapshotChunk()) && cometbft_abci_v1beta1_types_pb.RequestLoadSnapshotChunk.toObject(includeInstance, f),
    applySnapshotChunk: (f = msg.getApplySnapshotChunk()) && cometbft_abci_v1beta1_types_pb.RequestApplySnapshotChunk.toObject(includeInstance, f),
    prepareProposal: (f = msg.getPrepareProposal()) && proto.cometbft.abci.v1beta3.RequestPrepareProposal.toObject(includeInstance, f),
    processProposal: (f = msg.getProcessProposal()) && proto.cometbft.abci.v1beta3.RequestProcessProposal.toObject(includeInstance, f),
    extendVote: (f = msg.getExtendVote()) && proto.cometbft.abci.v1beta3.RequestExtendVote.toObject(includeInstance, f),
    verifyVoteExtension: (f = msg.getVerifyVoteExtension()) && proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension.toObject(includeInstance, f),
    finalizeBlock: (f = msg.getFinalizeBlock()) && proto.cometbft.abci.v1beta3.RequestFinalizeBlock.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta3.Request}
 */
proto.cometbft.abci.v1beta3.Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta3.Request;
  return proto.cometbft.abci.v1beta3.Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta3.Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta3.Request}
 */
proto.cometbft.abci.v1beta3.Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cometbft_abci_v1beta1_types_pb.RequestEcho;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.RequestEcho.deserializeBinaryFromReader);
      msg.setEcho(value);
      break;
    case 2:
      var value = new cometbft_abci_v1beta1_types_pb.RequestFlush;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.RequestFlush.deserializeBinaryFromReader);
      msg.setFlush(value);
      break;
    case 3:
      var value = new cometbft_abci_v1beta2_types_pb.RequestInfo;
      reader.readMessage(value,cometbft_abci_v1beta2_types_pb.RequestInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    case 5:
      var value = new proto.cometbft.abci.v1beta3.RequestInitChain;
      reader.readMessage(value,proto.cometbft.abci.v1beta3.RequestInitChain.deserializeBinaryFromReader);
      msg.setInitChain(value);
      break;
    case 6:
      var value = new cometbft_abci_v1beta1_types_pb.RequestQuery;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.RequestQuery.deserializeBinaryFromReader);
      msg.setQuery(value);
      break;
    case 8:
      var value = new cometbft_abci_v1beta1_types_pb.RequestCheckTx;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.RequestCheckTx.deserializeBinaryFromReader);
      msg.setCheckTx(value);
      break;
    case 11:
      var value = new cometbft_abci_v1beta1_types_pb.RequestCommit;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.RequestCommit.deserializeBinaryFromReader);
      msg.setCommit(value);
      break;
    case 12:
      var value = new cometbft_abci_v1beta1_types_pb.RequestListSnapshots;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.RequestListSnapshots.deserializeBinaryFromReader);
      msg.setListSnapshots(value);
      break;
    case 13:
      var value = new cometbft_abci_v1beta1_types_pb.RequestOfferSnapshot;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.RequestOfferSnapshot.deserializeBinaryFromReader);
      msg.setOfferSnapshot(value);
      break;
    case 14:
      var value = new cometbft_abci_v1beta1_types_pb.RequestLoadSnapshotChunk;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.RequestLoadSnapshotChunk.deserializeBinaryFromReader);
      msg.setLoadSnapshotChunk(value);
      break;
    case 15:
      var value = new cometbft_abci_v1beta1_types_pb.RequestApplySnapshotChunk;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.RequestApplySnapshotChunk.deserializeBinaryFromReader);
      msg.setApplySnapshotChunk(value);
      break;
    case 16:
      var value = new proto.cometbft.abci.v1beta3.RequestPrepareProposal;
      reader.readMessage(value,proto.cometbft.abci.v1beta3.RequestPrepareProposal.deserializeBinaryFromReader);
      msg.setPrepareProposal(value);
      break;
    case 17:
      var value = new proto.cometbft.abci.v1beta3.RequestProcessProposal;
      reader.readMessage(value,proto.cometbft.abci.v1beta3.RequestProcessProposal.deserializeBinaryFromReader);
      msg.setProcessProposal(value);
      break;
    case 18:
      var value = new proto.cometbft.abci.v1beta3.RequestExtendVote;
      reader.readMessage(value,proto.cometbft.abci.v1beta3.RequestExtendVote.deserializeBinaryFromReader);
      msg.setExtendVote(value);
      break;
    case 19:
      var value = new proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension;
      reader.readMessage(value,proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension.deserializeBinaryFromReader);
      msg.setVerifyVoteExtension(value);
      break;
    case 20:
      var value = new proto.cometbft.abci.v1beta3.RequestFinalizeBlock;
      reader.readMessage(value,proto.cometbft.abci.v1beta3.RequestFinalizeBlock.deserializeBinaryFromReader);
      msg.setFinalizeBlock(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta3.Request.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta3.Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.Request.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEcho();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cometbft_abci_v1beta1_types_pb.RequestEcho.serializeBinaryToWriter
    );
  }
  f = message.getFlush();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cometbft_abci_v1beta1_types_pb.RequestFlush.serializeBinaryToWriter
    );
  }
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cometbft_abci_v1beta2_types_pb.RequestInfo.serializeBinaryToWriter
    );
  }
  f = message.getInitChain();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.cometbft.abci.v1beta3.RequestInitChain.serializeBinaryToWriter
    );
  }
  f = message.getQuery();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      cometbft_abci_v1beta1_types_pb.RequestQuery.serializeBinaryToWriter
    );
  }
  f = message.getCheckTx();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      cometbft_abci_v1beta1_types_pb.RequestCheckTx.serializeBinaryToWriter
    );
  }
  f = message.getCommit();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      cometbft_abci_v1beta1_types_pb.RequestCommit.serializeBinaryToWriter
    );
  }
  f = message.getListSnapshots();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      cometbft_abci_v1beta1_types_pb.RequestListSnapshots.serializeBinaryToWriter
    );
  }
  f = message.getOfferSnapshot();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      cometbft_abci_v1beta1_types_pb.RequestOfferSnapshot.serializeBinaryToWriter
    );
  }
  f = message.getLoadSnapshotChunk();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      cometbft_abci_v1beta1_types_pb.RequestLoadSnapshotChunk.serializeBinaryToWriter
    );
  }
  f = message.getApplySnapshotChunk();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      cometbft_abci_v1beta1_types_pb.RequestApplySnapshotChunk.serializeBinaryToWriter
    );
  }
  f = message.getPrepareProposal();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.cometbft.abci.v1beta3.RequestPrepareProposal.serializeBinaryToWriter
    );
  }
  f = message.getProcessProposal();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.cometbft.abci.v1beta3.RequestProcessProposal.serializeBinaryToWriter
    );
  }
  f = message.getExtendVote();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.cometbft.abci.v1beta3.RequestExtendVote.serializeBinaryToWriter
    );
  }
  f = message.getVerifyVoteExtension();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension.serializeBinaryToWriter
    );
  }
  f = message.getFinalizeBlock();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.cometbft.abci.v1beta3.RequestFinalizeBlock.serializeBinaryToWriter
    );
  }
};


/**
 * optional cometbft.abci.v1beta1.RequestEcho echo = 1;
 * @return {?proto.cometbft.abci.v1beta1.RequestEcho}
 */
proto.cometbft.abci.v1beta3.Request.prototype.getEcho = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.RequestEcho} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.RequestEcho, 1));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.RequestEcho|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.Request} returns this
*/
proto.cometbft.abci.v1beta3.Request.prototype.setEcho = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.cometbft.abci.v1beta3.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.Request} returns this
 */
proto.cometbft.abci.v1beta3.Request.prototype.clearEcho = function() {
  return this.setEcho(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.Request.prototype.hasEcho = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional cometbft.abci.v1beta1.RequestFlush flush = 2;
 * @return {?proto.cometbft.abci.v1beta1.RequestFlush}
 */
proto.cometbft.abci.v1beta3.Request.prototype.getFlush = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.RequestFlush} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.RequestFlush, 2));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.RequestFlush|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.Request} returns this
*/
proto.cometbft.abci.v1beta3.Request.prototype.setFlush = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.cometbft.abci.v1beta3.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.Request} returns this
 */
proto.cometbft.abci.v1beta3.Request.prototype.clearFlush = function() {
  return this.setFlush(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.Request.prototype.hasFlush = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional cometbft.abci.v1beta2.RequestInfo info = 3;
 * @return {?proto.cometbft.abci.v1beta2.RequestInfo}
 */
proto.cometbft.abci.v1beta3.Request.prototype.getInfo = function() {
  return /** @type{?proto.cometbft.abci.v1beta2.RequestInfo} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta2_types_pb.RequestInfo, 3));
};


/**
 * @param {?proto.cometbft.abci.v1beta2.RequestInfo|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.Request} returns this
*/
proto.cometbft.abci.v1beta3.Request.prototype.setInfo = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.cometbft.abci.v1beta3.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.Request} returns this
 */
proto.cometbft.abci.v1beta3.Request.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.Request.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional RequestInitChain init_chain = 5;
 * @return {?proto.cometbft.abci.v1beta3.RequestInitChain}
 */
proto.cometbft.abci.v1beta3.Request.prototype.getInitChain = function() {
  return /** @type{?proto.cometbft.abci.v1beta3.RequestInitChain} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.abci.v1beta3.RequestInitChain, 5));
};


/**
 * @param {?proto.cometbft.abci.v1beta3.RequestInitChain|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.Request} returns this
*/
proto.cometbft.abci.v1beta3.Request.prototype.setInitChain = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.cometbft.abci.v1beta3.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.Request} returns this
 */
proto.cometbft.abci.v1beta3.Request.prototype.clearInitChain = function() {
  return this.setInitChain(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.Request.prototype.hasInitChain = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional cometbft.abci.v1beta1.RequestQuery query = 6;
 * @return {?proto.cometbft.abci.v1beta1.RequestQuery}
 */
proto.cometbft.abci.v1beta3.Request.prototype.getQuery = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.RequestQuery} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.RequestQuery, 6));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.RequestQuery|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.Request} returns this
*/
proto.cometbft.abci.v1beta3.Request.prototype.setQuery = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.cometbft.abci.v1beta3.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.Request} returns this
 */
proto.cometbft.abci.v1beta3.Request.prototype.clearQuery = function() {
  return this.setQuery(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.Request.prototype.hasQuery = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional cometbft.abci.v1beta1.RequestCheckTx check_tx = 8;
 * @return {?proto.cometbft.abci.v1beta1.RequestCheckTx}
 */
proto.cometbft.abci.v1beta3.Request.prototype.getCheckTx = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.RequestCheckTx} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.RequestCheckTx, 8));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.RequestCheckTx|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.Request} returns this
*/
proto.cometbft.abci.v1beta3.Request.prototype.setCheckTx = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.cometbft.abci.v1beta3.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.Request} returns this
 */
proto.cometbft.abci.v1beta3.Request.prototype.clearCheckTx = function() {
  return this.setCheckTx(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.Request.prototype.hasCheckTx = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional cometbft.abci.v1beta1.RequestCommit commit = 11;
 * @return {?proto.cometbft.abci.v1beta1.RequestCommit}
 */
proto.cometbft.abci.v1beta3.Request.prototype.getCommit = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.RequestCommit} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.RequestCommit, 11));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.RequestCommit|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.Request} returns this
*/
proto.cometbft.abci.v1beta3.Request.prototype.setCommit = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.cometbft.abci.v1beta3.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.Request} returns this
 */
proto.cometbft.abci.v1beta3.Request.prototype.clearCommit = function() {
  return this.setCommit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.Request.prototype.hasCommit = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional cometbft.abci.v1beta1.RequestListSnapshots list_snapshots = 12;
 * @return {?proto.cometbft.abci.v1beta1.RequestListSnapshots}
 */
proto.cometbft.abci.v1beta3.Request.prototype.getListSnapshots = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.RequestListSnapshots} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.RequestListSnapshots, 12));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.RequestListSnapshots|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.Request} returns this
*/
proto.cometbft.abci.v1beta3.Request.prototype.setListSnapshots = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.cometbft.abci.v1beta3.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.Request} returns this
 */
proto.cometbft.abci.v1beta3.Request.prototype.clearListSnapshots = function() {
  return this.setListSnapshots(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.Request.prototype.hasListSnapshots = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional cometbft.abci.v1beta1.RequestOfferSnapshot offer_snapshot = 13;
 * @return {?proto.cometbft.abci.v1beta1.RequestOfferSnapshot}
 */
proto.cometbft.abci.v1beta3.Request.prototype.getOfferSnapshot = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.RequestOfferSnapshot} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.RequestOfferSnapshot, 13));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.RequestOfferSnapshot|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.Request} returns this
*/
proto.cometbft.abci.v1beta3.Request.prototype.setOfferSnapshot = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.cometbft.abci.v1beta3.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.Request} returns this
 */
proto.cometbft.abci.v1beta3.Request.prototype.clearOfferSnapshot = function() {
  return this.setOfferSnapshot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.Request.prototype.hasOfferSnapshot = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional cometbft.abci.v1beta1.RequestLoadSnapshotChunk load_snapshot_chunk = 14;
 * @return {?proto.cometbft.abci.v1beta1.RequestLoadSnapshotChunk}
 */
proto.cometbft.abci.v1beta3.Request.prototype.getLoadSnapshotChunk = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.RequestLoadSnapshotChunk} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.RequestLoadSnapshotChunk, 14));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.RequestLoadSnapshotChunk|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.Request} returns this
*/
proto.cometbft.abci.v1beta3.Request.prototype.setLoadSnapshotChunk = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.cometbft.abci.v1beta3.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.Request} returns this
 */
proto.cometbft.abci.v1beta3.Request.prototype.clearLoadSnapshotChunk = function() {
  return this.setLoadSnapshotChunk(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.Request.prototype.hasLoadSnapshotChunk = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional cometbft.abci.v1beta1.RequestApplySnapshotChunk apply_snapshot_chunk = 15;
 * @return {?proto.cometbft.abci.v1beta1.RequestApplySnapshotChunk}
 */
proto.cometbft.abci.v1beta3.Request.prototype.getApplySnapshotChunk = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.RequestApplySnapshotChunk} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.RequestApplySnapshotChunk, 15));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.RequestApplySnapshotChunk|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.Request} returns this
*/
proto.cometbft.abci.v1beta3.Request.prototype.setApplySnapshotChunk = function(value) {
  return jspb.Message.setOneofWrapperField(this, 15, proto.cometbft.abci.v1beta3.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.Request} returns this
 */
proto.cometbft.abci.v1beta3.Request.prototype.clearApplySnapshotChunk = function() {
  return this.setApplySnapshotChunk(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.Request.prototype.hasApplySnapshotChunk = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional RequestPrepareProposal prepare_proposal = 16;
 * @return {?proto.cometbft.abci.v1beta3.RequestPrepareProposal}
 */
proto.cometbft.abci.v1beta3.Request.prototype.getPrepareProposal = function() {
  return /** @type{?proto.cometbft.abci.v1beta3.RequestPrepareProposal} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.abci.v1beta3.RequestPrepareProposal, 16));
};


/**
 * @param {?proto.cometbft.abci.v1beta3.RequestPrepareProposal|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.Request} returns this
*/
proto.cometbft.abci.v1beta3.Request.prototype.setPrepareProposal = function(value) {
  return jspb.Message.setOneofWrapperField(this, 16, proto.cometbft.abci.v1beta3.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.Request} returns this
 */
proto.cometbft.abci.v1beta3.Request.prototype.clearPrepareProposal = function() {
  return this.setPrepareProposal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.Request.prototype.hasPrepareProposal = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional RequestProcessProposal process_proposal = 17;
 * @return {?proto.cometbft.abci.v1beta3.RequestProcessProposal}
 */
proto.cometbft.abci.v1beta3.Request.prototype.getProcessProposal = function() {
  return /** @type{?proto.cometbft.abci.v1beta3.RequestProcessProposal} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.abci.v1beta3.RequestProcessProposal, 17));
};


/**
 * @param {?proto.cometbft.abci.v1beta3.RequestProcessProposal|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.Request} returns this
*/
proto.cometbft.abci.v1beta3.Request.prototype.setProcessProposal = function(value) {
  return jspb.Message.setOneofWrapperField(this, 17, proto.cometbft.abci.v1beta3.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.Request} returns this
 */
proto.cometbft.abci.v1beta3.Request.prototype.clearProcessProposal = function() {
  return this.setProcessProposal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.Request.prototype.hasProcessProposal = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional RequestExtendVote extend_vote = 18;
 * @return {?proto.cometbft.abci.v1beta3.RequestExtendVote}
 */
proto.cometbft.abci.v1beta3.Request.prototype.getExtendVote = function() {
  return /** @type{?proto.cometbft.abci.v1beta3.RequestExtendVote} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.abci.v1beta3.RequestExtendVote, 18));
};


/**
 * @param {?proto.cometbft.abci.v1beta3.RequestExtendVote|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.Request} returns this
*/
proto.cometbft.abci.v1beta3.Request.prototype.setExtendVote = function(value) {
  return jspb.Message.setOneofWrapperField(this, 18, proto.cometbft.abci.v1beta3.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.Request} returns this
 */
proto.cometbft.abci.v1beta3.Request.prototype.clearExtendVote = function() {
  return this.setExtendVote(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.Request.prototype.hasExtendVote = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional RequestVerifyVoteExtension verify_vote_extension = 19;
 * @return {?proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension}
 */
proto.cometbft.abci.v1beta3.Request.prototype.getVerifyVoteExtension = function() {
  return /** @type{?proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension, 19));
};


/**
 * @param {?proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.Request} returns this
*/
proto.cometbft.abci.v1beta3.Request.prototype.setVerifyVoteExtension = function(value) {
  return jspb.Message.setOneofWrapperField(this, 19, proto.cometbft.abci.v1beta3.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.Request} returns this
 */
proto.cometbft.abci.v1beta3.Request.prototype.clearVerifyVoteExtension = function() {
  return this.setVerifyVoteExtension(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.Request.prototype.hasVerifyVoteExtension = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional RequestFinalizeBlock finalize_block = 20;
 * @return {?proto.cometbft.abci.v1beta3.RequestFinalizeBlock}
 */
proto.cometbft.abci.v1beta3.Request.prototype.getFinalizeBlock = function() {
  return /** @type{?proto.cometbft.abci.v1beta3.RequestFinalizeBlock} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.abci.v1beta3.RequestFinalizeBlock, 20));
};


/**
 * @param {?proto.cometbft.abci.v1beta3.RequestFinalizeBlock|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.Request} returns this
*/
proto.cometbft.abci.v1beta3.Request.prototype.setFinalizeBlock = function(value) {
  return jspb.Message.setOneofWrapperField(this, 20, proto.cometbft.abci.v1beta3.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.Request} returns this
 */
proto.cometbft.abci.v1beta3.Request.prototype.clearFinalizeBlock = function() {
  return this.setFinalizeBlock(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.Request.prototype.hasFinalizeBlock = function() {
  return jspb.Message.getField(this, 20) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cometbft.abci.v1beta3.RequestInitChain.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta3.RequestInitChain.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta3.RequestInitChain.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta3.RequestInitChain} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.RequestInitChain.toObject = function(includeInstance, msg) {
  var f, obj = {
    time: (f = msg.getTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    chainId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    consensusParams: (f = msg.getConsensusParams()) && cometbft_types_v1_params_pb.ConsensusParams.toObject(includeInstance, f),
    validatorsList: jspb.Message.toObjectList(msg.getValidatorsList(),
    cometbft_abci_v1beta1_types_pb.ValidatorUpdate.toObject, includeInstance),
    appStateBytes: msg.getAppStateBytes_asB64(),
    initialHeight: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta3.RequestInitChain}
 */
proto.cometbft.abci.v1beta3.RequestInitChain.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta3.RequestInitChain;
  return proto.cometbft.abci.v1beta3.RequestInitChain.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta3.RequestInitChain} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta3.RequestInitChain}
 */
proto.cometbft.abci.v1beta3.RequestInitChain.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChainId(value);
      break;
    case 3:
      var value = new cometbft_types_v1_params_pb.ConsensusParams;
      reader.readMessage(value,cometbft_types_v1_params_pb.ConsensusParams.deserializeBinaryFromReader);
      msg.setConsensusParams(value);
      break;
    case 4:
      var value = new cometbft_abci_v1beta1_types_pb.ValidatorUpdate;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.ValidatorUpdate.deserializeBinaryFromReader);
      msg.addValidators(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAppStateBytes(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInitialHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.RequestInitChain.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta3.RequestInitChain.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta3.RequestInitChain} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.RequestInitChain.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getChainId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getConsensusParams();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cometbft_types_v1_params_pb.ConsensusParams.serializeBinaryToWriter
    );
  }
  f = message.getValidatorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      cometbft_abci_v1beta1_types_pb.ValidatorUpdate.serializeBinaryToWriter
    );
  }
  f = message.getAppStateBytes_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getInitialHeight();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
};


/**
 * optional google.protobuf.Timestamp time = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.cometbft.abci.v1beta3.RequestInitChain.prototype.getTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.RequestInitChain} returns this
*/
proto.cometbft.abci.v1beta3.RequestInitChain.prototype.setTime = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.RequestInitChain} returns this
 */
proto.cometbft.abci.v1beta3.RequestInitChain.prototype.clearTime = function() {
  return this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.RequestInitChain.prototype.hasTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string chain_id = 2;
 * @return {string}
 */
proto.cometbft.abci.v1beta3.RequestInitChain.prototype.getChainId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cometbft.abci.v1beta3.RequestInitChain} returns this
 */
proto.cometbft.abci.v1beta3.RequestInitChain.prototype.setChainId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional cometbft.types.v1.ConsensusParams consensus_params = 3;
 * @return {?proto.cometbft.types.v1.ConsensusParams}
 */
proto.cometbft.abci.v1beta3.RequestInitChain.prototype.getConsensusParams = function() {
  return /** @type{?proto.cometbft.types.v1.ConsensusParams} */ (
    jspb.Message.getWrapperField(this, cometbft_types_v1_params_pb.ConsensusParams, 3));
};


/**
 * @param {?proto.cometbft.types.v1.ConsensusParams|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.RequestInitChain} returns this
*/
proto.cometbft.abci.v1beta3.RequestInitChain.prototype.setConsensusParams = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.RequestInitChain} returns this
 */
proto.cometbft.abci.v1beta3.RequestInitChain.prototype.clearConsensusParams = function() {
  return this.setConsensusParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.RequestInitChain.prototype.hasConsensusParams = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated cometbft.abci.v1beta1.ValidatorUpdate validators = 4;
 * @return {!Array<!proto.cometbft.abci.v1beta1.ValidatorUpdate>}
 */
proto.cometbft.abci.v1beta3.RequestInitChain.prototype.getValidatorsList = function() {
  return /** @type{!Array<!proto.cometbft.abci.v1beta1.ValidatorUpdate>} */ (
    jspb.Message.getRepeatedWrapperField(this, cometbft_abci_v1beta1_types_pb.ValidatorUpdate, 4));
};


/**
 * @param {!Array<!proto.cometbft.abci.v1beta1.ValidatorUpdate>} value
 * @return {!proto.cometbft.abci.v1beta3.RequestInitChain} returns this
*/
proto.cometbft.abci.v1beta3.RequestInitChain.prototype.setValidatorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.cometbft.abci.v1beta1.ValidatorUpdate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cometbft.abci.v1beta1.ValidatorUpdate}
 */
proto.cometbft.abci.v1beta3.RequestInitChain.prototype.addValidators = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.cometbft.abci.v1beta1.ValidatorUpdate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cometbft.abci.v1beta3.RequestInitChain} returns this
 */
proto.cometbft.abci.v1beta3.RequestInitChain.prototype.clearValidatorsList = function() {
  return this.setValidatorsList([]);
};


/**
 * optional bytes app_state_bytes = 5;
 * @return {!(string|Uint8Array)}
 */
proto.cometbft.abci.v1beta3.RequestInitChain.prototype.getAppStateBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes app_state_bytes = 5;
 * This is a type-conversion wrapper around `getAppStateBytes()`
 * @return {string}
 */
proto.cometbft.abci.v1beta3.RequestInitChain.prototype.getAppStateBytes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAppStateBytes()));
};


/**
 * optional bytes app_state_bytes = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAppStateBytes()`
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.RequestInitChain.prototype.getAppStateBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAppStateBytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cometbft.abci.v1beta3.RequestInitChain} returns this
 */
proto.cometbft.abci.v1beta3.RequestInitChain.prototype.setAppStateBytes = function(value) {
  return jspb.Message.setProto3BytesField(this, 5, value);
};


/**
 * optional int64 initial_height = 6;
 * @return {number}
 */
proto.cometbft.abci.v1beta3.RequestInitChain.prototype.getInitialHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.abci.v1beta3.RequestInitChain} returns this
 */
proto.cometbft.abci.v1beta3.RequestInitChain.prototype.setInitialHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cometbft.abci.v1beta3.RequestPrepareProposal.repeatedFields_ = [2,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta3.RequestPrepareProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta3.RequestPrepareProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta3.RequestPrepareProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.RequestPrepareProposal.toObject = function(includeInstance, msg) {
  var f, obj = {
    maxTxBytes: jspb.Message.getFieldWithDefault(msg, 1, 0),
    txsList: msg.getTxsList_asB64(),
    localLastCommit: (f = msg.getLocalLastCommit()) && proto.cometbft.abci.v1beta3.ExtendedCommitInfo.toObject(includeInstance, f),
    misbehaviorList: jspb.Message.toObjectList(msg.getMisbehaviorList(),
    cometbft_abci_v1beta2_types_pb.Misbehavior.toObject, includeInstance),
    height: jspb.Message.getFieldWithDefault(msg, 5, 0),
    time: (f = msg.getTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    nextValidatorsHash: msg.getNextValidatorsHash_asB64(),
    proposerAddress: msg.getProposerAddress_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta3.RequestPrepareProposal}
 */
proto.cometbft.abci.v1beta3.RequestPrepareProposal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta3.RequestPrepareProposal;
  return proto.cometbft.abci.v1beta3.RequestPrepareProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta3.RequestPrepareProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta3.RequestPrepareProposal}
 */
proto.cometbft.abci.v1beta3.RequestPrepareProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxTxBytes(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addTxs(value);
      break;
    case 3:
      var value = new proto.cometbft.abci.v1beta3.ExtendedCommitInfo;
      reader.readMessage(value,proto.cometbft.abci.v1beta3.ExtendedCommitInfo.deserializeBinaryFromReader);
      msg.setLocalLastCommit(value);
      break;
    case 4:
      var value = new cometbft_abci_v1beta2_types_pb.Misbehavior;
      reader.readMessage(value,cometbft_abci_v1beta2_types_pb.Misbehavior.deserializeBinaryFromReader);
      msg.addMisbehavior(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHeight(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setNextValidatorsHash(value);
      break;
    case 8:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setProposerAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.RequestPrepareProposal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta3.RequestPrepareProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta3.RequestPrepareProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.RequestPrepareProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMaxTxBytes();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTxsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      2,
      f
    );
  }
  f = message.getLocalLastCommit();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cometbft.abci.v1beta3.ExtendedCommitInfo.serializeBinaryToWriter
    );
  }
  f = message.getMisbehaviorList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      cometbft_abci_v1beta2_types_pb.Misbehavior.serializeBinaryToWriter
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getNextValidatorsHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      7,
      f
    );
  }
  f = message.getProposerAddress_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      8,
      f
    );
  }
};


/**
 * optional int64 max_tx_bytes = 1;
 * @return {number}
 */
proto.cometbft.abci.v1beta3.RequestPrepareProposal.prototype.getMaxTxBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.abci.v1beta3.RequestPrepareProposal} returns this
 */
proto.cometbft.abci.v1beta3.RequestPrepareProposal.prototype.setMaxTxBytes = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated bytes txs = 2;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.cometbft.abci.v1beta3.RequestPrepareProposal.prototype.getTxsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * repeated bytes txs = 2;
 * This is a type-conversion wrapper around `getTxsList()`
 * @return {!Array<string>}
 */
proto.cometbft.abci.v1beta3.RequestPrepareProposal.prototype.getTxsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getTxsList()));
};


/**
 * repeated bytes txs = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.cometbft.abci.v1beta3.RequestPrepareProposal.prototype.getTxsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getTxsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.cometbft.abci.v1beta3.RequestPrepareProposal} returns this
 */
proto.cometbft.abci.v1beta3.RequestPrepareProposal.prototype.setTxsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.cometbft.abci.v1beta3.RequestPrepareProposal} returns this
 */
proto.cometbft.abci.v1beta3.RequestPrepareProposal.prototype.addTxs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cometbft.abci.v1beta3.RequestPrepareProposal} returns this
 */
proto.cometbft.abci.v1beta3.RequestPrepareProposal.prototype.clearTxsList = function() {
  return this.setTxsList([]);
};


/**
 * optional ExtendedCommitInfo local_last_commit = 3;
 * @return {?proto.cometbft.abci.v1beta3.ExtendedCommitInfo}
 */
proto.cometbft.abci.v1beta3.RequestPrepareProposal.prototype.getLocalLastCommit = function() {
  return /** @type{?proto.cometbft.abci.v1beta3.ExtendedCommitInfo} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.abci.v1beta3.ExtendedCommitInfo, 3));
};


/**
 * @param {?proto.cometbft.abci.v1beta3.ExtendedCommitInfo|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.RequestPrepareProposal} returns this
*/
proto.cometbft.abci.v1beta3.RequestPrepareProposal.prototype.setLocalLastCommit = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.RequestPrepareProposal} returns this
 */
proto.cometbft.abci.v1beta3.RequestPrepareProposal.prototype.clearLocalLastCommit = function() {
  return this.setLocalLastCommit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.RequestPrepareProposal.prototype.hasLocalLastCommit = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated cometbft.abci.v1beta2.Misbehavior misbehavior = 4;
 * @return {!Array<!proto.cometbft.abci.v1beta2.Misbehavior>}
 */
proto.cometbft.abci.v1beta3.RequestPrepareProposal.prototype.getMisbehaviorList = function() {
  return /** @type{!Array<!proto.cometbft.abci.v1beta2.Misbehavior>} */ (
    jspb.Message.getRepeatedWrapperField(this, cometbft_abci_v1beta2_types_pb.Misbehavior, 4));
};


/**
 * @param {!Array<!proto.cometbft.abci.v1beta2.Misbehavior>} value
 * @return {!proto.cometbft.abci.v1beta3.RequestPrepareProposal} returns this
*/
proto.cometbft.abci.v1beta3.RequestPrepareProposal.prototype.setMisbehaviorList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.cometbft.abci.v1beta2.Misbehavior=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cometbft.abci.v1beta2.Misbehavior}
 */
proto.cometbft.abci.v1beta3.RequestPrepareProposal.prototype.addMisbehavior = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.cometbft.abci.v1beta2.Misbehavior, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cometbft.abci.v1beta3.RequestPrepareProposal} returns this
 */
proto.cometbft.abci.v1beta3.RequestPrepareProposal.prototype.clearMisbehaviorList = function() {
  return this.setMisbehaviorList([]);
};


/**
 * optional int64 height = 5;
 * @return {number}
 */
proto.cometbft.abci.v1beta3.RequestPrepareProposal.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.abci.v1beta3.RequestPrepareProposal} returns this
 */
proto.cometbft.abci.v1beta3.RequestPrepareProposal.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional google.protobuf.Timestamp time = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.cometbft.abci.v1beta3.RequestPrepareProposal.prototype.getTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.RequestPrepareProposal} returns this
*/
proto.cometbft.abci.v1beta3.RequestPrepareProposal.prototype.setTime = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.RequestPrepareProposal} returns this
 */
proto.cometbft.abci.v1beta3.RequestPrepareProposal.prototype.clearTime = function() {
  return this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.RequestPrepareProposal.prototype.hasTime = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bytes next_validators_hash = 7;
 * @return {!(string|Uint8Array)}
 */
proto.cometbft.abci.v1beta3.RequestPrepareProposal.prototype.getNextValidatorsHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * optional bytes next_validators_hash = 7;
 * This is a type-conversion wrapper around `getNextValidatorsHash()`
 * @return {string}
 */
proto.cometbft.abci.v1beta3.RequestPrepareProposal.prototype.getNextValidatorsHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getNextValidatorsHash()));
};


/**
 * optional bytes next_validators_hash = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getNextValidatorsHash()`
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.RequestPrepareProposal.prototype.getNextValidatorsHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getNextValidatorsHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cometbft.abci.v1beta3.RequestPrepareProposal} returns this
 */
proto.cometbft.abci.v1beta3.RequestPrepareProposal.prototype.setNextValidatorsHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 7, value);
};


/**
 * optional bytes proposer_address = 8;
 * @return {!(string|Uint8Array)}
 */
proto.cometbft.abci.v1beta3.RequestPrepareProposal.prototype.getProposerAddress = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * optional bytes proposer_address = 8;
 * This is a type-conversion wrapper around `getProposerAddress()`
 * @return {string}
 */
proto.cometbft.abci.v1beta3.RequestPrepareProposal.prototype.getProposerAddress_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getProposerAddress()));
};


/**
 * optional bytes proposer_address = 8;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getProposerAddress()`
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.RequestPrepareProposal.prototype.getProposerAddress_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getProposerAddress()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cometbft.abci.v1beta3.RequestPrepareProposal} returns this
 */
proto.cometbft.abci.v1beta3.RequestPrepareProposal.prototype.setProposerAddress = function(value) {
  return jspb.Message.setProto3BytesField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cometbft.abci.v1beta3.RequestProcessProposal.repeatedFields_ = [1,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta3.RequestProcessProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta3.RequestProcessProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta3.RequestProcessProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.RequestProcessProposal.toObject = function(includeInstance, msg) {
  var f, obj = {
    txsList: msg.getTxsList_asB64(),
    proposedLastCommit: (f = msg.getProposedLastCommit()) && proto.cometbft.abci.v1beta3.CommitInfo.toObject(includeInstance, f),
    misbehaviorList: jspb.Message.toObjectList(msg.getMisbehaviorList(),
    cometbft_abci_v1beta2_types_pb.Misbehavior.toObject, includeInstance),
    hash: msg.getHash_asB64(),
    height: jspb.Message.getFieldWithDefault(msg, 5, 0),
    time: (f = msg.getTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    nextValidatorsHash: msg.getNextValidatorsHash_asB64(),
    proposerAddress: msg.getProposerAddress_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta3.RequestProcessProposal}
 */
proto.cometbft.abci.v1beta3.RequestProcessProposal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta3.RequestProcessProposal;
  return proto.cometbft.abci.v1beta3.RequestProcessProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta3.RequestProcessProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta3.RequestProcessProposal}
 */
proto.cometbft.abci.v1beta3.RequestProcessProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addTxs(value);
      break;
    case 2:
      var value = new proto.cometbft.abci.v1beta3.CommitInfo;
      reader.readMessage(value,proto.cometbft.abci.v1beta3.CommitInfo.deserializeBinaryFromReader);
      msg.setProposedLastCommit(value);
      break;
    case 3:
      var value = new cometbft_abci_v1beta2_types_pb.Misbehavior;
      reader.readMessage(value,cometbft_abci_v1beta2_types_pb.Misbehavior.deserializeBinaryFromReader);
      msg.addMisbehavior(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHeight(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setNextValidatorsHash(value);
      break;
    case 8:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setProposerAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.RequestProcessProposal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta3.RequestProcessProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta3.RequestProcessProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.RequestProcessProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTxsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      1,
      f
    );
  }
  f = message.getProposedLastCommit();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cometbft.abci.v1beta3.CommitInfo.serializeBinaryToWriter
    );
  }
  f = message.getMisbehaviorList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      cometbft_abci_v1beta2_types_pb.Misbehavior.serializeBinaryToWriter
    );
  }
  f = message.getHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getNextValidatorsHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      7,
      f
    );
  }
  f = message.getProposerAddress_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      8,
      f
    );
  }
};


/**
 * repeated bytes txs = 1;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.cometbft.abci.v1beta3.RequestProcessProposal.prototype.getTxsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * repeated bytes txs = 1;
 * This is a type-conversion wrapper around `getTxsList()`
 * @return {!Array<string>}
 */
proto.cometbft.abci.v1beta3.RequestProcessProposal.prototype.getTxsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getTxsList()));
};


/**
 * repeated bytes txs = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.cometbft.abci.v1beta3.RequestProcessProposal.prototype.getTxsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getTxsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.cometbft.abci.v1beta3.RequestProcessProposal} returns this
 */
proto.cometbft.abci.v1beta3.RequestProcessProposal.prototype.setTxsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.cometbft.abci.v1beta3.RequestProcessProposal} returns this
 */
proto.cometbft.abci.v1beta3.RequestProcessProposal.prototype.addTxs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cometbft.abci.v1beta3.RequestProcessProposal} returns this
 */
proto.cometbft.abci.v1beta3.RequestProcessProposal.prototype.clearTxsList = function() {
  return this.setTxsList([]);
};


/**
 * optional CommitInfo proposed_last_commit = 2;
 * @return {?proto.cometbft.abci.v1beta3.CommitInfo}
 */
proto.cometbft.abci.v1beta3.RequestProcessProposal.prototype.getProposedLastCommit = function() {
  return /** @type{?proto.cometbft.abci.v1beta3.CommitInfo} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.abci.v1beta3.CommitInfo, 2));
};


/**
 * @param {?proto.cometbft.abci.v1beta3.CommitInfo|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.RequestProcessProposal} returns this
*/
proto.cometbft.abci.v1beta3.RequestProcessProposal.prototype.setProposedLastCommit = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.RequestProcessProposal} returns this
 */
proto.cometbft.abci.v1beta3.RequestProcessProposal.prototype.clearProposedLastCommit = function() {
  return this.setProposedLastCommit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.RequestProcessProposal.prototype.hasProposedLastCommit = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated cometbft.abci.v1beta2.Misbehavior misbehavior = 3;
 * @return {!Array<!proto.cometbft.abci.v1beta2.Misbehavior>}
 */
proto.cometbft.abci.v1beta3.RequestProcessProposal.prototype.getMisbehaviorList = function() {
  return /** @type{!Array<!proto.cometbft.abci.v1beta2.Misbehavior>} */ (
    jspb.Message.getRepeatedWrapperField(this, cometbft_abci_v1beta2_types_pb.Misbehavior, 3));
};


/**
 * @param {!Array<!proto.cometbft.abci.v1beta2.Misbehavior>} value
 * @return {!proto.cometbft.abci.v1beta3.RequestProcessProposal} returns this
*/
proto.cometbft.abci.v1beta3.RequestProcessProposal.prototype.setMisbehaviorList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.cometbft.abci.v1beta2.Misbehavior=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cometbft.abci.v1beta2.Misbehavior}
 */
proto.cometbft.abci.v1beta3.RequestProcessProposal.prototype.addMisbehavior = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.cometbft.abci.v1beta2.Misbehavior, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cometbft.abci.v1beta3.RequestProcessProposal} returns this
 */
proto.cometbft.abci.v1beta3.RequestProcessProposal.prototype.clearMisbehaviorList = function() {
  return this.setMisbehaviorList([]);
};


/**
 * optional bytes hash = 4;
 * @return {!(string|Uint8Array)}
 */
proto.cometbft.abci.v1beta3.RequestProcessProposal.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes hash = 4;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.cometbft.abci.v1beta3.RequestProcessProposal.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.RequestProcessProposal.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cometbft.abci.v1beta3.RequestProcessProposal} returns this
 */
proto.cometbft.abci.v1beta3.RequestProcessProposal.prototype.setHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional int64 height = 5;
 * @return {number}
 */
proto.cometbft.abci.v1beta3.RequestProcessProposal.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.abci.v1beta3.RequestProcessProposal} returns this
 */
proto.cometbft.abci.v1beta3.RequestProcessProposal.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional google.protobuf.Timestamp time = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.cometbft.abci.v1beta3.RequestProcessProposal.prototype.getTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.RequestProcessProposal} returns this
*/
proto.cometbft.abci.v1beta3.RequestProcessProposal.prototype.setTime = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.RequestProcessProposal} returns this
 */
proto.cometbft.abci.v1beta3.RequestProcessProposal.prototype.clearTime = function() {
  return this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.RequestProcessProposal.prototype.hasTime = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bytes next_validators_hash = 7;
 * @return {!(string|Uint8Array)}
 */
proto.cometbft.abci.v1beta3.RequestProcessProposal.prototype.getNextValidatorsHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * optional bytes next_validators_hash = 7;
 * This is a type-conversion wrapper around `getNextValidatorsHash()`
 * @return {string}
 */
proto.cometbft.abci.v1beta3.RequestProcessProposal.prototype.getNextValidatorsHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getNextValidatorsHash()));
};


/**
 * optional bytes next_validators_hash = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getNextValidatorsHash()`
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.RequestProcessProposal.prototype.getNextValidatorsHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getNextValidatorsHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cometbft.abci.v1beta3.RequestProcessProposal} returns this
 */
proto.cometbft.abci.v1beta3.RequestProcessProposal.prototype.setNextValidatorsHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 7, value);
};


/**
 * optional bytes proposer_address = 8;
 * @return {!(string|Uint8Array)}
 */
proto.cometbft.abci.v1beta3.RequestProcessProposal.prototype.getProposerAddress = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * optional bytes proposer_address = 8;
 * This is a type-conversion wrapper around `getProposerAddress()`
 * @return {string}
 */
proto.cometbft.abci.v1beta3.RequestProcessProposal.prototype.getProposerAddress_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getProposerAddress()));
};


/**
 * optional bytes proposer_address = 8;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getProposerAddress()`
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.RequestProcessProposal.prototype.getProposerAddress_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getProposerAddress()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cometbft.abci.v1beta3.RequestProcessProposal} returns this
 */
proto.cometbft.abci.v1beta3.RequestProcessProposal.prototype.setProposerAddress = function(value) {
  return jspb.Message.setProto3BytesField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cometbft.abci.v1beta3.RequestExtendVote.repeatedFields_ = [4,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta3.RequestExtendVote.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta3.RequestExtendVote.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta3.RequestExtendVote} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.RequestExtendVote.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: msg.getHash_asB64(),
    height: jspb.Message.getFieldWithDefault(msg, 2, 0),
    time: (f = msg.getTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    txsList: msg.getTxsList_asB64(),
    proposedLastCommit: (f = msg.getProposedLastCommit()) && proto.cometbft.abci.v1beta3.CommitInfo.toObject(includeInstance, f),
    misbehaviorList: jspb.Message.toObjectList(msg.getMisbehaviorList(),
    cometbft_abci_v1beta2_types_pb.Misbehavior.toObject, includeInstance),
    nextValidatorsHash: msg.getNextValidatorsHash_asB64(),
    proposerAddress: msg.getProposerAddress_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta3.RequestExtendVote}
 */
proto.cometbft.abci.v1beta3.RequestExtendVote.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta3.RequestExtendVote;
  return proto.cometbft.abci.v1beta3.RequestExtendVote.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta3.RequestExtendVote} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta3.RequestExtendVote}
 */
proto.cometbft.abci.v1beta3.RequestExtendVote.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHeight(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addTxs(value);
      break;
    case 5:
      var value = new proto.cometbft.abci.v1beta3.CommitInfo;
      reader.readMessage(value,proto.cometbft.abci.v1beta3.CommitInfo.deserializeBinaryFromReader);
      msg.setProposedLastCommit(value);
      break;
    case 6:
      var value = new cometbft_abci_v1beta2_types_pb.Misbehavior;
      reader.readMessage(value,cometbft_abci_v1beta2_types_pb.Misbehavior.deserializeBinaryFromReader);
      msg.addMisbehavior(value);
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setNextValidatorsHash(value);
      break;
    case 8:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setProposerAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.RequestExtendVote.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta3.RequestExtendVote.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta3.RequestExtendVote} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.RequestExtendVote.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTxsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      4,
      f
    );
  }
  f = message.getProposedLastCommit();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.cometbft.abci.v1beta3.CommitInfo.serializeBinaryToWriter
    );
  }
  f = message.getMisbehaviorList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      cometbft_abci_v1beta2_types_pb.Misbehavior.serializeBinaryToWriter
    );
  }
  f = message.getNextValidatorsHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      7,
      f
    );
  }
  f = message.getProposerAddress_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      8,
      f
    );
  }
};


/**
 * optional bytes hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cometbft.abci.v1beta3.RequestExtendVote.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes hash = 1;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.cometbft.abci.v1beta3.RequestExtendVote.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.RequestExtendVote.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cometbft.abci.v1beta3.RequestExtendVote} returns this
 */
proto.cometbft.abci.v1beta3.RequestExtendVote.prototype.setHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional int64 height = 2;
 * @return {number}
 */
proto.cometbft.abci.v1beta3.RequestExtendVote.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.abci.v1beta3.RequestExtendVote} returns this
 */
proto.cometbft.abci.v1beta3.RequestExtendVote.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp time = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.cometbft.abci.v1beta3.RequestExtendVote.prototype.getTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.RequestExtendVote} returns this
*/
proto.cometbft.abci.v1beta3.RequestExtendVote.prototype.setTime = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.RequestExtendVote} returns this
 */
proto.cometbft.abci.v1beta3.RequestExtendVote.prototype.clearTime = function() {
  return this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.RequestExtendVote.prototype.hasTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated bytes txs = 4;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.cometbft.abci.v1beta3.RequestExtendVote.prototype.getTxsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * repeated bytes txs = 4;
 * This is a type-conversion wrapper around `getTxsList()`
 * @return {!Array<string>}
 */
proto.cometbft.abci.v1beta3.RequestExtendVote.prototype.getTxsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getTxsList()));
};


/**
 * repeated bytes txs = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.cometbft.abci.v1beta3.RequestExtendVote.prototype.getTxsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getTxsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.cometbft.abci.v1beta3.RequestExtendVote} returns this
 */
proto.cometbft.abci.v1beta3.RequestExtendVote.prototype.setTxsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.cometbft.abci.v1beta3.RequestExtendVote} returns this
 */
proto.cometbft.abci.v1beta3.RequestExtendVote.prototype.addTxs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cometbft.abci.v1beta3.RequestExtendVote} returns this
 */
proto.cometbft.abci.v1beta3.RequestExtendVote.prototype.clearTxsList = function() {
  return this.setTxsList([]);
};


/**
 * optional CommitInfo proposed_last_commit = 5;
 * @return {?proto.cometbft.abci.v1beta3.CommitInfo}
 */
proto.cometbft.abci.v1beta3.RequestExtendVote.prototype.getProposedLastCommit = function() {
  return /** @type{?proto.cometbft.abci.v1beta3.CommitInfo} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.abci.v1beta3.CommitInfo, 5));
};


/**
 * @param {?proto.cometbft.abci.v1beta3.CommitInfo|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.RequestExtendVote} returns this
*/
proto.cometbft.abci.v1beta3.RequestExtendVote.prototype.setProposedLastCommit = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.RequestExtendVote} returns this
 */
proto.cometbft.abci.v1beta3.RequestExtendVote.prototype.clearProposedLastCommit = function() {
  return this.setProposedLastCommit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.RequestExtendVote.prototype.hasProposedLastCommit = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated cometbft.abci.v1beta2.Misbehavior misbehavior = 6;
 * @return {!Array<!proto.cometbft.abci.v1beta2.Misbehavior>}
 */
proto.cometbft.abci.v1beta3.RequestExtendVote.prototype.getMisbehaviorList = function() {
  return /** @type{!Array<!proto.cometbft.abci.v1beta2.Misbehavior>} */ (
    jspb.Message.getRepeatedWrapperField(this, cometbft_abci_v1beta2_types_pb.Misbehavior, 6));
};


/**
 * @param {!Array<!proto.cometbft.abci.v1beta2.Misbehavior>} value
 * @return {!proto.cometbft.abci.v1beta3.RequestExtendVote} returns this
*/
proto.cometbft.abci.v1beta3.RequestExtendVote.prototype.setMisbehaviorList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.cometbft.abci.v1beta2.Misbehavior=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cometbft.abci.v1beta2.Misbehavior}
 */
proto.cometbft.abci.v1beta3.RequestExtendVote.prototype.addMisbehavior = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.cometbft.abci.v1beta2.Misbehavior, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cometbft.abci.v1beta3.RequestExtendVote} returns this
 */
proto.cometbft.abci.v1beta3.RequestExtendVote.prototype.clearMisbehaviorList = function() {
  return this.setMisbehaviorList([]);
};


/**
 * optional bytes next_validators_hash = 7;
 * @return {!(string|Uint8Array)}
 */
proto.cometbft.abci.v1beta3.RequestExtendVote.prototype.getNextValidatorsHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * optional bytes next_validators_hash = 7;
 * This is a type-conversion wrapper around `getNextValidatorsHash()`
 * @return {string}
 */
proto.cometbft.abci.v1beta3.RequestExtendVote.prototype.getNextValidatorsHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getNextValidatorsHash()));
};


/**
 * optional bytes next_validators_hash = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getNextValidatorsHash()`
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.RequestExtendVote.prototype.getNextValidatorsHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getNextValidatorsHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cometbft.abci.v1beta3.RequestExtendVote} returns this
 */
proto.cometbft.abci.v1beta3.RequestExtendVote.prototype.setNextValidatorsHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 7, value);
};


/**
 * optional bytes proposer_address = 8;
 * @return {!(string|Uint8Array)}
 */
proto.cometbft.abci.v1beta3.RequestExtendVote.prototype.getProposerAddress = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * optional bytes proposer_address = 8;
 * This is a type-conversion wrapper around `getProposerAddress()`
 * @return {string}
 */
proto.cometbft.abci.v1beta3.RequestExtendVote.prototype.getProposerAddress_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getProposerAddress()));
};


/**
 * optional bytes proposer_address = 8;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getProposerAddress()`
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.RequestExtendVote.prototype.getProposerAddress_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getProposerAddress()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cometbft.abci.v1beta3.RequestExtendVote} returns this
 */
proto.cometbft.abci.v1beta3.RequestExtendVote.prototype.setProposerAddress = function(value) {
  return jspb.Message.setProto3BytesField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: msg.getHash_asB64(),
    validatorAddress: msg.getValidatorAddress_asB64(),
    height: jspb.Message.getFieldWithDefault(msg, 3, 0),
    voteExtension: msg.getVoteExtension_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension}
 */
proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension;
  return proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension}
 */
proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setValidatorAddress(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHeight(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setVoteExtension(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getValidatorAddress_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getVoteExtension_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * optional bytes hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes hash = 1;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension} returns this
 */
proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension.prototype.setHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes validator_address = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension.prototype.getValidatorAddress = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes validator_address = 2;
 * This is a type-conversion wrapper around `getValidatorAddress()`
 * @return {string}
 */
proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension.prototype.getValidatorAddress_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getValidatorAddress()));
};


/**
 * optional bytes validator_address = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getValidatorAddress()`
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension.prototype.getValidatorAddress_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getValidatorAddress()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension} returns this
 */
proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension.prototype.setValidatorAddress = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional int64 height = 3;
 * @return {number}
 */
proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension} returns this
 */
proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bytes vote_extension = 4;
 * @return {!(string|Uint8Array)}
 */
proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension.prototype.getVoteExtension = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes vote_extension = 4;
 * This is a type-conversion wrapper around `getVoteExtension()`
 * @return {string}
 */
proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension.prototype.getVoteExtension_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getVoteExtension()));
};


/**
 * optional bytes vote_extension = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getVoteExtension()`
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension.prototype.getVoteExtension_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getVoteExtension()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension} returns this
 */
proto.cometbft.abci.v1beta3.RequestVerifyVoteExtension.prototype.setVoteExtension = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cometbft.abci.v1beta3.RequestFinalizeBlock.repeatedFields_ = [1,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta3.RequestFinalizeBlock.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta3.RequestFinalizeBlock.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta3.RequestFinalizeBlock} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.RequestFinalizeBlock.toObject = function(includeInstance, msg) {
  var f, obj = {
    txsList: msg.getTxsList_asB64(),
    decidedLastCommit: (f = msg.getDecidedLastCommit()) && proto.cometbft.abci.v1beta3.CommitInfo.toObject(includeInstance, f),
    misbehaviorList: jspb.Message.toObjectList(msg.getMisbehaviorList(),
    cometbft_abci_v1beta2_types_pb.Misbehavior.toObject, includeInstance),
    hash: msg.getHash_asB64(),
    height: jspb.Message.getFieldWithDefault(msg, 5, 0),
    time: (f = msg.getTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    nextValidatorsHash: msg.getNextValidatorsHash_asB64(),
    proposerAddress: msg.getProposerAddress_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta3.RequestFinalizeBlock}
 */
proto.cometbft.abci.v1beta3.RequestFinalizeBlock.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta3.RequestFinalizeBlock;
  return proto.cometbft.abci.v1beta3.RequestFinalizeBlock.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta3.RequestFinalizeBlock} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta3.RequestFinalizeBlock}
 */
proto.cometbft.abci.v1beta3.RequestFinalizeBlock.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addTxs(value);
      break;
    case 2:
      var value = new proto.cometbft.abci.v1beta3.CommitInfo;
      reader.readMessage(value,proto.cometbft.abci.v1beta3.CommitInfo.deserializeBinaryFromReader);
      msg.setDecidedLastCommit(value);
      break;
    case 3:
      var value = new cometbft_abci_v1beta2_types_pb.Misbehavior;
      reader.readMessage(value,cometbft_abci_v1beta2_types_pb.Misbehavior.deserializeBinaryFromReader);
      msg.addMisbehavior(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHeight(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setNextValidatorsHash(value);
      break;
    case 8:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setProposerAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.RequestFinalizeBlock.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta3.RequestFinalizeBlock.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta3.RequestFinalizeBlock} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.RequestFinalizeBlock.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTxsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      1,
      f
    );
  }
  f = message.getDecidedLastCommit();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cometbft.abci.v1beta3.CommitInfo.serializeBinaryToWriter
    );
  }
  f = message.getMisbehaviorList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      cometbft_abci_v1beta2_types_pb.Misbehavior.serializeBinaryToWriter
    );
  }
  f = message.getHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getNextValidatorsHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      7,
      f
    );
  }
  f = message.getProposerAddress_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      8,
      f
    );
  }
};


/**
 * repeated bytes txs = 1;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.cometbft.abci.v1beta3.RequestFinalizeBlock.prototype.getTxsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * repeated bytes txs = 1;
 * This is a type-conversion wrapper around `getTxsList()`
 * @return {!Array<string>}
 */
proto.cometbft.abci.v1beta3.RequestFinalizeBlock.prototype.getTxsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getTxsList()));
};


/**
 * repeated bytes txs = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.cometbft.abci.v1beta3.RequestFinalizeBlock.prototype.getTxsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getTxsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.cometbft.abci.v1beta3.RequestFinalizeBlock} returns this
 */
proto.cometbft.abci.v1beta3.RequestFinalizeBlock.prototype.setTxsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.cometbft.abci.v1beta3.RequestFinalizeBlock} returns this
 */
proto.cometbft.abci.v1beta3.RequestFinalizeBlock.prototype.addTxs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cometbft.abci.v1beta3.RequestFinalizeBlock} returns this
 */
proto.cometbft.abci.v1beta3.RequestFinalizeBlock.prototype.clearTxsList = function() {
  return this.setTxsList([]);
};


/**
 * optional CommitInfo decided_last_commit = 2;
 * @return {?proto.cometbft.abci.v1beta3.CommitInfo}
 */
proto.cometbft.abci.v1beta3.RequestFinalizeBlock.prototype.getDecidedLastCommit = function() {
  return /** @type{?proto.cometbft.abci.v1beta3.CommitInfo} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.abci.v1beta3.CommitInfo, 2));
};


/**
 * @param {?proto.cometbft.abci.v1beta3.CommitInfo|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.RequestFinalizeBlock} returns this
*/
proto.cometbft.abci.v1beta3.RequestFinalizeBlock.prototype.setDecidedLastCommit = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.RequestFinalizeBlock} returns this
 */
proto.cometbft.abci.v1beta3.RequestFinalizeBlock.prototype.clearDecidedLastCommit = function() {
  return this.setDecidedLastCommit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.RequestFinalizeBlock.prototype.hasDecidedLastCommit = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated cometbft.abci.v1beta2.Misbehavior misbehavior = 3;
 * @return {!Array<!proto.cometbft.abci.v1beta2.Misbehavior>}
 */
proto.cometbft.abci.v1beta3.RequestFinalizeBlock.prototype.getMisbehaviorList = function() {
  return /** @type{!Array<!proto.cometbft.abci.v1beta2.Misbehavior>} */ (
    jspb.Message.getRepeatedWrapperField(this, cometbft_abci_v1beta2_types_pb.Misbehavior, 3));
};


/**
 * @param {!Array<!proto.cometbft.abci.v1beta2.Misbehavior>} value
 * @return {!proto.cometbft.abci.v1beta3.RequestFinalizeBlock} returns this
*/
proto.cometbft.abci.v1beta3.RequestFinalizeBlock.prototype.setMisbehaviorList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.cometbft.abci.v1beta2.Misbehavior=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cometbft.abci.v1beta2.Misbehavior}
 */
proto.cometbft.abci.v1beta3.RequestFinalizeBlock.prototype.addMisbehavior = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.cometbft.abci.v1beta2.Misbehavior, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cometbft.abci.v1beta3.RequestFinalizeBlock} returns this
 */
proto.cometbft.abci.v1beta3.RequestFinalizeBlock.prototype.clearMisbehaviorList = function() {
  return this.setMisbehaviorList([]);
};


/**
 * optional bytes hash = 4;
 * @return {!(string|Uint8Array)}
 */
proto.cometbft.abci.v1beta3.RequestFinalizeBlock.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes hash = 4;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.cometbft.abci.v1beta3.RequestFinalizeBlock.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.RequestFinalizeBlock.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cometbft.abci.v1beta3.RequestFinalizeBlock} returns this
 */
proto.cometbft.abci.v1beta3.RequestFinalizeBlock.prototype.setHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional int64 height = 5;
 * @return {number}
 */
proto.cometbft.abci.v1beta3.RequestFinalizeBlock.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.abci.v1beta3.RequestFinalizeBlock} returns this
 */
proto.cometbft.abci.v1beta3.RequestFinalizeBlock.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional google.protobuf.Timestamp time = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.cometbft.abci.v1beta3.RequestFinalizeBlock.prototype.getTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.RequestFinalizeBlock} returns this
*/
proto.cometbft.abci.v1beta3.RequestFinalizeBlock.prototype.setTime = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.RequestFinalizeBlock} returns this
 */
proto.cometbft.abci.v1beta3.RequestFinalizeBlock.prototype.clearTime = function() {
  return this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.RequestFinalizeBlock.prototype.hasTime = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bytes next_validators_hash = 7;
 * @return {!(string|Uint8Array)}
 */
proto.cometbft.abci.v1beta3.RequestFinalizeBlock.prototype.getNextValidatorsHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * optional bytes next_validators_hash = 7;
 * This is a type-conversion wrapper around `getNextValidatorsHash()`
 * @return {string}
 */
proto.cometbft.abci.v1beta3.RequestFinalizeBlock.prototype.getNextValidatorsHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getNextValidatorsHash()));
};


/**
 * optional bytes next_validators_hash = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getNextValidatorsHash()`
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.RequestFinalizeBlock.prototype.getNextValidatorsHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getNextValidatorsHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cometbft.abci.v1beta3.RequestFinalizeBlock} returns this
 */
proto.cometbft.abci.v1beta3.RequestFinalizeBlock.prototype.setNextValidatorsHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 7, value);
};


/**
 * optional bytes proposer_address = 8;
 * @return {!(string|Uint8Array)}
 */
proto.cometbft.abci.v1beta3.RequestFinalizeBlock.prototype.getProposerAddress = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * optional bytes proposer_address = 8;
 * This is a type-conversion wrapper around `getProposerAddress()`
 * @return {string}
 */
proto.cometbft.abci.v1beta3.RequestFinalizeBlock.prototype.getProposerAddress_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getProposerAddress()));
};


/**
 * optional bytes proposer_address = 8;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getProposerAddress()`
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.RequestFinalizeBlock.prototype.getProposerAddress_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getProposerAddress()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cometbft.abci.v1beta3.RequestFinalizeBlock} returns this
 */
proto.cometbft.abci.v1beta3.RequestFinalizeBlock.prototype.setProposerAddress = function(value) {
  return jspb.Message.setProto3BytesField(this, 8, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.cometbft.abci.v1beta3.Response.oneofGroups_ = [[1,2,3,4,6,7,9,12,13,14,15,16,17,18,19,20,21]];

/**
 * @enum {number}
 */
proto.cometbft.abci.v1beta3.Response.ValueCase = {
  VALUE_NOT_SET: 0,
  EXCEPTION: 1,
  ECHO: 2,
  FLUSH: 3,
  INFO: 4,
  INIT_CHAIN: 6,
  QUERY: 7,
  CHECK_TX: 9,
  COMMIT: 12,
  LIST_SNAPSHOTS: 13,
  OFFER_SNAPSHOT: 14,
  LOAD_SNAPSHOT_CHUNK: 15,
  APPLY_SNAPSHOT_CHUNK: 16,
  PREPARE_PROPOSAL: 17,
  PROCESS_PROPOSAL: 18,
  EXTEND_VOTE: 19,
  VERIFY_VOTE_EXTENSION: 20,
  FINALIZE_BLOCK: 21
};

/**
 * @return {proto.cometbft.abci.v1beta3.Response.ValueCase}
 */
proto.cometbft.abci.v1beta3.Response.prototype.getValueCase = function() {
  return /** @type {proto.cometbft.abci.v1beta3.Response.ValueCase} */(jspb.Message.computeOneofCase(this, proto.cometbft.abci.v1beta3.Response.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta3.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta3.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta3.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    exception: (f = msg.getException()) && cometbft_abci_v1beta1_types_pb.ResponseException.toObject(includeInstance, f),
    echo: (f = msg.getEcho()) && cometbft_abci_v1beta1_types_pb.ResponseEcho.toObject(includeInstance, f),
    flush: (f = msg.getFlush()) && cometbft_abci_v1beta1_types_pb.ResponseFlush.toObject(includeInstance, f),
    info: (f = msg.getInfo()) && cometbft_abci_v1beta1_types_pb.ResponseInfo.toObject(includeInstance, f),
    initChain: (f = msg.getInitChain()) && proto.cometbft.abci.v1beta3.ResponseInitChain.toObject(includeInstance, f),
    query: (f = msg.getQuery()) && cometbft_abci_v1beta1_types_pb.ResponseQuery.toObject(includeInstance, f),
    checkTx: (f = msg.getCheckTx()) && proto.cometbft.abci.v1beta3.ResponseCheckTx.toObject(includeInstance, f),
    commit: (f = msg.getCommit()) && proto.cometbft.abci.v1beta3.ResponseCommit.toObject(includeInstance, f),
    listSnapshots: (f = msg.getListSnapshots()) && cometbft_abci_v1beta1_types_pb.ResponseListSnapshots.toObject(includeInstance, f),
    offerSnapshot: (f = msg.getOfferSnapshot()) && cometbft_abci_v1beta1_types_pb.ResponseOfferSnapshot.toObject(includeInstance, f),
    loadSnapshotChunk: (f = msg.getLoadSnapshotChunk()) && cometbft_abci_v1beta1_types_pb.ResponseLoadSnapshotChunk.toObject(includeInstance, f),
    applySnapshotChunk: (f = msg.getApplySnapshotChunk()) && cometbft_abci_v1beta1_types_pb.ResponseApplySnapshotChunk.toObject(includeInstance, f),
    prepareProposal: (f = msg.getPrepareProposal()) && cometbft_abci_v1beta2_types_pb.ResponsePrepareProposal.toObject(includeInstance, f),
    processProposal: (f = msg.getProcessProposal()) && cometbft_abci_v1beta2_types_pb.ResponseProcessProposal.toObject(includeInstance, f),
    extendVote: (f = msg.getExtendVote()) && proto.cometbft.abci.v1beta3.ResponseExtendVote.toObject(includeInstance, f),
    verifyVoteExtension: (f = msg.getVerifyVoteExtension()) && proto.cometbft.abci.v1beta3.ResponseVerifyVoteExtension.toObject(includeInstance, f),
    finalizeBlock: (f = msg.getFinalizeBlock()) && proto.cometbft.abci.v1beta3.ResponseFinalizeBlock.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta3.Response}
 */
proto.cometbft.abci.v1beta3.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta3.Response;
  return proto.cometbft.abci.v1beta3.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta3.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta3.Response}
 */
proto.cometbft.abci.v1beta3.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cometbft_abci_v1beta1_types_pb.ResponseException;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.ResponseException.deserializeBinaryFromReader);
      msg.setException(value);
      break;
    case 2:
      var value = new cometbft_abci_v1beta1_types_pb.ResponseEcho;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.ResponseEcho.deserializeBinaryFromReader);
      msg.setEcho(value);
      break;
    case 3:
      var value = new cometbft_abci_v1beta1_types_pb.ResponseFlush;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.ResponseFlush.deserializeBinaryFromReader);
      msg.setFlush(value);
      break;
    case 4:
      var value = new cometbft_abci_v1beta1_types_pb.ResponseInfo;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.ResponseInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    case 6:
      var value = new proto.cometbft.abci.v1beta3.ResponseInitChain;
      reader.readMessage(value,proto.cometbft.abci.v1beta3.ResponseInitChain.deserializeBinaryFromReader);
      msg.setInitChain(value);
      break;
    case 7:
      var value = new cometbft_abci_v1beta1_types_pb.ResponseQuery;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.ResponseQuery.deserializeBinaryFromReader);
      msg.setQuery(value);
      break;
    case 9:
      var value = new proto.cometbft.abci.v1beta3.ResponseCheckTx;
      reader.readMessage(value,proto.cometbft.abci.v1beta3.ResponseCheckTx.deserializeBinaryFromReader);
      msg.setCheckTx(value);
      break;
    case 12:
      var value = new proto.cometbft.abci.v1beta3.ResponseCommit;
      reader.readMessage(value,proto.cometbft.abci.v1beta3.ResponseCommit.deserializeBinaryFromReader);
      msg.setCommit(value);
      break;
    case 13:
      var value = new cometbft_abci_v1beta1_types_pb.ResponseListSnapshots;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.ResponseListSnapshots.deserializeBinaryFromReader);
      msg.setListSnapshots(value);
      break;
    case 14:
      var value = new cometbft_abci_v1beta1_types_pb.ResponseOfferSnapshot;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.ResponseOfferSnapshot.deserializeBinaryFromReader);
      msg.setOfferSnapshot(value);
      break;
    case 15:
      var value = new cometbft_abci_v1beta1_types_pb.ResponseLoadSnapshotChunk;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.ResponseLoadSnapshotChunk.deserializeBinaryFromReader);
      msg.setLoadSnapshotChunk(value);
      break;
    case 16:
      var value = new cometbft_abci_v1beta1_types_pb.ResponseApplySnapshotChunk;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.ResponseApplySnapshotChunk.deserializeBinaryFromReader);
      msg.setApplySnapshotChunk(value);
      break;
    case 17:
      var value = new cometbft_abci_v1beta2_types_pb.ResponsePrepareProposal;
      reader.readMessage(value,cometbft_abci_v1beta2_types_pb.ResponsePrepareProposal.deserializeBinaryFromReader);
      msg.setPrepareProposal(value);
      break;
    case 18:
      var value = new cometbft_abci_v1beta2_types_pb.ResponseProcessProposal;
      reader.readMessage(value,cometbft_abci_v1beta2_types_pb.ResponseProcessProposal.deserializeBinaryFromReader);
      msg.setProcessProposal(value);
      break;
    case 19:
      var value = new proto.cometbft.abci.v1beta3.ResponseExtendVote;
      reader.readMessage(value,proto.cometbft.abci.v1beta3.ResponseExtendVote.deserializeBinaryFromReader);
      msg.setExtendVote(value);
      break;
    case 20:
      var value = new proto.cometbft.abci.v1beta3.ResponseVerifyVoteExtension;
      reader.readMessage(value,proto.cometbft.abci.v1beta3.ResponseVerifyVoteExtension.deserializeBinaryFromReader);
      msg.setVerifyVoteExtension(value);
      break;
    case 21:
      var value = new proto.cometbft.abci.v1beta3.ResponseFinalizeBlock;
      reader.readMessage(value,proto.cometbft.abci.v1beta3.ResponseFinalizeBlock.deserializeBinaryFromReader);
      msg.setFinalizeBlock(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta3.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta3.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getException();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cometbft_abci_v1beta1_types_pb.ResponseException.serializeBinaryToWriter
    );
  }
  f = message.getEcho();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cometbft_abci_v1beta1_types_pb.ResponseEcho.serializeBinaryToWriter
    );
  }
  f = message.getFlush();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cometbft_abci_v1beta1_types_pb.ResponseFlush.serializeBinaryToWriter
    );
  }
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cometbft_abci_v1beta1_types_pb.ResponseInfo.serializeBinaryToWriter
    );
  }
  f = message.getInitChain();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.cometbft.abci.v1beta3.ResponseInitChain.serializeBinaryToWriter
    );
  }
  f = message.getQuery();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      cometbft_abci_v1beta1_types_pb.ResponseQuery.serializeBinaryToWriter
    );
  }
  f = message.getCheckTx();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.cometbft.abci.v1beta3.ResponseCheckTx.serializeBinaryToWriter
    );
  }
  f = message.getCommit();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.cometbft.abci.v1beta3.ResponseCommit.serializeBinaryToWriter
    );
  }
  f = message.getListSnapshots();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      cometbft_abci_v1beta1_types_pb.ResponseListSnapshots.serializeBinaryToWriter
    );
  }
  f = message.getOfferSnapshot();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      cometbft_abci_v1beta1_types_pb.ResponseOfferSnapshot.serializeBinaryToWriter
    );
  }
  f = message.getLoadSnapshotChunk();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      cometbft_abci_v1beta1_types_pb.ResponseLoadSnapshotChunk.serializeBinaryToWriter
    );
  }
  f = message.getApplySnapshotChunk();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      cometbft_abci_v1beta1_types_pb.ResponseApplySnapshotChunk.serializeBinaryToWriter
    );
  }
  f = message.getPrepareProposal();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      cometbft_abci_v1beta2_types_pb.ResponsePrepareProposal.serializeBinaryToWriter
    );
  }
  f = message.getProcessProposal();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      cometbft_abci_v1beta2_types_pb.ResponseProcessProposal.serializeBinaryToWriter
    );
  }
  f = message.getExtendVote();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.cometbft.abci.v1beta3.ResponseExtendVote.serializeBinaryToWriter
    );
  }
  f = message.getVerifyVoteExtension();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.cometbft.abci.v1beta3.ResponseVerifyVoteExtension.serializeBinaryToWriter
    );
  }
  f = message.getFinalizeBlock();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.cometbft.abci.v1beta3.ResponseFinalizeBlock.serializeBinaryToWriter
    );
  }
};


/**
 * optional cometbft.abci.v1beta1.ResponseException exception = 1;
 * @return {?proto.cometbft.abci.v1beta1.ResponseException}
 */
proto.cometbft.abci.v1beta3.Response.prototype.getException = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.ResponseException} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.ResponseException, 1));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.ResponseException|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.Response} returns this
*/
proto.cometbft.abci.v1beta3.Response.prototype.setException = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.cometbft.abci.v1beta3.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.Response} returns this
 */
proto.cometbft.abci.v1beta3.Response.prototype.clearException = function() {
  return this.setException(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.Response.prototype.hasException = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional cometbft.abci.v1beta1.ResponseEcho echo = 2;
 * @return {?proto.cometbft.abci.v1beta1.ResponseEcho}
 */
proto.cometbft.abci.v1beta3.Response.prototype.getEcho = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.ResponseEcho} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.ResponseEcho, 2));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.ResponseEcho|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.Response} returns this
*/
proto.cometbft.abci.v1beta3.Response.prototype.setEcho = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.cometbft.abci.v1beta3.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.Response} returns this
 */
proto.cometbft.abci.v1beta3.Response.prototype.clearEcho = function() {
  return this.setEcho(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.Response.prototype.hasEcho = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional cometbft.abci.v1beta1.ResponseFlush flush = 3;
 * @return {?proto.cometbft.abci.v1beta1.ResponseFlush}
 */
proto.cometbft.abci.v1beta3.Response.prototype.getFlush = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.ResponseFlush} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.ResponseFlush, 3));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.ResponseFlush|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.Response} returns this
*/
proto.cometbft.abci.v1beta3.Response.prototype.setFlush = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.cometbft.abci.v1beta3.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.Response} returns this
 */
proto.cometbft.abci.v1beta3.Response.prototype.clearFlush = function() {
  return this.setFlush(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.Response.prototype.hasFlush = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional cometbft.abci.v1beta1.ResponseInfo info = 4;
 * @return {?proto.cometbft.abci.v1beta1.ResponseInfo}
 */
proto.cometbft.abci.v1beta3.Response.prototype.getInfo = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.ResponseInfo} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.ResponseInfo, 4));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.ResponseInfo|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.Response} returns this
*/
proto.cometbft.abci.v1beta3.Response.prototype.setInfo = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.cometbft.abci.v1beta3.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.Response} returns this
 */
proto.cometbft.abci.v1beta3.Response.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.Response.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ResponseInitChain init_chain = 6;
 * @return {?proto.cometbft.abci.v1beta3.ResponseInitChain}
 */
proto.cometbft.abci.v1beta3.Response.prototype.getInitChain = function() {
  return /** @type{?proto.cometbft.abci.v1beta3.ResponseInitChain} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.abci.v1beta3.ResponseInitChain, 6));
};


/**
 * @param {?proto.cometbft.abci.v1beta3.ResponseInitChain|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.Response} returns this
*/
proto.cometbft.abci.v1beta3.Response.prototype.setInitChain = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.cometbft.abci.v1beta3.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.Response} returns this
 */
proto.cometbft.abci.v1beta3.Response.prototype.clearInitChain = function() {
  return this.setInitChain(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.Response.prototype.hasInitChain = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional cometbft.abci.v1beta1.ResponseQuery query = 7;
 * @return {?proto.cometbft.abci.v1beta1.ResponseQuery}
 */
proto.cometbft.abci.v1beta3.Response.prototype.getQuery = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.ResponseQuery} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.ResponseQuery, 7));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.ResponseQuery|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.Response} returns this
*/
proto.cometbft.abci.v1beta3.Response.prototype.setQuery = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.cometbft.abci.v1beta3.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.Response} returns this
 */
proto.cometbft.abci.v1beta3.Response.prototype.clearQuery = function() {
  return this.setQuery(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.Response.prototype.hasQuery = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional ResponseCheckTx check_tx = 9;
 * @return {?proto.cometbft.abci.v1beta3.ResponseCheckTx}
 */
proto.cometbft.abci.v1beta3.Response.prototype.getCheckTx = function() {
  return /** @type{?proto.cometbft.abci.v1beta3.ResponseCheckTx} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.abci.v1beta3.ResponseCheckTx, 9));
};


/**
 * @param {?proto.cometbft.abci.v1beta3.ResponseCheckTx|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.Response} returns this
*/
proto.cometbft.abci.v1beta3.Response.prototype.setCheckTx = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.cometbft.abci.v1beta3.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.Response} returns this
 */
proto.cometbft.abci.v1beta3.Response.prototype.clearCheckTx = function() {
  return this.setCheckTx(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.Response.prototype.hasCheckTx = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional ResponseCommit commit = 12;
 * @return {?proto.cometbft.abci.v1beta3.ResponseCommit}
 */
proto.cometbft.abci.v1beta3.Response.prototype.getCommit = function() {
  return /** @type{?proto.cometbft.abci.v1beta3.ResponseCommit} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.abci.v1beta3.ResponseCommit, 12));
};


/**
 * @param {?proto.cometbft.abci.v1beta3.ResponseCommit|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.Response} returns this
*/
proto.cometbft.abci.v1beta3.Response.prototype.setCommit = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.cometbft.abci.v1beta3.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.Response} returns this
 */
proto.cometbft.abci.v1beta3.Response.prototype.clearCommit = function() {
  return this.setCommit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.Response.prototype.hasCommit = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional cometbft.abci.v1beta1.ResponseListSnapshots list_snapshots = 13;
 * @return {?proto.cometbft.abci.v1beta1.ResponseListSnapshots}
 */
proto.cometbft.abci.v1beta3.Response.prototype.getListSnapshots = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.ResponseListSnapshots} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.ResponseListSnapshots, 13));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.ResponseListSnapshots|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.Response} returns this
*/
proto.cometbft.abci.v1beta3.Response.prototype.setListSnapshots = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.cometbft.abci.v1beta3.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.Response} returns this
 */
proto.cometbft.abci.v1beta3.Response.prototype.clearListSnapshots = function() {
  return this.setListSnapshots(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.Response.prototype.hasListSnapshots = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional cometbft.abci.v1beta1.ResponseOfferSnapshot offer_snapshot = 14;
 * @return {?proto.cometbft.abci.v1beta1.ResponseOfferSnapshot}
 */
proto.cometbft.abci.v1beta3.Response.prototype.getOfferSnapshot = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.ResponseOfferSnapshot} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.ResponseOfferSnapshot, 14));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.ResponseOfferSnapshot|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.Response} returns this
*/
proto.cometbft.abci.v1beta3.Response.prototype.setOfferSnapshot = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.cometbft.abci.v1beta3.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.Response} returns this
 */
proto.cometbft.abci.v1beta3.Response.prototype.clearOfferSnapshot = function() {
  return this.setOfferSnapshot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.Response.prototype.hasOfferSnapshot = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional cometbft.abci.v1beta1.ResponseLoadSnapshotChunk load_snapshot_chunk = 15;
 * @return {?proto.cometbft.abci.v1beta1.ResponseLoadSnapshotChunk}
 */
proto.cometbft.abci.v1beta3.Response.prototype.getLoadSnapshotChunk = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.ResponseLoadSnapshotChunk} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.ResponseLoadSnapshotChunk, 15));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.ResponseLoadSnapshotChunk|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.Response} returns this
*/
proto.cometbft.abci.v1beta3.Response.prototype.setLoadSnapshotChunk = function(value) {
  return jspb.Message.setOneofWrapperField(this, 15, proto.cometbft.abci.v1beta3.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.Response} returns this
 */
proto.cometbft.abci.v1beta3.Response.prototype.clearLoadSnapshotChunk = function() {
  return this.setLoadSnapshotChunk(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.Response.prototype.hasLoadSnapshotChunk = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional cometbft.abci.v1beta1.ResponseApplySnapshotChunk apply_snapshot_chunk = 16;
 * @return {?proto.cometbft.abci.v1beta1.ResponseApplySnapshotChunk}
 */
proto.cometbft.abci.v1beta3.Response.prototype.getApplySnapshotChunk = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.ResponseApplySnapshotChunk} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.ResponseApplySnapshotChunk, 16));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.ResponseApplySnapshotChunk|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.Response} returns this
*/
proto.cometbft.abci.v1beta3.Response.prototype.setApplySnapshotChunk = function(value) {
  return jspb.Message.setOneofWrapperField(this, 16, proto.cometbft.abci.v1beta3.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.Response} returns this
 */
proto.cometbft.abci.v1beta3.Response.prototype.clearApplySnapshotChunk = function() {
  return this.setApplySnapshotChunk(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.Response.prototype.hasApplySnapshotChunk = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional cometbft.abci.v1beta2.ResponsePrepareProposal prepare_proposal = 17;
 * @return {?proto.cometbft.abci.v1beta2.ResponsePrepareProposal}
 */
proto.cometbft.abci.v1beta3.Response.prototype.getPrepareProposal = function() {
  return /** @type{?proto.cometbft.abci.v1beta2.ResponsePrepareProposal} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta2_types_pb.ResponsePrepareProposal, 17));
};


/**
 * @param {?proto.cometbft.abci.v1beta2.ResponsePrepareProposal|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.Response} returns this
*/
proto.cometbft.abci.v1beta3.Response.prototype.setPrepareProposal = function(value) {
  return jspb.Message.setOneofWrapperField(this, 17, proto.cometbft.abci.v1beta3.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.Response} returns this
 */
proto.cometbft.abci.v1beta3.Response.prototype.clearPrepareProposal = function() {
  return this.setPrepareProposal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.Response.prototype.hasPrepareProposal = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional cometbft.abci.v1beta2.ResponseProcessProposal process_proposal = 18;
 * @return {?proto.cometbft.abci.v1beta2.ResponseProcessProposal}
 */
proto.cometbft.abci.v1beta3.Response.prototype.getProcessProposal = function() {
  return /** @type{?proto.cometbft.abci.v1beta2.ResponseProcessProposal} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta2_types_pb.ResponseProcessProposal, 18));
};


/**
 * @param {?proto.cometbft.abci.v1beta2.ResponseProcessProposal|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.Response} returns this
*/
proto.cometbft.abci.v1beta3.Response.prototype.setProcessProposal = function(value) {
  return jspb.Message.setOneofWrapperField(this, 18, proto.cometbft.abci.v1beta3.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.Response} returns this
 */
proto.cometbft.abci.v1beta3.Response.prototype.clearProcessProposal = function() {
  return this.setProcessProposal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.Response.prototype.hasProcessProposal = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional ResponseExtendVote extend_vote = 19;
 * @return {?proto.cometbft.abci.v1beta3.ResponseExtendVote}
 */
proto.cometbft.abci.v1beta3.Response.prototype.getExtendVote = function() {
  return /** @type{?proto.cometbft.abci.v1beta3.ResponseExtendVote} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.abci.v1beta3.ResponseExtendVote, 19));
};


/**
 * @param {?proto.cometbft.abci.v1beta3.ResponseExtendVote|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.Response} returns this
*/
proto.cometbft.abci.v1beta3.Response.prototype.setExtendVote = function(value) {
  return jspb.Message.setOneofWrapperField(this, 19, proto.cometbft.abci.v1beta3.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.Response} returns this
 */
proto.cometbft.abci.v1beta3.Response.prototype.clearExtendVote = function() {
  return this.setExtendVote(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.Response.prototype.hasExtendVote = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional ResponseVerifyVoteExtension verify_vote_extension = 20;
 * @return {?proto.cometbft.abci.v1beta3.ResponseVerifyVoteExtension}
 */
proto.cometbft.abci.v1beta3.Response.prototype.getVerifyVoteExtension = function() {
  return /** @type{?proto.cometbft.abci.v1beta3.ResponseVerifyVoteExtension} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.abci.v1beta3.ResponseVerifyVoteExtension, 20));
};


/**
 * @param {?proto.cometbft.abci.v1beta3.ResponseVerifyVoteExtension|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.Response} returns this
*/
proto.cometbft.abci.v1beta3.Response.prototype.setVerifyVoteExtension = function(value) {
  return jspb.Message.setOneofWrapperField(this, 20, proto.cometbft.abci.v1beta3.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.Response} returns this
 */
proto.cometbft.abci.v1beta3.Response.prototype.clearVerifyVoteExtension = function() {
  return this.setVerifyVoteExtension(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.Response.prototype.hasVerifyVoteExtension = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional ResponseFinalizeBlock finalize_block = 21;
 * @return {?proto.cometbft.abci.v1beta3.ResponseFinalizeBlock}
 */
proto.cometbft.abci.v1beta3.Response.prototype.getFinalizeBlock = function() {
  return /** @type{?proto.cometbft.abci.v1beta3.ResponseFinalizeBlock} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.abci.v1beta3.ResponseFinalizeBlock, 21));
};


/**
 * @param {?proto.cometbft.abci.v1beta3.ResponseFinalizeBlock|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.Response} returns this
*/
proto.cometbft.abci.v1beta3.Response.prototype.setFinalizeBlock = function(value) {
  return jspb.Message.setOneofWrapperField(this, 21, proto.cometbft.abci.v1beta3.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.Response} returns this
 */
proto.cometbft.abci.v1beta3.Response.prototype.clearFinalizeBlock = function() {
  return this.setFinalizeBlock(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.Response.prototype.hasFinalizeBlock = function() {
  return jspb.Message.getField(this, 21) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cometbft.abci.v1beta3.ResponseInitChain.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta3.ResponseInitChain.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta3.ResponseInitChain.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta3.ResponseInitChain} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.ResponseInitChain.toObject = function(includeInstance, msg) {
  var f, obj = {
    consensusParams: (f = msg.getConsensusParams()) && cometbft_types_v1_params_pb.ConsensusParams.toObject(includeInstance, f),
    validatorsList: jspb.Message.toObjectList(msg.getValidatorsList(),
    cometbft_abci_v1beta1_types_pb.ValidatorUpdate.toObject, includeInstance),
    appHash: msg.getAppHash_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta3.ResponseInitChain}
 */
proto.cometbft.abci.v1beta3.ResponseInitChain.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta3.ResponseInitChain;
  return proto.cometbft.abci.v1beta3.ResponseInitChain.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta3.ResponseInitChain} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta3.ResponseInitChain}
 */
proto.cometbft.abci.v1beta3.ResponseInitChain.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cometbft_types_v1_params_pb.ConsensusParams;
      reader.readMessage(value,cometbft_types_v1_params_pb.ConsensusParams.deserializeBinaryFromReader);
      msg.setConsensusParams(value);
      break;
    case 2:
      var value = new cometbft_abci_v1beta1_types_pb.ValidatorUpdate;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.ValidatorUpdate.deserializeBinaryFromReader);
      msg.addValidators(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAppHash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.ResponseInitChain.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta3.ResponseInitChain.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta3.ResponseInitChain} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.ResponseInitChain.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConsensusParams();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cometbft_types_v1_params_pb.ConsensusParams.serializeBinaryToWriter
    );
  }
  f = message.getValidatorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      cometbft_abci_v1beta1_types_pb.ValidatorUpdate.serializeBinaryToWriter
    );
  }
  f = message.getAppHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional cometbft.types.v1.ConsensusParams consensus_params = 1;
 * @return {?proto.cometbft.types.v1.ConsensusParams}
 */
proto.cometbft.abci.v1beta3.ResponseInitChain.prototype.getConsensusParams = function() {
  return /** @type{?proto.cometbft.types.v1.ConsensusParams} */ (
    jspb.Message.getWrapperField(this, cometbft_types_v1_params_pb.ConsensusParams, 1));
};


/**
 * @param {?proto.cometbft.types.v1.ConsensusParams|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.ResponseInitChain} returns this
*/
proto.cometbft.abci.v1beta3.ResponseInitChain.prototype.setConsensusParams = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.ResponseInitChain} returns this
 */
proto.cometbft.abci.v1beta3.ResponseInitChain.prototype.clearConsensusParams = function() {
  return this.setConsensusParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.ResponseInitChain.prototype.hasConsensusParams = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated cometbft.abci.v1beta1.ValidatorUpdate validators = 2;
 * @return {!Array<!proto.cometbft.abci.v1beta1.ValidatorUpdate>}
 */
proto.cometbft.abci.v1beta3.ResponseInitChain.prototype.getValidatorsList = function() {
  return /** @type{!Array<!proto.cometbft.abci.v1beta1.ValidatorUpdate>} */ (
    jspb.Message.getRepeatedWrapperField(this, cometbft_abci_v1beta1_types_pb.ValidatorUpdate, 2));
};


/**
 * @param {!Array<!proto.cometbft.abci.v1beta1.ValidatorUpdate>} value
 * @return {!proto.cometbft.abci.v1beta3.ResponseInitChain} returns this
*/
proto.cometbft.abci.v1beta3.ResponseInitChain.prototype.setValidatorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.cometbft.abci.v1beta1.ValidatorUpdate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cometbft.abci.v1beta1.ValidatorUpdate}
 */
proto.cometbft.abci.v1beta3.ResponseInitChain.prototype.addValidators = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.cometbft.abci.v1beta1.ValidatorUpdate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cometbft.abci.v1beta3.ResponseInitChain} returns this
 */
proto.cometbft.abci.v1beta3.ResponseInitChain.prototype.clearValidatorsList = function() {
  return this.setValidatorsList([]);
};


/**
 * optional bytes app_hash = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cometbft.abci.v1beta3.ResponseInitChain.prototype.getAppHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes app_hash = 3;
 * This is a type-conversion wrapper around `getAppHash()`
 * @return {string}
 */
proto.cometbft.abci.v1beta3.ResponseInitChain.prototype.getAppHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAppHash()));
};


/**
 * optional bytes app_hash = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAppHash()`
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.ResponseInitChain.prototype.getAppHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAppHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cometbft.abci.v1beta3.ResponseInitChain} returns this
 */
proto.cometbft.abci.v1beta3.ResponseInitChain.prototype.setAppHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cometbft.abci.v1beta3.ResponseCheckTx.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta3.ResponseCheckTx.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta3.ResponseCheckTx.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta3.ResponseCheckTx} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.ResponseCheckTx.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    data: msg.getData_asB64(),
    log: jspb.Message.getFieldWithDefault(msg, 3, ""),
    info: jspb.Message.getFieldWithDefault(msg, 4, ""),
    gasWanted: jspb.Message.getFieldWithDefault(msg, 5, 0),
    gasUsed: jspb.Message.getFieldWithDefault(msg, 6, 0),
    eventsList: jspb.Message.toObjectList(msg.getEventsList(),
    cometbft_abci_v1beta2_types_pb.Event.toObject, includeInstance),
    codespace: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta3.ResponseCheckTx}
 */
proto.cometbft.abci.v1beta3.ResponseCheckTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta3.ResponseCheckTx;
  return proto.cometbft.abci.v1beta3.ResponseCheckTx.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta3.ResponseCheckTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta3.ResponseCheckTx}
 */
proto.cometbft.abci.v1beta3.ResponseCheckTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLog(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setInfo(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGasWanted(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGasUsed(value);
      break;
    case 7:
      var value = new cometbft_abci_v1beta2_types_pb.Event;
      reader.readMessage(value,cometbft_abci_v1beta2_types_pb.Event.deserializeBinaryFromReader);
      msg.addEvents(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCodespace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.ResponseCheckTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta3.ResponseCheckTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta3.ResponseCheckTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.ResponseCheckTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getLog();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getInfo();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getGasWanted();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getGasUsed();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      cometbft_abci_v1beta2_types_pb.Event.serializeBinaryToWriter
    );
  }
  f = message.getCodespace();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional uint32 code = 1;
 * @return {number}
 */
proto.cometbft.abci.v1beta3.ResponseCheckTx.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.abci.v1beta3.ResponseCheckTx} returns this
 */
proto.cometbft.abci.v1beta3.ResponseCheckTx.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bytes data = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cometbft.abci.v1beta3.ResponseCheckTx.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes data = 2;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.cometbft.abci.v1beta3.ResponseCheckTx.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.ResponseCheckTx.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cometbft.abci.v1beta3.ResponseCheckTx} returns this
 */
proto.cometbft.abci.v1beta3.ResponseCheckTx.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional string log = 3;
 * @return {string}
 */
proto.cometbft.abci.v1beta3.ResponseCheckTx.prototype.getLog = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cometbft.abci.v1beta3.ResponseCheckTx} returns this
 */
proto.cometbft.abci.v1beta3.ResponseCheckTx.prototype.setLog = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string info = 4;
 * @return {string}
 */
proto.cometbft.abci.v1beta3.ResponseCheckTx.prototype.getInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cometbft.abci.v1beta3.ResponseCheckTx} returns this
 */
proto.cometbft.abci.v1beta3.ResponseCheckTx.prototype.setInfo = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 gas_wanted = 5;
 * @return {number}
 */
proto.cometbft.abci.v1beta3.ResponseCheckTx.prototype.getGasWanted = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.abci.v1beta3.ResponseCheckTx} returns this
 */
proto.cometbft.abci.v1beta3.ResponseCheckTx.prototype.setGasWanted = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 gas_used = 6;
 * @return {number}
 */
proto.cometbft.abci.v1beta3.ResponseCheckTx.prototype.getGasUsed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.abci.v1beta3.ResponseCheckTx} returns this
 */
proto.cometbft.abci.v1beta3.ResponseCheckTx.prototype.setGasUsed = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * repeated cometbft.abci.v1beta2.Event events = 7;
 * @return {!Array<!proto.cometbft.abci.v1beta2.Event>}
 */
proto.cometbft.abci.v1beta3.ResponseCheckTx.prototype.getEventsList = function() {
  return /** @type{!Array<!proto.cometbft.abci.v1beta2.Event>} */ (
    jspb.Message.getRepeatedWrapperField(this, cometbft_abci_v1beta2_types_pb.Event, 7));
};


/**
 * @param {!Array<!proto.cometbft.abci.v1beta2.Event>} value
 * @return {!proto.cometbft.abci.v1beta3.ResponseCheckTx} returns this
*/
proto.cometbft.abci.v1beta3.ResponseCheckTx.prototype.setEventsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.cometbft.abci.v1beta2.Event=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cometbft.abci.v1beta2.Event}
 */
proto.cometbft.abci.v1beta3.ResponseCheckTx.prototype.addEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.cometbft.abci.v1beta2.Event, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cometbft.abci.v1beta3.ResponseCheckTx} returns this
 */
proto.cometbft.abci.v1beta3.ResponseCheckTx.prototype.clearEventsList = function() {
  return this.setEventsList([]);
};


/**
 * optional string codespace = 8;
 * @return {string}
 */
proto.cometbft.abci.v1beta3.ResponseCheckTx.prototype.getCodespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.cometbft.abci.v1beta3.ResponseCheckTx} returns this
 */
proto.cometbft.abci.v1beta3.ResponseCheckTx.prototype.setCodespace = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta3.ResponseCommit.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta3.ResponseCommit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta3.ResponseCommit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.ResponseCommit.toObject = function(includeInstance, msg) {
  var f, obj = {
    retainHeight: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta3.ResponseCommit}
 */
proto.cometbft.abci.v1beta3.ResponseCommit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta3.ResponseCommit;
  return proto.cometbft.abci.v1beta3.ResponseCommit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta3.ResponseCommit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta3.ResponseCommit}
 */
proto.cometbft.abci.v1beta3.ResponseCommit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRetainHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.ResponseCommit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta3.ResponseCommit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta3.ResponseCommit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.ResponseCommit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRetainHeight();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional int64 retain_height = 3;
 * @return {number}
 */
proto.cometbft.abci.v1beta3.ResponseCommit.prototype.getRetainHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.abci.v1beta3.ResponseCommit} returns this
 */
proto.cometbft.abci.v1beta3.ResponseCommit.prototype.setRetainHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta3.ResponseExtendVote.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta3.ResponseExtendVote.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta3.ResponseExtendVote} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.ResponseExtendVote.toObject = function(includeInstance, msg) {
  var f, obj = {
    voteExtension: msg.getVoteExtension_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta3.ResponseExtendVote}
 */
proto.cometbft.abci.v1beta3.ResponseExtendVote.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta3.ResponseExtendVote;
  return proto.cometbft.abci.v1beta3.ResponseExtendVote.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta3.ResponseExtendVote} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta3.ResponseExtendVote}
 */
proto.cometbft.abci.v1beta3.ResponseExtendVote.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setVoteExtension(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.ResponseExtendVote.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta3.ResponseExtendVote.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta3.ResponseExtendVote} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.ResponseExtendVote.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVoteExtension_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes vote_extension = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cometbft.abci.v1beta3.ResponseExtendVote.prototype.getVoteExtension = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes vote_extension = 1;
 * This is a type-conversion wrapper around `getVoteExtension()`
 * @return {string}
 */
proto.cometbft.abci.v1beta3.ResponseExtendVote.prototype.getVoteExtension_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getVoteExtension()));
};


/**
 * optional bytes vote_extension = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getVoteExtension()`
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.ResponseExtendVote.prototype.getVoteExtension_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getVoteExtension()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cometbft.abci.v1beta3.ResponseExtendVote} returns this
 */
proto.cometbft.abci.v1beta3.ResponseExtendVote.prototype.setVoteExtension = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta3.ResponseVerifyVoteExtension.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta3.ResponseVerifyVoteExtension.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta3.ResponseVerifyVoteExtension} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.ResponseVerifyVoteExtension.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta3.ResponseVerifyVoteExtension}
 */
proto.cometbft.abci.v1beta3.ResponseVerifyVoteExtension.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta3.ResponseVerifyVoteExtension;
  return proto.cometbft.abci.v1beta3.ResponseVerifyVoteExtension.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta3.ResponseVerifyVoteExtension} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta3.ResponseVerifyVoteExtension}
 */
proto.cometbft.abci.v1beta3.ResponseVerifyVoteExtension.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cometbft.abci.v1beta3.ResponseVerifyVoteExtension.VerifyStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.ResponseVerifyVoteExtension.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta3.ResponseVerifyVoteExtension.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta3.ResponseVerifyVoteExtension} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.ResponseVerifyVoteExtension.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cometbft.abci.v1beta3.ResponseVerifyVoteExtension.VerifyStatus = {
  UNKNOWN: 0,
  ACCEPT: 1,
  REJECT: 2
};

/**
 * optional VerifyStatus status = 1;
 * @return {!proto.cometbft.abci.v1beta3.ResponseVerifyVoteExtension.VerifyStatus}
 */
proto.cometbft.abci.v1beta3.ResponseVerifyVoteExtension.prototype.getStatus = function() {
  return /** @type {!proto.cometbft.abci.v1beta3.ResponseVerifyVoteExtension.VerifyStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cometbft.abci.v1beta3.ResponseVerifyVoteExtension.VerifyStatus} value
 * @return {!proto.cometbft.abci.v1beta3.ResponseVerifyVoteExtension} returns this
 */
proto.cometbft.abci.v1beta3.ResponseVerifyVoteExtension.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cometbft.abci.v1beta3.ResponseFinalizeBlock.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta3.ResponseFinalizeBlock.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta3.ResponseFinalizeBlock.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta3.ResponseFinalizeBlock} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.ResponseFinalizeBlock.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventsList: jspb.Message.toObjectList(msg.getEventsList(),
    cometbft_abci_v1beta2_types_pb.Event.toObject, includeInstance),
    txResultsList: jspb.Message.toObjectList(msg.getTxResultsList(),
    proto.cometbft.abci.v1beta3.ExecTxResult.toObject, includeInstance),
    validatorUpdatesList: jspb.Message.toObjectList(msg.getValidatorUpdatesList(),
    cometbft_abci_v1beta1_types_pb.ValidatorUpdate.toObject, includeInstance),
    consensusParamUpdates: (f = msg.getConsensusParamUpdates()) && cometbft_types_v1_params_pb.ConsensusParams.toObject(includeInstance, f),
    appHash: msg.getAppHash_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta3.ResponseFinalizeBlock}
 */
proto.cometbft.abci.v1beta3.ResponseFinalizeBlock.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta3.ResponseFinalizeBlock;
  return proto.cometbft.abci.v1beta3.ResponseFinalizeBlock.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta3.ResponseFinalizeBlock} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta3.ResponseFinalizeBlock}
 */
proto.cometbft.abci.v1beta3.ResponseFinalizeBlock.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cometbft_abci_v1beta2_types_pb.Event;
      reader.readMessage(value,cometbft_abci_v1beta2_types_pb.Event.deserializeBinaryFromReader);
      msg.addEvents(value);
      break;
    case 2:
      var value = new proto.cometbft.abci.v1beta3.ExecTxResult;
      reader.readMessage(value,proto.cometbft.abci.v1beta3.ExecTxResult.deserializeBinaryFromReader);
      msg.addTxResults(value);
      break;
    case 3:
      var value = new cometbft_abci_v1beta1_types_pb.ValidatorUpdate;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.ValidatorUpdate.deserializeBinaryFromReader);
      msg.addValidatorUpdates(value);
      break;
    case 4:
      var value = new cometbft_types_v1_params_pb.ConsensusParams;
      reader.readMessage(value,cometbft_types_v1_params_pb.ConsensusParams.deserializeBinaryFromReader);
      msg.setConsensusParamUpdates(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAppHash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.ResponseFinalizeBlock.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta3.ResponseFinalizeBlock.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta3.ResponseFinalizeBlock} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.ResponseFinalizeBlock.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      cometbft_abci_v1beta2_types_pb.Event.serializeBinaryToWriter
    );
  }
  f = message.getTxResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.cometbft.abci.v1beta3.ExecTxResult.serializeBinaryToWriter
    );
  }
  f = message.getValidatorUpdatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      cometbft_abci_v1beta1_types_pb.ValidatorUpdate.serializeBinaryToWriter
    );
  }
  f = message.getConsensusParamUpdates();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cometbft_types_v1_params_pb.ConsensusParams.serializeBinaryToWriter
    );
  }
  f = message.getAppHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
};


/**
 * repeated cometbft.abci.v1beta2.Event events = 1;
 * @return {!Array<!proto.cometbft.abci.v1beta2.Event>}
 */
proto.cometbft.abci.v1beta3.ResponseFinalizeBlock.prototype.getEventsList = function() {
  return /** @type{!Array<!proto.cometbft.abci.v1beta2.Event>} */ (
    jspb.Message.getRepeatedWrapperField(this, cometbft_abci_v1beta2_types_pb.Event, 1));
};


/**
 * @param {!Array<!proto.cometbft.abci.v1beta2.Event>} value
 * @return {!proto.cometbft.abci.v1beta3.ResponseFinalizeBlock} returns this
*/
proto.cometbft.abci.v1beta3.ResponseFinalizeBlock.prototype.setEventsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cometbft.abci.v1beta2.Event=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cometbft.abci.v1beta2.Event}
 */
proto.cometbft.abci.v1beta3.ResponseFinalizeBlock.prototype.addEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cometbft.abci.v1beta2.Event, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cometbft.abci.v1beta3.ResponseFinalizeBlock} returns this
 */
proto.cometbft.abci.v1beta3.ResponseFinalizeBlock.prototype.clearEventsList = function() {
  return this.setEventsList([]);
};


/**
 * repeated ExecTxResult tx_results = 2;
 * @return {!Array<!proto.cometbft.abci.v1beta3.ExecTxResult>}
 */
proto.cometbft.abci.v1beta3.ResponseFinalizeBlock.prototype.getTxResultsList = function() {
  return /** @type{!Array<!proto.cometbft.abci.v1beta3.ExecTxResult>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cometbft.abci.v1beta3.ExecTxResult, 2));
};


/**
 * @param {!Array<!proto.cometbft.abci.v1beta3.ExecTxResult>} value
 * @return {!proto.cometbft.abci.v1beta3.ResponseFinalizeBlock} returns this
*/
proto.cometbft.abci.v1beta3.ResponseFinalizeBlock.prototype.setTxResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.cometbft.abci.v1beta3.ExecTxResult=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cometbft.abci.v1beta3.ExecTxResult}
 */
proto.cometbft.abci.v1beta3.ResponseFinalizeBlock.prototype.addTxResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.cometbft.abci.v1beta3.ExecTxResult, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cometbft.abci.v1beta3.ResponseFinalizeBlock} returns this
 */
proto.cometbft.abci.v1beta3.ResponseFinalizeBlock.prototype.clearTxResultsList = function() {
  return this.setTxResultsList([]);
};


/**
 * repeated cometbft.abci.v1beta1.ValidatorUpdate validator_updates = 3;
 * @return {!Array<!proto.cometbft.abci.v1beta1.ValidatorUpdate>}
 */
proto.cometbft.abci.v1beta3.ResponseFinalizeBlock.prototype.getValidatorUpdatesList = function() {
  return /** @type{!Array<!proto.cometbft.abci.v1beta1.ValidatorUpdate>} */ (
    jspb.Message.getRepeatedWrapperField(this, cometbft_abci_v1beta1_types_pb.ValidatorUpdate, 3));
};


/**
 * @param {!Array<!proto.cometbft.abci.v1beta1.ValidatorUpdate>} value
 * @return {!proto.cometbft.abci.v1beta3.ResponseFinalizeBlock} returns this
*/
proto.cometbft.abci.v1beta3.ResponseFinalizeBlock.prototype.setValidatorUpdatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.cometbft.abci.v1beta1.ValidatorUpdate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cometbft.abci.v1beta1.ValidatorUpdate}
 */
proto.cometbft.abci.v1beta3.ResponseFinalizeBlock.prototype.addValidatorUpdates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.cometbft.abci.v1beta1.ValidatorUpdate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cometbft.abci.v1beta3.ResponseFinalizeBlock} returns this
 */
proto.cometbft.abci.v1beta3.ResponseFinalizeBlock.prototype.clearValidatorUpdatesList = function() {
  return this.setValidatorUpdatesList([]);
};


/**
 * optional cometbft.types.v1.ConsensusParams consensus_param_updates = 4;
 * @return {?proto.cometbft.types.v1.ConsensusParams}
 */
proto.cometbft.abci.v1beta3.ResponseFinalizeBlock.prototype.getConsensusParamUpdates = function() {
  return /** @type{?proto.cometbft.types.v1.ConsensusParams} */ (
    jspb.Message.getWrapperField(this, cometbft_types_v1_params_pb.ConsensusParams, 4));
};


/**
 * @param {?proto.cometbft.types.v1.ConsensusParams|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.ResponseFinalizeBlock} returns this
*/
proto.cometbft.abci.v1beta3.ResponseFinalizeBlock.prototype.setConsensusParamUpdates = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.ResponseFinalizeBlock} returns this
 */
proto.cometbft.abci.v1beta3.ResponseFinalizeBlock.prototype.clearConsensusParamUpdates = function() {
  return this.setConsensusParamUpdates(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.ResponseFinalizeBlock.prototype.hasConsensusParamUpdates = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bytes app_hash = 5;
 * @return {!(string|Uint8Array)}
 */
proto.cometbft.abci.v1beta3.ResponseFinalizeBlock.prototype.getAppHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes app_hash = 5;
 * This is a type-conversion wrapper around `getAppHash()`
 * @return {string}
 */
proto.cometbft.abci.v1beta3.ResponseFinalizeBlock.prototype.getAppHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAppHash()));
};


/**
 * optional bytes app_hash = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAppHash()`
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.ResponseFinalizeBlock.prototype.getAppHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAppHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cometbft.abci.v1beta3.ResponseFinalizeBlock} returns this
 */
proto.cometbft.abci.v1beta3.ResponseFinalizeBlock.prototype.setAppHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta3.VoteInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta3.VoteInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta3.VoteInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.VoteInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    validator: (f = msg.getValidator()) && cometbft_abci_v1beta1_types_pb.Validator.toObject(includeInstance, f),
    blockIdFlag: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta3.VoteInfo}
 */
proto.cometbft.abci.v1beta3.VoteInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta3.VoteInfo;
  return proto.cometbft.abci.v1beta3.VoteInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta3.VoteInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta3.VoteInfo}
 */
proto.cometbft.abci.v1beta3.VoteInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cometbft_abci_v1beta1_types_pb.Validator;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.Validator.deserializeBinaryFromReader);
      msg.setValidator(value);
      break;
    case 3:
      var value = /** @type {!proto.cometbft.types.v1beta1.BlockIDFlag} */ (reader.readEnum());
      msg.setBlockIdFlag(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.VoteInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta3.VoteInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta3.VoteInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.VoteInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidator();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cometbft_abci_v1beta1_types_pb.Validator.serializeBinaryToWriter
    );
  }
  f = message.getBlockIdFlag();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional cometbft.abci.v1beta1.Validator validator = 1;
 * @return {?proto.cometbft.abci.v1beta1.Validator}
 */
proto.cometbft.abci.v1beta3.VoteInfo.prototype.getValidator = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.Validator} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.Validator, 1));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.Validator|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.VoteInfo} returns this
*/
proto.cometbft.abci.v1beta3.VoteInfo.prototype.setValidator = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.VoteInfo} returns this
 */
proto.cometbft.abci.v1beta3.VoteInfo.prototype.clearValidator = function() {
  return this.setValidator(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.VoteInfo.prototype.hasValidator = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional cometbft.types.v1beta1.BlockIDFlag block_id_flag = 3;
 * @return {!proto.cometbft.types.v1beta1.BlockIDFlag}
 */
proto.cometbft.abci.v1beta3.VoteInfo.prototype.getBlockIdFlag = function() {
  return /** @type {!proto.cometbft.types.v1beta1.BlockIDFlag} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.cometbft.types.v1beta1.BlockIDFlag} value
 * @return {!proto.cometbft.abci.v1beta3.VoteInfo} returns this
 */
proto.cometbft.abci.v1beta3.VoteInfo.prototype.setBlockIdFlag = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta3.ExtendedVoteInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta3.ExtendedVoteInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta3.ExtendedVoteInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.ExtendedVoteInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    validator: (f = msg.getValidator()) && cometbft_abci_v1beta1_types_pb.Validator.toObject(includeInstance, f),
    voteExtension: msg.getVoteExtension_asB64(),
    extensionSignature: msg.getExtensionSignature_asB64(),
    blockIdFlag: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta3.ExtendedVoteInfo}
 */
proto.cometbft.abci.v1beta3.ExtendedVoteInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta3.ExtendedVoteInfo;
  return proto.cometbft.abci.v1beta3.ExtendedVoteInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta3.ExtendedVoteInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta3.ExtendedVoteInfo}
 */
proto.cometbft.abci.v1beta3.ExtendedVoteInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cometbft_abci_v1beta1_types_pb.Validator;
      reader.readMessage(value,cometbft_abci_v1beta1_types_pb.Validator.deserializeBinaryFromReader);
      msg.setValidator(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setVoteExtension(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setExtensionSignature(value);
      break;
    case 5:
      var value = /** @type {!proto.cometbft.types.v1beta1.BlockIDFlag} */ (reader.readEnum());
      msg.setBlockIdFlag(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.ExtendedVoteInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta3.ExtendedVoteInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta3.ExtendedVoteInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.ExtendedVoteInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidator();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cometbft_abci_v1beta1_types_pb.Validator.serializeBinaryToWriter
    );
  }
  f = message.getVoteExtension_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getExtensionSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getBlockIdFlag();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * optional cometbft.abci.v1beta1.Validator validator = 1;
 * @return {?proto.cometbft.abci.v1beta1.Validator}
 */
proto.cometbft.abci.v1beta3.ExtendedVoteInfo.prototype.getValidator = function() {
  return /** @type{?proto.cometbft.abci.v1beta1.Validator} */ (
    jspb.Message.getWrapperField(this, cometbft_abci_v1beta1_types_pb.Validator, 1));
};


/**
 * @param {?proto.cometbft.abci.v1beta1.Validator|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.ExtendedVoteInfo} returns this
*/
proto.cometbft.abci.v1beta3.ExtendedVoteInfo.prototype.setValidator = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.ExtendedVoteInfo} returns this
 */
proto.cometbft.abci.v1beta3.ExtendedVoteInfo.prototype.clearValidator = function() {
  return this.setValidator(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.ExtendedVoteInfo.prototype.hasValidator = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes vote_extension = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cometbft.abci.v1beta3.ExtendedVoteInfo.prototype.getVoteExtension = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes vote_extension = 3;
 * This is a type-conversion wrapper around `getVoteExtension()`
 * @return {string}
 */
proto.cometbft.abci.v1beta3.ExtendedVoteInfo.prototype.getVoteExtension_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getVoteExtension()));
};


/**
 * optional bytes vote_extension = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getVoteExtension()`
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.ExtendedVoteInfo.prototype.getVoteExtension_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getVoteExtension()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cometbft.abci.v1beta3.ExtendedVoteInfo} returns this
 */
proto.cometbft.abci.v1beta3.ExtendedVoteInfo.prototype.setVoteExtension = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional bytes extension_signature = 4;
 * @return {!(string|Uint8Array)}
 */
proto.cometbft.abci.v1beta3.ExtendedVoteInfo.prototype.getExtensionSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes extension_signature = 4;
 * This is a type-conversion wrapper around `getExtensionSignature()`
 * @return {string}
 */
proto.cometbft.abci.v1beta3.ExtendedVoteInfo.prototype.getExtensionSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getExtensionSignature()));
};


/**
 * optional bytes extension_signature = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getExtensionSignature()`
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.ExtendedVoteInfo.prototype.getExtensionSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getExtensionSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cometbft.abci.v1beta3.ExtendedVoteInfo} returns this
 */
proto.cometbft.abci.v1beta3.ExtendedVoteInfo.prototype.setExtensionSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional cometbft.types.v1beta1.BlockIDFlag block_id_flag = 5;
 * @return {!proto.cometbft.types.v1beta1.BlockIDFlag}
 */
proto.cometbft.abci.v1beta3.ExtendedVoteInfo.prototype.getBlockIdFlag = function() {
  return /** @type {!proto.cometbft.types.v1beta1.BlockIDFlag} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.cometbft.types.v1beta1.BlockIDFlag} value
 * @return {!proto.cometbft.abci.v1beta3.ExtendedVoteInfo} returns this
 */
proto.cometbft.abci.v1beta3.ExtendedVoteInfo.prototype.setBlockIdFlag = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cometbft.abci.v1beta3.CommitInfo.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta3.CommitInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta3.CommitInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta3.CommitInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.CommitInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    round: jspb.Message.getFieldWithDefault(msg, 1, 0),
    votesList: jspb.Message.toObjectList(msg.getVotesList(),
    proto.cometbft.abci.v1beta3.VoteInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta3.CommitInfo}
 */
proto.cometbft.abci.v1beta3.CommitInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta3.CommitInfo;
  return proto.cometbft.abci.v1beta3.CommitInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta3.CommitInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta3.CommitInfo}
 */
proto.cometbft.abci.v1beta3.CommitInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRound(value);
      break;
    case 2:
      var value = new proto.cometbft.abci.v1beta3.VoteInfo;
      reader.readMessage(value,proto.cometbft.abci.v1beta3.VoteInfo.deserializeBinaryFromReader);
      msg.addVotes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.CommitInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta3.CommitInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta3.CommitInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.CommitInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRound();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getVotesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.cometbft.abci.v1beta3.VoteInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 round = 1;
 * @return {number}
 */
proto.cometbft.abci.v1beta3.CommitInfo.prototype.getRound = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.abci.v1beta3.CommitInfo} returns this
 */
proto.cometbft.abci.v1beta3.CommitInfo.prototype.setRound = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated VoteInfo votes = 2;
 * @return {!Array<!proto.cometbft.abci.v1beta3.VoteInfo>}
 */
proto.cometbft.abci.v1beta3.CommitInfo.prototype.getVotesList = function() {
  return /** @type{!Array<!proto.cometbft.abci.v1beta3.VoteInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cometbft.abci.v1beta3.VoteInfo, 2));
};


/**
 * @param {!Array<!proto.cometbft.abci.v1beta3.VoteInfo>} value
 * @return {!proto.cometbft.abci.v1beta3.CommitInfo} returns this
*/
proto.cometbft.abci.v1beta3.CommitInfo.prototype.setVotesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.cometbft.abci.v1beta3.VoteInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cometbft.abci.v1beta3.VoteInfo}
 */
proto.cometbft.abci.v1beta3.CommitInfo.prototype.addVotes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.cometbft.abci.v1beta3.VoteInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cometbft.abci.v1beta3.CommitInfo} returns this
 */
proto.cometbft.abci.v1beta3.CommitInfo.prototype.clearVotesList = function() {
  return this.setVotesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cometbft.abci.v1beta3.ExtendedCommitInfo.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta3.ExtendedCommitInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta3.ExtendedCommitInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta3.ExtendedCommitInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.ExtendedCommitInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    round: jspb.Message.getFieldWithDefault(msg, 1, 0),
    votesList: jspb.Message.toObjectList(msg.getVotesList(),
    proto.cometbft.abci.v1beta3.ExtendedVoteInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta3.ExtendedCommitInfo}
 */
proto.cometbft.abci.v1beta3.ExtendedCommitInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta3.ExtendedCommitInfo;
  return proto.cometbft.abci.v1beta3.ExtendedCommitInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta3.ExtendedCommitInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta3.ExtendedCommitInfo}
 */
proto.cometbft.abci.v1beta3.ExtendedCommitInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRound(value);
      break;
    case 2:
      var value = new proto.cometbft.abci.v1beta3.ExtendedVoteInfo;
      reader.readMessage(value,proto.cometbft.abci.v1beta3.ExtendedVoteInfo.deserializeBinaryFromReader);
      msg.addVotes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.ExtendedCommitInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta3.ExtendedCommitInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta3.ExtendedCommitInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.ExtendedCommitInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRound();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getVotesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.cometbft.abci.v1beta3.ExtendedVoteInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 round = 1;
 * @return {number}
 */
proto.cometbft.abci.v1beta3.ExtendedCommitInfo.prototype.getRound = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.abci.v1beta3.ExtendedCommitInfo} returns this
 */
proto.cometbft.abci.v1beta3.ExtendedCommitInfo.prototype.setRound = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated ExtendedVoteInfo votes = 2;
 * @return {!Array<!proto.cometbft.abci.v1beta3.ExtendedVoteInfo>}
 */
proto.cometbft.abci.v1beta3.ExtendedCommitInfo.prototype.getVotesList = function() {
  return /** @type{!Array<!proto.cometbft.abci.v1beta3.ExtendedVoteInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cometbft.abci.v1beta3.ExtendedVoteInfo, 2));
};


/**
 * @param {!Array<!proto.cometbft.abci.v1beta3.ExtendedVoteInfo>} value
 * @return {!proto.cometbft.abci.v1beta3.ExtendedCommitInfo} returns this
*/
proto.cometbft.abci.v1beta3.ExtendedCommitInfo.prototype.setVotesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.cometbft.abci.v1beta3.ExtendedVoteInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cometbft.abci.v1beta3.ExtendedVoteInfo}
 */
proto.cometbft.abci.v1beta3.ExtendedCommitInfo.prototype.addVotes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.cometbft.abci.v1beta3.ExtendedVoteInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cometbft.abci.v1beta3.ExtendedCommitInfo} returns this
 */
proto.cometbft.abci.v1beta3.ExtendedCommitInfo.prototype.clearVotesList = function() {
  return this.setVotesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cometbft.abci.v1beta3.ExecTxResult.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta3.ExecTxResult.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta3.ExecTxResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta3.ExecTxResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.ExecTxResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    data: msg.getData_asB64(),
    log: jspb.Message.getFieldWithDefault(msg, 3, ""),
    info: jspb.Message.getFieldWithDefault(msg, 4, ""),
    gasWanted: jspb.Message.getFieldWithDefault(msg, 5, 0),
    gasUsed: jspb.Message.getFieldWithDefault(msg, 6, 0),
    eventsList: jspb.Message.toObjectList(msg.getEventsList(),
    cometbft_abci_v1beta2_types_pb.Event.toObject, includeInstance),
    codespace: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta3.ExecTxResult}
 */
proto.cometbft.abci.v1beta3.ExecTxResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta3.ExecTxResult;
  return proto.cometbft.abci.v1beta3.ExecTxResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta3.ExecTxResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta3.ExecTxResult}
 */
proto.cometbft.abci.v1beta3.ExecTxResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLog(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setInfo(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGasWanted(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGasUsed(value);
      break;
    case 7:
      var value = new cometbft_abci_v1beta2_types_pb.Event;
      reader.readMessage(value,cometbft_abci_v1beta2_types_pb.Event.deserializeBinaryFromReader);
      msg.addEvents(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCodespace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.ExecTxResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta3.ExecTxResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta3.ExecTxResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.ExecTxResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getLog();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getInfo();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getGasWanted();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getGasUsed();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      cometbft_abci_v1beta2_types_pb.Event.serializeBinaryToWriter
    );
  }
  f = message.getCodespace();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional uint32 code = 1;
 * @return {number}
 */
proto.cometbft.abci.v1beta3.ExecTxResult.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.abci.v1beta3.ExecTxResult} returns this
 */
proto.cometbft.abci.v1beta3.ExecTxResult.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bytes data = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cometbft.abci.v1beta3.ExecTxResult.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes data = 2;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.cometbft.abci.v1beta3.ExecTxResult.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.ExecTxResult.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cometbft.abci.v1beta3.ExecTxResult} returns this
 */
proto.cometbft.abci.v1beta3.ExecTxResult.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional string log = 3;
 * @return {string}
 */
proto.cometbft.abci.v1beta3.ExecTxResult.prototype.getLog = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cometbft.abci.v1beta3.ExecTxResult} returns this
 */
proto.cometbft.abci.v1beta3.ExecTxResult.prototype.setLog = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string info = 4;
 * @return {string}
 */
proto.cometbft.abci.v1beta3.ExecTxResult.prototype.getInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cometbft.abci.v1beta3.ExecTxResult} returns this
 */
proto.cometbft.abci.v1beta3.ExecTxResult.prototype.setInfo = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 gas_wanted = 5;
 * @return {number}
 */
proto.cometbft.abci.v1beta3.ExecTxResult.prototype.getGasWanted = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.abci.v1beta3.ExecTxResult} returns this
 */
proto.cometbft.abci.v1beta3.ExecTxResult.prototype.setGasWanted = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 gas_used = 6;
 * @return {number}
 */
proto.cometbft.abci.v1beta3.ExecTxResult.prototype.getGasUsed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.abci.v1beta3.ExecTxResult} returns this
 */
proto.cometbft.abci.v1beta3.ExecTxResult.prototype.setGasUsed = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * repeated cometbft.abci.v1beta2.Event events = 7;
 * @return {!Array<!proto.cometbft.abci.v1beta2.Event>}
 */
proto.cometbft.abci.v1beta3.ExecTxResult.prototype.getEventsList = function() {
  return /** @type{!Array<!proto.cometbft.abci.v1beta2.Event>} */ (
    jspb.Message.getRepeatedWrapperField(this, cometbft_abci_v1beta2_types_pb.Event, 7));
};


/**
 * @param {!Array<!proto.cometbft.abci.v1beta2.Event>} value
 * @return {!proto.cometbft.abci.v1beta3.ExecTxResult} returns this
*/
proto.cometbft.abci.v1beta3.ExecTxResult.prototype.setEventsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.cometbft.abci.v1beta2.Event=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cometbft.abci.v1beta2.Event}
 */
proto.cometbft.abci.v1beta3.ExecTxResult.prototype.addEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.cometbft.abci.v1beta2.Event, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cometbft.abci.v1beta3.ExecTxResult} returns this
 */
proto.cometbft.abci.v1beta3.ExecTxResult.prototype.clearEventsList = function() {
  return this.setEventsList([]);
};


/**
 * optional string codespace = 8;
 * @return {string}
 */
proto.cometbft.abci.v1beta3.ExecTxResult.prototype.getCodespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.cometbft.abci.v1beta3.ExecTxResult} returns this
 */
proto.cometbft.abci.v1beta3.ExecTxResult.prototype.setCodespace = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.abci.v1beta3.TxResult.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.abci.v1beta3.TxResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.abci.v1beta3.TxResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.TxResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    height: jspb.Message.getFieldWithDefault(msg, 1, 0),
    index: jspb.Message.getFieldWithDefault(msg, 2, 0),
    tx: msg.getTx_asB64(),
    result: (f = msg.getResult()) && proto.cometbft.abci.v1beta3.ExecTxResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.abci.v1beta3.TxResult}
 */
proto.cometbft.abci.v1beta3.TxResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.abci.v1beta3.TxResult;
  return proto.cometbft.abci.v1beta3.TxResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.abci.v1beta3.TxResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.abci.v1beta3.TxResult}
 */
proto.cometbft.abci.v1beta3.TxResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHeight(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIndex(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTx(value);
      break;
    case 4:
      var value = new proto.cometbft.abci.v1beta3.ExecTxResult;
      reader.readMessage(value,proto.cometbft.abci.v1beta3.ExecTxResult.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.TxResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.abci.v1beta3.TxResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.abci.v1beta3.TxResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.abci.v1beta3.TxResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeight();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getIndex();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getTx_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.cometbft.abci.v1beta3.ExecTxResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 height = 1;
 * @return {number}
 */
proto.cometbft.abci.v1beta3.TxResult.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.abci.v1beta3.TxResult} returns this
 */
proto.cometbft.abci.v1beta3.TxResult.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 index = 2;
 * @return {number}
 */
proto.cometbft.abci.v1beta3.TxResult.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.abci.v1beta3.TxResult} returns this
 */
proto.cometbft.abci.v1beta3.TxResult.prototype.setIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bytes tx = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cometbft.abci.v1beta3.TxResult.prototype.getTx = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes tx = 3;
 * This is a type-conversion wrapper around `getTx()`
 * @return {string}
 */
proto.cometbft.abci.v1beta3.TxResult.prototype.getTx_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTx()));
};


/**
 * optional bytes tx = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTx()`
 * @return {!Uint8Array}
 */
proto.cometbft.abci.v1beta3.TxResult.prototype.getTx_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTx()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cometbft.abci.v1beta3.TxResult} returns this
 */
proto.cometbft.abci.v1beta3.TxResult.prototype.setTx = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional ExecTxResult result = 4;
 * @return {?proto.cometbft.abci.v1beta3.ExecTxResult}
 */
proto.cometbft.abci.v1beta3.TxResult.prototype.getResult = function() {
  return /** @type{?proto.cometbft.abci.v1beta3.ExecTxResult} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.abci.v1beta3.ExecTxResult, 4));
};


/**
 * @param {?proto.cometbft.abci.v1beta3.ExecTxResult|undefined} value
 * @return {!proto.cometbft.abci.v1beta3.TxResult} returns this
*/
proto.cometbft.abci.v1beta3.TxResult.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.abci.v1beta3.TxResult} returns this
 */
proto.cometbft.abci.v1beta3.TxResult.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.abci.v1beta3.TxResult.prototype.hasResult = function() {
  return jspb.Message.getField(this, 4) != null;
};


goog.object.extend(exports, proto.cometbft.abci.v1beta3);
