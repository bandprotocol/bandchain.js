// source: cometbft/consensus/v1beta1/wal.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var gogoproto_gogo_pb = require('../../../gogoproto/gogo_pb.js');
goog.object.extend(proto, gogoproto_gogo_pb);
var cometbft_consensus_v1beta1_types_pb = require('../../../cometbft/consensus/v1beta1/types_pb.js');
goog.object.extend(proto, cometbft_consensus_v1beta1_types_pb);
var cometbft_types_v1beta1_events_pb = require('../../../cometbft/types/v1beta1/events_pb.js');
goog.object.extend(proto, cometbft_types_v1beta1_events_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.cometbft.consensus.v1beta1.EndHeight', null, global);
goog.exportSymbol('proto.cometbft.consensus.v1beta1.MsgInfo', null, global);
goog.exportSymbol('proto.cometbft.consensus.v1beta1.TimedWALMessage', null, global);
goog.exportSymbol('proto.cometbft.consensus.v1beta1.TimeoutInfo', null, global);
goog.exportSymbol('proto.cometbft.consensus.v1beta1.WALMessage', null, global);
goog.exportSymbol('proto.cometbft.consensus.v1beta1.WALMessage.SumCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.consensus.v1beta1.MsgInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cometbft.consensus.v1beta1.MsgInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.consensus.v1beta1.MsgInfo.displayName = 'proto.cometbft.consensus.v1beta1.MsgInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.consensus.v1beta1.TimeoutInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cometbft.consensus.v1beta1.TimeoutInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.consensus.v1beta1.TimeoutInfo.displayName = 'proto.cometbft.consensus.v1beta1.TimeoutInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.consensus.v1beta1.EndHeight = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cometbft.consensus.v1beta1.EndHeight, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.consensus.v1beta1.EndHeight.displayName = 'proto.cometbft.consensus.v1beta1.EndHeight';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.consensus.v1beta1.WALMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.cometbft.consensus.v1beta1.WALMessage.oneofGroups_);
};
goog.inherits(proto.cometbft.consensus.v1beta1.WALMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.consensus.v1beta1.WALMessage.displayName = 'proto.cometbft.consensus.v1beta1.WALMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cometbft.consensus.v1beta1.TimedWALMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cometbft.consensus.v1beta1.TimedWALMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cometbft.consensus.v1beta1.TimedWALMessage.displayName = 'proto.cometbft.consensus.v1beta1.TimedWALMessage';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.consensus.v1beta1.MsgInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.consensus.v1beta1.MsgInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.consensus.v1beta1.MsgInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.consensus.v1beta1.MsgInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    msg: (f = msg.getMsg()) && cometbft_consensus_v1beta1_types_pb.Message.toObject(includeInstance, f),
    peerId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.consensus.v1beta1.MsgInfo}
 */
proto.cometbft.consensus.v1beta1.MsgInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.consensus.v1beta1.MsgInfo;
  return proto.cometbft.consensus.v1beta1.MsgInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.consensus.v1beta1.MsgInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.consensus.v1beta1.MsgInfo}
 */
proto.cometbft.consensus.v1beta1.MsgInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cometbft_consensus_v1beta1_types_pb.Message;
      reader.readMessage(value,cometbft_consensus_v1beta1_types_pb.Message.deserializeBinaryFromReader);
      msg.setMsg(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPeerId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.consensus.v1beta1.MsgInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.consensus.v1beta1.MsgInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.consensus.v1beta1.MsgInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.consensus.v1beta1.MsgInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsg();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cometbft_consensus_v1beta1_types_pb.Message.serializeBinaryToWriter
    );
  }
  f = message.getPeerId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Message msg = 1;
 * @return {?proto.cometbft.consensus.v1beta1.Message}
 */
proto.cometbft.consensus.v1beta1.MsgInfo.prototype.getMsg = function() {
  return /** @type{?proto.cometbft.consensus.v1beta1.Message} */ (
    jspb.Message.getWrapperField(this, cometbft_consensus_v1beta1_types_pb.Message, 1));
};


/**
 * @param {?proto.cometbft.consensus.v1beta1.Message|undefined} value
 * @return {!proto.cometbft.consensus.v1beta1.MsgInfo} returns this
*/
proto.cometbft.consensus.v1beta1.MsgInfo.prototype.setMsg = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.consensus.v1beta1.MsgInfo} returns this
 */
proto.cometbft.consensus.v1beta1.MsgInfo.prototype.clearMsg = function() {
  return this.setMsg(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.consensus.v1beta1.MsgInfo.prototype.hasMsg = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string peer_id = 2;
 * @return {string}
 */
proto.cometbft.consensus.v1beta1.MsgInfo.prototype.getPeerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cometbft.consensus.v1beta1.MsgInfo} returns this
 */
proto.cometbft.consensus.v1beta1.MsgInfo.prototype.setPeerId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.consensus.v1beta1.TimeoutInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.consensus.v1beta1.TimeoutInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.consensus.v1beta1.TimeoutInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.consensus.v1beta1.TimeoutInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    duration: (f = msg.getDuration()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    height: jspb.Message.getFieldWithDefault(msg, 2, 0),
    round: jspb.Message.getFieldWithDefault(msg, 3, 0),
    step: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.consensus.v1beta1.TimeoutInfo}
 */
proto.cometbft.consensus.v1beta1.TimeoutInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.consensus.v1beta1.TimeoutInfo;
  return proto.cometbft.consensus.v1beta1.TimeoutInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.consensus.v1beta1.TimeoutInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.consensus.v1beta1.TimeoutInfo}
 */
proto.cometbft.consensus.v1beta1.TimeoutInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setDuration(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHeight(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRound(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStep(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.consensus.v1beta1.TimeoutInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.consensus.v1beta1.TimeoutInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.consensus.v1beta1.TimeoutInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.consensus.v1beta1.TimeoutInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDuration();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getRound();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getStep();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
};


/**
 * optional google.protobuf.Duration duration = 1;
 * @return {?proto.google.protobuf.Duration}
 */
proto.cometbft.consensus.v1beta1.TimeoutInfo.prototype.getDuration = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 1));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.cometbft.consensus.v1beta1.TimeoutInfo} returns this
*/
proto.cometbft.consensus.v1beta1.TimeoutInfo.prototype.setDuration = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.consensus.v1beta1.TimeoutInfo} returns this
 */
proto.cometbft.consensus.v1beta1.TimeoutInfo.prototype.clearDuration = function() {
  return this.setDuration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.consensus.v1beta1.TimeoutInfo.prototype.hasDuration = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 height = 2;
 * @return {number}
 */
proto.cometbft.consensus.v1beta1.TimeoutInfo.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.consensus.v1beta1.TimeoutInfo} returns this
 */
proto.cometbft.consensus.v1beta1.TimeoutInfo.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 round = 3;
 * @return {number}
 */
proto.cometbft.consensus.v1beta1.TimeoutInfo.prototype.getRound = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.consensus.v1beta1.TimeoutInfo} returns this
 */
proto.cometbft.consensus.v1beta1.TimeoutInfo.prototype.setRound = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 step = 4;
 * @return {number}
 */
proto.cometbft.consensus.v1beta1.TimeoutInfo.prototype.getStep = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.consensus.v1beta1.TimeoutInfo} returns this
 */
proto.cometbft.consensus.v1beta1.TimeoutInfo.prototype.setStep = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.consensus.v1beta1.EndHeight.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.consensus.v1beta1.EndHeight.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.consensus.v1beta1.EndHeight} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.consensus.v1beta1.EndHeight.toObject = function(includeInstance, msg) {
  var f, obj = {
    height: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.consensus.v1beta1.EndHeight}
 */
proto.cometbft.consensus.v1beta1.EndHeight.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.consensus.v1beta1.EndHeight;
  return proto.cometbft.consensus.v1beta1.EndHeight.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.consensus.v1beta1.EndHeight} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.consensus.v1beta1.EndHeight}
 */
proto.cometbft.consensus.v1beta1.EndHeight.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.consensus.v1beta1.EndHeight.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.consensus.v1beta1.EndHeight.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.consensus.v1beta1.EndHeight} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.consensus.v1beta1.EndHeight.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeight();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 height = 1;
 * @return {number}
 */
proto.cometbft.consensus.v1beta1.EndHeight.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cometbft.consensus.v1beta1.EndHeight} returns this
 */
proto.cometbft.consensus.v1beta1.EndHeight.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.cometbft.consensus.v1beta1.WALMessage.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.cometbft.consensus.v1beta1.WALMessage.SumCase = {
  SUM_NOT_SET: 0,
  EVENT_DATA_ROUND_STATE: 1,
  MSG_INFO: 2,
  TIMEOUT_INFO: 3,
  END_HEIGHT: 4
};

/**
 * @return {proto.cometbft.consensus.v1beta1.WALMessage.SumCase}
 */
proto.cometbft.consensus.v1beta1.WALMessage.prototype.getSumCase = function() {
  return /** @type {proto.cometbft.consensus.v1beta1.WALMessage.SumCase} */(jspb.Message.computeOneofCase(this, proto.cometbft.consensus.v1beta1.WALMessage.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.consensus.v1beta1.WALMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.consensus.v1beta1.WALMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.consensus.v1beta1.WALMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.consensus.v1beta1.WALMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventDataRoundState: (f = msg.getEventDataRoundState()) && cometbft_types_v1beta1_events_pb.EventDataRoundState.toObject(includeInstance, f),
    msgInfo: (f = msg.getMsgInfo()) && proto.cometbft.consensus.v1beta1.MsgInfo.toObject(includeInstance, f),
    timeoutInfo: (f = msg.getTimeoutInfo()) && proto.cometbft.consensus.v1beta1.TimeoutInfo.toObject(includeInstance, f),
    endHeight: (f = msg.getEndHeight()) && proto.cometbft.consensus.v1beta1.EndHeight.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.consensus.v1beta1.WALMessage}
 */
proto.cometbft.consensus.v1beta1.WALMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.consensus.v1beta1.WALMessage;
  return proto.cometbft.consensus.v1beta1.WALMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.consensus.v1beta1.WALMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.consensus.v1beta1.WALMessage}
 */
proto.cometbft.consensus.v1beta1.WALMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cometbft_types_v1beta1_events_pb.EventDataRoundState;
      reader.readMessage(value,cometbft_types_v1beta1_events_pb.EventDataRoundState.deserializeBinaryFromReader);
      msg.setEventDataRoundState(value);
      break;
    case 2:
      var value = new proto.cometbft.consensus.v1beta1.MsgInfo;
      reader.readMessage(value,proto.cometbft.consensus.v1beta1.MsgInfo.deserializeBinaryFromReader);
      msg.setMsgInfo(value);
      break;
    case 3:
      var value = new proto.cometbft.consensus.v1beta1.TimeoutInfo;
      reader.readMessage(value,proto.cometbft.consensus.v1beta1.TimeoutInfo.deserializeBinaryFromReader);
      msg.setTimeoutInfo(value);
      break;
    case 4:
      var value = new proto.cometbft.consensus.v1beta1.EndHeight;
      reader.readMessage(value,proto.cometbft.consensus.v1beta1.EndHeight.deserializeBinaryFromReader);
      msg.setEndHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.consensus.v1beta1.WALMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.consensus.v1beta1.WALMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.consensus.v1beta1.WALMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.consensus.v1beta1.WALMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventDataRoundState();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cometbft_types_v1beta1_events_pb.EventDataRoundState.serializeBinaryToWriter
    );
  }
  f = message.getMsgInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cometbft.consensus.v1beta1.MsgInfo.serializeBinaryToWriter
    );
  }
  f = message.getTimeoutInfo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cometbft.consensus.v1beta1.TimeoutInfo.serializeBinaryToWriter
    );
  }
  f = message.getEndHeight();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.cometbft.consensus.v1beta1.EndHeight.serializeBinaryToWriter
    );
  }
};


/**
 * optional cometbft.types.v1beta1.EventDataRoundState event_data_round_state = 1;
 * @return {?proto.cometbft.types.v1beta1.EventDataRoundState}
 */
proto.cometbft.consensus.v1beta1.WALMessage.prototype.getEventDataRoundState = function() {
  return /** @type{?proto.cometbft.types.v1beta1.EventDataRoundState} */ (
    jspb.Message.getWrapperField(this, cometbft_types_v1beta1_events_pb.EventDataRoundState, 1));
};


/**
 * @param {?proto.cometbft.types.v1beta1.EventDataRoundState|undefined} value
 * @return {!proto.cometbft.consensus.v1beta1.WALMessage} returns this
*/
proto.cometbft.consensus.v1beta1.WALMessage.prototype.setEventDataRoundState = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.cometbft.consensus.v1beta1.WALMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.consensus.v1beta1.WALMessage} returns this
 */
proto.cometbft.consensus.v1beta1.WALMessage.prototype.clearEventDataRoundState = function() {
  return this.setEventDataRoundState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.consensus.v1beta1.WALMessage.prototype.hasEventDataRoundState = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional MsgInfo msg_info = 2;
 * @return {?proto.cometbft.consensus.v1beta1.MsgInfo}
 */
proto.cometbft.consensus.v1beta1.WALMessage.prototype.getMsgInfo = function() {
  return /** @type{?proto.cometbft.consensus.v1beta1.MsgInfo} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.consensus.v1beta1.MsgInfo, 2));
};


/**
 * @param {?proto.cometbft.consensus.v1beta1.MsgInfo|undefined} value
 * @return {!proto.cometbft.consensus.v1beta1.WALMessage} returns this
*/
proto.cometbft.consensus.v1beta1.WALMessage.prototype.setMsgInfo = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.cometbft.consensus.v1beta1.WALMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.consensus.v1beta1.WALMessage} returns this
 */
proto.cometbft.consensus.v1beta1.WALMessage.prototype.clearMsgInfo = function() {
  return this.setMsgInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.consensus.v1beta1.WALMessage.prototype.hasMsgInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional TimeoutInfo timeout_info = 3;
 * @return {?proto.cometbft.consensus.v1beta1.TimeoutInfo}
 */
proto.cometbft.consensus.v1beta1.WALMessage.prototype.getTimeoutInfo = function() {
  return /** @type{?proto.cometbft.consensus.v1beta1.TimeoutInfo} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.consensus.v1beta1.TimeoutInfo, 3));
};


/**
 * @param {?proto.cometbft.consensus.v1beta1.TimeoutInfo|undefined} value
 * @return {!proto.cometbft.consensus.v1beta1.WALMessage} returns this
*/
proto.cometbft.consensus.v1beta1.WALMessage.prototype.setTimeoutInfo = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.cometbft.consensus.v1beta1.WALMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.consensus.v1beta1.WALMessage} returns this
 */
proto.cometbft.consensus.v1beta1.WALMessage.prototype.clearTimeoutInfo = function() {
  return this.setTimeoutInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.consensus.v1beta1.WALMessage.prototype.hasTimeoutInfo = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional EndHeight end_height = 4;
 * @return {?proto.cometbft.consensus.v1beta1.EndHeight}
 */
proto.cometbft.consensus.v1beta1.WALMessage.prototype.getEndHeight = function() {
  return /** @type{?proto.cometbft.consensus.v1beta1.EndHeight} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.consensus.v1beta1.EndHeight, 4));
};


/**
 * @param {?proto.cometbft.consensus.v1beta1.EndHeight|undefined} value
 * @return {!proto.cometbft.consensus.v1beta1.WALMessage} returns this
*/
proto.cometbft.consensus.v1beta1.WALMessage.prototype.setEndHeight = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.cometbft.consensus.v1beta1.WALMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.consensus.v1beta1.WALMessage} returns this
 */
proto.cometbft.consensus.v1beta1.WALMessage.prototype.clearEndHeight = function() {
  return this.setEndHeight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.consensus.v1beta1.WALMessage.prototype.hasEndHeight = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cometbft.consensus.v1beta1.TimedWALMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.cometbft.consensus.v1beta1.TimedWALMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cometbft.consensus.v1beta1.TimedWALMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.consensus.v1beta1.TimedWALMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    time: (f = msg.getTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    msg: (f = msg.getMsg()) && proto.cometbft.consensus.v1beta1.WALMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cometbft.consensus.v1beta1.TimedWALMessage}
 */
proto.cometbft.consensus.v1beta1.TimedWALMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cometbft.consensus.v1beta1.TimedWALMessage;
  return proto.cometbft.consensus.v1beta1.TimedWALMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cometbft.consensus.v1beta1.TimedWALMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cometbft.consensus.v1beta1.TimedWALMessage}
 */
proto.cometbft.consensus.v1beta1.TimedWALMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 2:
      var value = new proto.cometbft.consensus.v1beta1.WALMessage;
      reader.readMessage(value,proto.cometbft.consensus.v1beta1.WALMessage.deserializeBinaryFromReader);
      msg.setMsg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cometbft.consensus.v1beta1.TimedWALMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cometbft.consensus.v1beta1.TimedWALMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cometbft.consensus.v1beta1.TimedWALMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cometbft.consensus.v1beta1.TimedWALMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getMsg();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cometbft.consensus.v1beta1.WALMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp time = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.cometbft.consensus.v1beta1.TimedWALMessage.prototype.getTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.cometbft.consensus.v1beta1.TimedWALMessage} returns this
*/
proto.cometbft.consensus.v1beta1.TimedWALMessage.prototype.setTime = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.consensus.v1beta1.TimedWALMessage} returns this
 */
proto.cometbft.consensus.v1beta1.TimedWALMessage.prototype.clearTime = function() {
  return this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.consensus.v1beta1.TimedWALMessage.prototype.hasTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional WALMessage msg = 2;
 * @return {?proto.cometbft.consensus.v1beta1.WALMessage}
 */
proto.cometbft.consensus.v1beta1.TimedWALMessage.prototype.getMsg = function() {
  return /** @type{?proto.cometbft.consensus.v1beta1.WALMessage} */ (
    jspb.Message.getWrapperField(this, proto.cometbft.consensus.v1beta1.WALMessage, 2));
};


/**
 * @param {?proto.cometbft.consensus.v1beta1.WALMessage|undefined} value
 * @return {!proto.cometbft.consensus.v1beta1.TimedWALMessage} returns this
*/
proto.cometbft.consensus.v1beta1.TimedWALMessage.prototype.setMsg = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cometbft.consensus.v1beta1.TimedWALMessage} returns this
 */
proto.cometbft.consensus.v1beta1.TimedWALMessage.prototype.clearMsg = function() {
  return this.setMsg(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cometbft.consensus.v1beta1.TimedWALMessage.prototype.hasMsg = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.cometbft.consensus.v1beta1);
