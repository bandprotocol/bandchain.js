// source: feeds/v1beta1/tx.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var gogoproto_gogo_pb = require('../../gogoproto/gogo_pb.js');
goog.object.extend(proto, gogoproto_gogo_pb);
var feeds_v1beta1_feeds_pb = require('../../feeds/v1beta1/feeds_pb.js');
goog.object.extend(proto, feeds_v1beta1_feeds_pb);
var feeds_v1beta1_params_pb = require('../../feeds/v1beta1/params_pb.js');
goog.object.extend(proto, feeds_v1beta1_params_pb);
var cosmos_proto_cosmos_pb = require('../../cosmos_proto/cosmos_pb.js');
goog.object.extend(proto, cosmos_proto_cosmos_pb);
var cosmos_msg_v1_msg_pb = require('../../cosmos/msg/v1/msg_pb.js');
goog.object.extend(proto, cosmos_msg_v1_msg_pb);
var amino_amino_pb = require('../../amino/amino_pb.js');
goog.object.extend(proto, amino_amino_pb);
goog.exportSymbol('proto.feeds.v1beta1.MsgSubmitSignalPrices', null, global);
goog.exportSymbol('proto.feeds.v1beta1.MsgSubmitSignalPricesResponse', null, global);
goog.exportSymbol('proto.feeds.v1beta1.MsgSubmitSignals', null, global);
goog.exportSymbol('proto.feeds.v1beta1.MsgSubmitSignalsResponse', null, global);
goog.exportSymbol('proto.feeds.v1beta1.MsgUpdateParams', null, global);
goog.exportSymbol('proto.feeds.v1beta1.MsgUpdateParamsResponse', null, global);
goog.exportSymbol('proto.feeds.v1beta1.MsgUpdateReferenceSourceConfig', null, global);
goog.exportSymbol('proto.feeds.v1beta1.MsgUpdateReferenceSourceConfigResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.feeds.v1beta1.MsgSubmitSignals = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.feeds.v1beta1.MsgSubmitSignals.repeatedFields_, null);
};
goog.inherits(proto.feeds.v1beta1.MsgSubmitSignals, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.feeds.v1beta1.MsgSubmitSignals.displayName = 'proto.feeds.v1beta1.MsgSubmitSignals';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.feeds.v1beta1.MsgSubmitSignalsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.feeds.v1beta1.MsgSubmitSignalsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.feeds.v1beta1.MsgSubmitSignalsResponse.displayName = 'proto.feeds.v1beta1.MsgSubmitSignalsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.feeds.v1beta1.MsgSubmitSignalPrices = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.feeds.v1beta1.MsgSubmitSignalPrices.repeatedFields_, null);
};
goog.inherits(proto.feeds.v1beta1.MsgSubmitSignalPrices, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.feeds.v1beta1.MsgSubmitSignalPrices.displayName = 'proto.feeds.v1beta1.MsgSubmitSignalPrices';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.feeds.v1beta1.MsgSubmitSignalPricesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.feeds.v1beta1.MsgSubmitSignalPricesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.feeds.v1beta1.MsgSubmitSignalPricesResponse.displayName = 'proto.feeds.v1beta1.MsgSubmitSignalPricesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.feeds.v1beta1.MsgUpdateReferenceSourceConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.feeds.v1beta1.MsgUpdateReferenceSourceConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.feeds.v1beta1.MsgUpdateReferenceSourceConfig.displayName = 'proto.feeds.v1beta1.MsgUpdateReferenceSourceConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.feeds.v1beta1.MsgUpdateReferenceSourceConfigResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.feeds.v1beta1.MsgUpdateReferenceSourceConfigResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.feeds.v1beta1.MsgUpdateReferenceSourceConfigResponse.displayName = 'proto.feeds.v1beta1.MsgUpdateReferenceSourceConfigResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.feeds.v1beta1.MsgUpdateParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.feeds.v1beta1.MsgUpdateParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.feeds.v1beta1.MsgUpdateParams.displayName = 'proto.feeds.v1beta1.MsgUpdateParams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.feeds.v1beta1.MsgUpdateParamsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.feeds.v1beta1.MsgUpdateParamsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.feeds.v1beta1.MsgUpdateParamsResponse.displayName = 'proto.feeds.v1beta1.MsgUpdateParamsResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.feeds.v1beta1.MsgSubmitSignals.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.feeds.v1beta1.MsgSubmitSignals.prototype.toObject = function(opt_includeInstance) {
  return proto.feeds.v1beta1.MsgSubmitSignals.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.feeds.v1beta1.MsgSubmitSignals} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feeds.v1beta1.MsgSubmitSignals.toObject = function(includeInstance, msg) {
  var f, obj = {
    delegator: jspb.Message.getFieldWithDefault(msg, 1, ""),
    signalsList: jspb.Message.toObjectList(msg.getSignalsList(),
    feeds_v1beta1_feeds_pb.Signal.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.feeds.v1beta1.MsgSubmitSignals}
 */
proto.feeds.v1beta1.MsgSubmitSignals.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.feeds.v1beta1.MsgSubmitSignals;
  return proto.feeds.v1beta1.MsgSubmitSignals.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.feeds.v1beta1.MsgSubmitSignals} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.feeds.v1beta1.MsgSubmitSignals}
 */
proto.feeds.v1beta1.MsgSubmitSignals.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelegator(value);
      break;
    case 2:
      var value = new feeds_v1beta1_feeds_pb.Signal;
      reader.readMessage(value,feeds_v1beta1_feeds_pb.Signal.deserializeBinaryFromReader);
      msg.addSignals(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.feeds.v1beta1.MsgSubmitSignals.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.feeds.v1beta1.MsgSubmitSignals.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.feeds.v1beta1.MsgSubmitSignals} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feeds.v1beta1.MsgSubmitSignals.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDelegator();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSignalsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      feeds_v1beta1_feeds_pb.Signal.serializeBinaryToWriter
    );
  }
};


/**
 * optional string delegator = 1;
 * @return {string}
 */
proto.feeds.v1beta1.MsgSubmitSignals.prototype.getDelegator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.feeds.v1beta1.MsgSubmitSignals} returns this
 */
proto.feeds.v1beta1.MsgSubmitSignals.prototype.setDelegator = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Signal signals = 2;
 * @return {!Array<!proto.feeds.v1beta1.Signal>}
 */
proto.feeds.v1beta1.MsgSubmitSignals.prototype.getSignalsList = function() {
  return /** @type{!Array<!proto.feeds.v1beta1.Signal>} */ (
    jspb.Message.getRepeatedWrapperField(this, feeds_v1beta1_feeds_pb.Signal, 2));
};


/**
 * @param {!Array<!proto.feeds.v1beta1.Signal>} value
 * @return {!proto.feeds.v1beta1.MsgSubmitSignals} returns this
*/
proto.feeds.v1beta1.MsgSubmitSignals.prototype.setSignalsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.feeds.v1beta1.Signal=} opt_value
 * @param {number=} opt_index
 * @return {!proto.feeds.v1beta1.Signal}
 */
proto.feeds.v1beta1.MsgSubmitSignals.prototype.addSignals = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.feeds.v1beta1.Signal, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.feeds.v1beta1.MsgSubmitSignals} returns this
 */
proto.feeds.v1beta1.MsgSubmitSignals.prototype.clearSignalsList = function() {
  return this.setSignalsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.feeds.v1beta1.MsgSubmitSignalsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.feeds.v1beta1.MsgSubmitSignalsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.feeds.v1beta1.MsgSubmitSignalsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feeds.v1beta1.MsgSubmitSignalsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.feeds.v1beta1.MsgSubmitSignalsResponse}
 */
proto.feeds.v1beta1.MsgSubmitSignalsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.feeds.v1beta1.MsgSubmitSignalsResponse;
  return proto.feeds.v1beta1.MsgSubmitSignalsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.feeds.v1beta1.MsgSubmitSignalsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.feeds.v1beta1.MsgSubmitSignalsResponse}
 */
proto.feeds.v1beta1.MsgSubmitSignalsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.feeds.v1beta1.MsgSubmitSignalsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.feeds.v1beta1.MsgSubmitSignalsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.feeds.v1beta1.MsgSubmitSignalsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feeds.v1beta1.MsgSubmitSignalsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.feeds.v1beta1.MsgSubmitSignalPrices.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.feeds.v1beta1.MsgSubmitSignalPrices.prototype.toObject = function(opt_includeInstance) {
  return proto.feeds.v1beta1.MsgSubmitSignalPrices.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.feeds.v1beta1.MsgSubmitSignalPrices} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feeds.v1beta1.MsgSubmitSignalPrices.toObject = function(includeInstance, msg) {
  var f, obj = {
    validator: jspb.Message.getFieldWithDefault(msg, 1, ""),
    timestamp: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pricesList: jspb.Message.toObjectList(msg.getPricesList(),
    feeds_v1beta1_feeds_pb.SignalPrice.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.feeds.v1beta1.MsgSubmitSignalPrices}
 */
proto.feeds.v1beta1.MsgSubmitSignalPrices.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.feeds.v1beta1.MsgSubmitSignalPrices;
  return proto.feeds.v1beta1.MsgSubmitSignalPrices.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.feeds.v1beta1.MsgSubmitSignalPrices} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.feeds.v1beta1.MsgSubmitSignalPrices}
 */
proto.feeds.v1beta1.MsgSubmitSignalPrices.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidator(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 3:
      var value = new feeds_v1beta1_feeds_pb.SignalPrice;
      reader.readMessage(value,feeds_v1beta1_feeds_pb.SignalPrice.deserializeBinaryFromReader);
      msg.addPrices(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.feeds.v1beta1.MsgSubmitSignalPrices.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.feeds.v1beta1.MsgSubmitSignalPrices.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.feeds.v1beta1.MsgSubmitSignalPrices} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feeds.v1beta1.MsgSubmitSignalPrices.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidator();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPricesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      feeds_v1beta1_feeds_pb.SignalPrice.serializeBinaryToWriter
    );
  }
};


/**
 * optional string validator = 1;
 * @return {string}
 */
proto.feeds.v1beta1.MsgSubmitSignalPrices.prototype.getValidator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.feeds.v1beta1.MsgSubmitSignalPrices} returns this
 */
proto.feeds.v1beta1.MsgSubmitSignalPrices.prototype.setValidator = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 timestamp = 2;
 * @return {number}
 */
proto.feeds.v1beta1.MsgSubmitSignalPrices.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.feeds.v1beta1.MsgSubmitSignalPrices} returns this
 */
proto.feeds.v1beta1.MsgSubmitSignalPrices.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated SignalPrice prices = 3;
 * @return {!Array<!proto.feeds.v1beta1.SignalPrice>}
 */
proto.feeds.v1beta1.MsgSubmitSignalPrices.prototype.getPricesList = function() {
  return /** @type{!Array<!proto.feeds.v1beta1.SignalPrice>} */ (
    jspb.Message.getRepeatedWrapperField(this, feeds_v1beta1_feeds_pb.SignalPrice, 3));
};


/**
 * @param {!Array<!proto.feeds.v1beta1.SignalPrice>} value
 * @return {!proto.feeds.v1beta1.MsgSubmitSignalPrices} returns this
*/
proto.feeds.v1beta1.MsgSubmitSignalPrices.prototype.setPricesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.feeds.v1beta1.SignalPrice=} opt_value
 * @param {number=} opt_index
 * @return {!proto.feeds.v1beta1.SignalPrice}
 */
proto.feeds.v1beta1.MsgSubmitSignalPrices.prototype.addPrices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.feeds.v1beta1.SignalPrice, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.feeds.v1beta1.MsgSubmitSignalPrices} returns this
 */
proto.feeds.v1beta1.MsgSubmitSignalPrices.prototype.clearPricesList = function() {
  return this.setPricesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.feeds.v1beta1.MsgSubmitSignalPricesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.feeds.v1beta1.MsgSubmitSignalPricesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.feeds.v1beta1.MsgSubmitSignalPricesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feeds.v1beta1.MsgSubmitSignalPricesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.feeds.v1beta1.MsgSubmitSignalPricesResponse}
 */
proto.feeds.v1beta1.MsgSubmitSignalPricesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.feeds.v1beta1.MsgSubmitSignalPricesResponse;
  return proto.feeds.v1beta1.MsgSubmitSignalPricesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.feeds.v1beta1.MsgSubmitSignalPricesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.feeds.v1beta1.MsgSubmitSignalPricesResponse}
 */
proto.feeds.v1beta1.MsgSubmitSignalPricesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.feeds.v1beta1.MsgSubmitSignalPricesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.feeds.v1beta1.MsgSubmitSignalPricesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.feeds.v1beta1.MsgSubmitSignalPricesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feeds.v1beta1.MsgSubmitSignalPricesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.feeds.v1beta1.MsgUpdateReferenceSourceConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.feeds.v1beta1.MsgUpdateReferenceSourceConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.feeds.v1beta1.MsgUpdateReferenceSourceConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feeds.v1beta1.MsgUpdateReferenceSourceConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    admin: jspb.Message.getFieldWithDefault(msg, 1, ""),
    referenceSourceConfig: (f = msg.getReferenceSourceConfig()) && feeds_v1beta1_feeds_pb.ReferenceSourceConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.feeds.v1beta1.MsgUpdateReferenceSourceConfig}
 */
proto.feeds.v1beta1.MsgUpdateReferenceSourceConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.feeds.v1beta1.MsgUpdateReferenceSourceConfig;
  return proto.feeds.v1beta1.MsgUpdateReferenceSourceConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.feeds.v1beta1.MsgUpdateReferenceSourceConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.feeds.v1beta1.MsgUpdateReferenceSourceConfig}
 */
proto.feeds.v1beta1.MsgUpdateReferenceSourceConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdmin(value);
      break;
    case 2:
      var value = new feeds_v1beta1_feeds_pb.ReferenceSourceConfig;
      reader.readMessage(value,feeds_v1beta1_feeds_pb.ReferenceSourceConfig.deserializeBinaryFromReader);
      msg.setReferenceSourceConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.feeds.v1beta1.MsgUpdateReferenceSourceConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.feeds.v1beta1.MsgUpdateReferenceSourceConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.feeds.v1beta1.MsgUpdateReferenceSourceConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feeds.v1beta1.MsgUpdateReferenceSourceConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAdmin();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReferenceSourceConfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      feeds_v1beta1_feeds_pb.ReferenceSourceConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional string admin = 1;
 * @return {string}
 */
proto.feeds.v1beta1.MsgUpdateReferenceSourceConfig.prototype.getAdmin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.feeds.v1beta1.MsgUpdateReferenceSourceConfig} returns this
 */
proto.feeds.v1beta1.MsgUpdateReferenceSourceConfig.prototype.setAdmin = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ReferenceSourceConfig reference_source_config = 2;
 * @return {?proto.feeds.v1beta1.ReferenceSourceConfig}
 */
proto.feeds.v1beta1.MsgUpdateReferenceSourceConfig.prototype.getReferenceSourceConfig = function() {
  return /** @type{?proto.feeds.v1beta1.ReferenceSourceConfig} */ (
    jspb.Message.getWrapperField(this, feeds_v1beta1_feeds_pb.ReferenceSourceConfig, 2));
};


/**
 * @param {?proto.feeds.v1beta1.ReferenceSourceConfig|undefined} value
 * @return {!proto.feeds.v1beta1.MsgUpdateReferenceSourceConfig} returns this
*/
proto.feeds.v1beta1.MsgUpdateReferenceSourceConfig.prototype.setReferenceSourceConfig = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.feeds.v1beta1.MsgUpdateReferenceSourceConfig} returns this
 */
proto.feeds.v1beta1.MsgUpdateReferenceSourceConfig.prototype.clearReferenceSourceConfig = function() {
  return this.setReferenceSourceConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.feeds.v1beta1.MsgUpdateReferenceSourceConfig.prototype.hasReferenceSourceConfig = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.feeds.v1beta1.MsgUpdateReferenceSourceConfigResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.feeds.v1beta1.MsgUpdateReferenceSourceConfigResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.feeds.v1beta1.MsgUpdateReferenceSourceConfigResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feeds.v1beta1.MsgUpdateReferenceSourceConfigResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.feeds.v1beta1.MsgUpdateReferenceSourceConfigResponse}
 */
proto.feeds.v1beta1.MsgUpdateReferenceSourceConfigResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.feeds.v1beta1.MsgUpdateReferenceSourceConfigResponse;
  return proto.feeds.v1beta1.MsgUpdateReferenceSourceConfigResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.feeds.v1beta1.MsgUpdateReferenceSourceConfigResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.feeds.v1beta1.MsgUpdateReferenceSourceConfigResponse}
 */
proto.feeds.v1beta1.MsgUpdateReferenceSourceConfigResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.feeds.v1beta1.MsgUpdateReferenceSourceConfigResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.feeds.v1beta1.MsgUpdateReferenceSourceConfigResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.feeds.v1beta1.MsgUpdateReferenceSourceConfigResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feeds.v1beta1.MsgUpdateReferenceSourceConfigResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.feeds.v1beta1.MsgUpdateParams.prototype.toObject = function(opt_includeInstance) {
  return proto.feeds.v1beta1.MsgUpdateParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.feeds.v1beta1.MsgUpdateParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feeds.v1beta1.MsgUpdateParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    authority: jspb.Message.getFieldWithDefault(msg, 1, ""),
    params: (f = msg.getParams()) && feeds_v1beta1_params_pb.Params.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.feeds.v1beta1.MsgUpdateParams}
 */
proto.feeds.v1beta1.MsgUpdateParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.feeds.v1beta1.MsgUpdateParams;
  return proto.feeds.v1beta1.MsgUpdateParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.feeds.v1beta1.MsgUpdateParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.feeds.v1beta1.MsgUpdateParams}
 */
proto.feeds.v1beta1.MsgUpdateParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthority(value);
      break;
    case 2:
      var value = new feeds_v1beta1_params_pb.Params;
      reader.readMessage(value,feeds_v1beta1_params_pb.Params.deserializeBinaryFromReader);
      msg.setParams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.feeds.v1beta1.MsgUpdateParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.feeds.v1beta1.MsgUpdateParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.feeds.v1beta1.MsgUpdateParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feeds.v1beta1.MsgUpdateParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthority();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getParams();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      feeds_v1beta1_params_pb.Params.serializeBinaryToWriter
    );
  }
};


/**
 * optional string authority = 1;
 * @return {string}
 */
proto.feeds.v1beta1.MsgUpdateParams.prototype.getAuthority = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.feeds.v1beta1.MsgUpdateParams} returns this
 */
proto.feeds.v1beta1.MsgUpdateParams.prototype.setAuthority = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Params params = 2;
 * @return {?proto.feeds.v1beta1.Params}
 */
proto.feeds.v1beta1.MsgUpdateParams.prototype.getParams = function() {
  return /** @type{?proto.feeds.v1beta1.Params} */ (
    jspb.Message.getWrapperField(this, feeds_v1beta1_params_pb.Params, 2));
};


/**
 * @param {?proto.feeds.v1beta1.Params|undefined} value
 * @return {!proto.feeds.v1beta1.MsgUpdateParams} returns this
*/
proto.feeds.v1beta1.MsgUpdateParams.prototype.setParams = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.feeds.v1beta1.MsgUpdateParams} returns this
 */
proto.feeds.v1beta1.MsgUpdateParams.prototype.clearParams = function() {
  return this.setParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.feeds.v1beta1.MsgUpdateParams.prototype.hasParams = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.feeds.v1beta1.MsgUpdateParamsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.feeds.v1beta1.MsgUpdateParamsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.feeds.v1beta1.MsgUpdateParamsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feeds.v1beta1.MsgUpdateParamsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.feeds.v1beta1.MsgUpdateParamsResponse}
 */
proto.feeds.v1beta1.MsgUpdateParamsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.feeds.v1beta1.MsgUpdateParamsResponse;
  return proto.feeds.v1beta1.MsgUpdateParamsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.feeds.v1beta1.MsgUpdateParamsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.feeds.v1beta1.MsgUpdateParamsResponse}
 */
proto.feeds.v1beta1.MsgUpdateParamsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.feeds.v1beta1.MsgUpdateParamsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.feeds.v1beta1.MsgUpdateParamsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.feeds.v1beta1.MsgUpdateParamsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feeds.v1beta1.MsgUpdateParamsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.feeds.v1beta1);
