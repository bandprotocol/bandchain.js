// source: feeds/v1beta1/params.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var gogoproto_gogo_pb = require('../../gogoproto/gogo_pb.js');
goog.object.extend(proto, gogoproto_gogo_pb);
var cosmos_proto_cosmos_pb = require('../../cosmos_proto/cosmos_pb.js');
goog.object.extend(proto, cosmos_proto_cosmos_pb);
goog.exportSymbol('proto.feeds.v1beta1.Params', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.feeds.v1beta1.Params = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.feeds.v1beta1.Params, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.feeds.v1beta1.Params.displayName = 'proto.feeds.v1beta1.Params';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.feeds.v1beta1.Params.prototype.toObject = function(opt_includeInstance) {
  return proto.feeds.v1beta1.Params.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.feeds.v1beta1.Params} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feeds.v1beta1.Params.toObject = function(includeInstance, msg) {
  var f, obj = {
    admin: jspb.Message.getFieldWithDefault(msg, 1, ""),
    allowableBlockTimeDiscrepancy: jspb.Message.getFieldWithDefault(msg, 2, 0),
    gracePeriod: jspb.Message.getFieldWithDefault(msg, 3, 0),
    minInterval: jspb.Message.getFieldWithDefault(msg, 4, 0),
    maxInterval: jspb.Message.getFieldWithDefault(msg, 5, 0),
    powerStepThreshold: jspb.Message.getFieldWithDefault(msg, 6, 0),
    maxCurrentFeeds: jspb.Message.getFieldWithDefault(msg, 7, 0),
    cooldownTime: jspb.Message.getFieldWithDefault(msg, 8, 0),
    minDeviationBasisPoint: jspb.Message.getFieldWithDefault(msg, 9, 0),
    maxDeviationBasisPoint: jspb.Message.getFieldWithDefault(msg, 10, 0),
    currentFeedsUpdateInterval: jspb.Message.getFieldWithDefault(msg, 11, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.feeds.v1beta1.Params}
 */
proto.feeds.v1beta1.Params.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.feeds.v1beta1.Params;
  return proto.feeds.v1beta1.Params.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.feeds.v1beta1.Params} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.feeds.v1beta1.Params}
 */
proto.feeds.v1beta1.Params.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdmin(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAllowableBlockTimeDiscrepancy(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGracePeriod(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMinInterval(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxInterval(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPowerStepThreshold(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMaxCurrentFeeds(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCooldownTime(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMinDeviationBasisPoint(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxDeviationBasisPoint(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCurrentFeedsUpdateInterval(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.feeds.v1beta1.Params.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.feeds.v1beta1.Params.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.feeds.v1beta1.Params} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.feeds.v1beta1.Params.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAdmin();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAllowableBlockTimeDiscrepancy();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getGracePeriod();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getMinInterval();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getMaxInterval();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getPowerStepThreshold();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getMaxCurrentFeeds();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getCooldownTime();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getMinDeviationBasisPoint();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getMaxDeviationBasisPoint();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getCurrentFeedsUpdateInterval();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
};


/**
 * optional string admin = 1;
 * @return {string}
 */
proto.feeds.v1beta1.Params.prototype.getAdmin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.feeds.v1beta1.Params} returns this
 */
proto.feeds.v1beta1.Params.prototype.setAdmin = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 allowable_block_time_discrepancy = 2;
 * @return {number}
 */
proto.feeds.v1beta1.Params.prototype.getAllowableBlockTimeDiscrepancy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.feeds.v1beta1.Params} returns this
 */
proto.feeds.v1beta1.Params.prototype.setAllowableBlockTimeDiscrepancy = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 grace_period = 3;
 * @return {number}
 */
proto.feeds.v1beta1.Params.prototype.getGracePeriod = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.feeds.v1beta1.Params} returns this
 */
proto.feeds.v1beta1.Params.prototype.setGracePeriod = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 min_interval = 4;
 * @return {number}
 */
proto.feeds.v1beta1.Params.prototype.getMinInterval = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.feeds.v1beta1.Params} returns this
 */
proto.feeds.v1beta1.Params.prototype.setMinInterval = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 max_interval = 5;
 * @return {number}
 */
proto.feeds.v1beta1.Params.prototype.getMaxInterval = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.feeds.v1beta1.Params} returns this
 */
proto.feeds.v1beta1.Params.prototype.setMaxInterval = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 power_step_threshold = 6;
 * @return {number}
 */
proto.feeds.v1beta1.Params.prototype.getPowerStepThreshold = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.feeds.v1beta1.Params} returns this
 */
proto.feeds.v1beta1.Params.prototype.setPowerStepThreshold = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint64 max_current_feeds = 7;
 * @return {number}
 */
proto.feeds.v1beta1.Params.prototype.getMaxCurrentFeeds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.feeds.v1beta1.Params} returns this
 */
proto.feeds.v1beta1.Params.prototype.setMaxCurrentFeeds = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 cooldown_time = 8;
 * @return {number}
 */
proto.feeds.v1beta1.Params.prototype.getCooldownTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.feeds.v1beta1.Params} returns this
 */
proto.feeds.v1beta1.Params.prototype.setCooldownTime = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 min_deviation_basis_point = 9;
 * @return {number}
 */
proto.feeds.v1beta1.Params.prototype.getMinDeviationBasisPoint = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.feeds.v1beta1.Params} returns this
 */
proto.feeds.v1beta1.Params.prototype.setMinDeviationBasisPoint = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int64 max_deviation_basis_point = 10;
 * @return {number}
 */
proto.feeds.v1beta1.Params.prototype.getMaxDeviationBasisPoint = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.feeds.v1beta1.Params} returns this
 */
proto.feeds.v1beta1.Params.prototype.setMaxDeviationBasisPoint = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int64 current_feeds_update_interval = 11;
 * @return {number}
 */
proto.feeds.v1beta1.Params.prototype.getCurrentFeedsUpdateInterval = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.feeds.v1beta1.Params} returns this
 */
proto.feeds.v1beta1.Params.prototype.setCurrentFeedsUpdateInterval = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


goog.object.extend(exports, proto.feeds.v1beta1);
