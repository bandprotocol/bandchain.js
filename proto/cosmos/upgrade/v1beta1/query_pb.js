// source: cosmos/upgrade/v1beta1/query.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var google_api_annotations_pb = require('../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var cosmos_upgrade_v1beta1_upgrade_pb = require('../../../cosmos/upgrade/v1beta1/upgrade_pb.js');
goog.object.extend(proto, cosmos_upgrade_v1beta1_upgrade_pb);
goog.exportSymbol('proto.cosmos.upgrade.v1beta1.QueryAppliedPlanRequest', null, global);
goog.exportSymbol('proto.cosmos.upgrade.v1beta1.QueryAppliedPlanResponse', null, global);
goog.exportSymbol('proto.cosmos.upgrade.v1beta1.QueryAuthorityRequest', null, global);
goog.exportSymbol('proto.cosmos.upgrade.v1beta1.QueryAuthorityResponse', null, global);
goog.exportSymbol('proto.cosmos.upgrade.v1beta1.QueryCurrentPlanRequest', null, global);
goog.exportSymbol('proto.cosmos.upgrade.v1beta1.QueryCurrentPlanResponse', null, global);
goog.exportSymbol('proto.cosmos.upgrade.v1beta1.QueryModuleVersionsRequest', null, global);
goog.exportSymbol('proto.cosmos.upgrade.v1beta1.QueryModuleVersionsResponse', null, global);
goog.exportSymbol('proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest', null, global);
goog.exportSymbol('proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.upgrade.v1beta1.QueryCurrentPlanRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cosmos.upgrade.v1beta1.QueryCurrentPlanRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.upgrade.v1beta1.QueryCurrentPlanRequest.displayName = 'proto.cosmos.upgrade.v1beta1.QueryCurrentPlanRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.upgrade.v1beta1.QueryCurrentPlanResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cosmos.upgrade.v1beta1.QueryCurrentPlanResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.upgrade.v1beta1.QueryCurrentPlanResponse.displayName = 'proto.cosmos.upgrade.v1beta1.QueryCurrentPlanResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.upgrade.v1beta1.QueryAppliedPlanRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cosmos.upgrade.v1beta1.QueryAppliedPlanRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.upgrade.v1beta1.QueryAppliedPlanRequest.displayName = 'proto.cosmos.upgrade.v1beta1.QueryAppliedPlanRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.upgrade.v1beta1.QueryAppliedPlanResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cosmos.upgrade.v1beta1.QueryAppliedPlanResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.upgrade.v1beta1.QueryAppliedPlanResponse.displayName = 'proto.cosmos.upgrade.v1beta1.QueryAppliedPlanResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest.displayName = 'proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse.displayName = 'proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.upgrade.v1beta1.QueryModuleVersionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cosmos.upgrade.v1beta1.QueryModuleVersionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.upgrade.v1beta1.QueryModuleVersionsRequest.displayName = 'proto.cosmos.upgrade.v1beta1.QueryModuleVersionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.upgrade.v1beta1.QueryModuleVersionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cosmos.upgrade.v1beta1.QueryModuleVersionsResponse.repeatedFields_, null);
};
goog.inherits(proto.cosmos.upgrade.v1beta1.QueryModuleVersionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.upgrade.v1beta1.QueryModuleVersionsResponse.displayName = 'proto.cosmos.upgrade.v1beta1.QueryModuleVersionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.upgrade.v1beta1.QueryAuthorityRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cosmos.upgrade.v1beta1.QueryAuthorityRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.upgrade.v1beta1.QueryAuthorityRequest.displayName = 'proto.cosmos.upgrade.v1beta1.QueryAuthorityRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.upgrade.v1beta1.QueryAuthorityResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cosmos.upgrade.v1beta1.QueryAuthorityResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.upgrade.v1beta1.QueryAuthorityResponse.displayName = 'proto.cosmos.upgrade.v1beta1.QueryAuthorityResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cosmos.upgrade.v1beta1.QueryCurrentPlanRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cosmos.upgrade.v1beta1.QueryCurrentPlanRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cosmos.upgrade.v1beta1.QueryCurrentPlanRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.upgrade.v1beta1.QueryCurrentPlanRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.upgrade.v1beta1.QueryCurrentPlanRequest}
 */
proto.cosmos.upgrade.v1beta1.QueryCurrentPlanRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cosmos.upgrade.v1beta1.QueryCurrentPlanRequest;
  return proto.cosmos.upgrade.v1beta1.QueryCurrentPlanRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.upgrade.v1beta1.QueryCurrentPlanRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.upgrade.v1beta1.QueryCurrentPlanRequest}
 */
proto.cosmos.upgrade.v1beta1.QueryCurrentPlanRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.upgrade.v1beta1.QueryCurrentPlanRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cosmos.upgrade.v1beta1.QueryCurrentPlanRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.upgrade.v1beta1.QueryCurrentPlanRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.upgrade.v1beta1.QueryCurrentPlanRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cosmos.upgrade.v1beta1.QueryCurrentPlanResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cosmos.upgrade.v1beta1.QueryCurrentPlanResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cosmos.upgrade.v1beta1.QueryCurrentPlanResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.upgrade.v1beta1.QueryCurrentPlanResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    plan: (f = msg.getPlan()) && cosmos_upgrade_v1beta1_upgrade_pb.Plan.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.upgrade.v1beta1.QueryCurrentPlanResponse}
 */
proto.cosmos.upgrade.v1beta1.QueryCurrentPlanResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cosmos.upgrade.v1beta1.QueryCurrentPlanResponse;
  return proto.cosmos.upgrade.v1beta1.QueryCurrentPlanResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.upgrade.v1beta1.QueryCurrentPlanResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.upgrade.v1beta1.QueryCurrentPlanResponse}
 */
proto.cosmos.upgrade.v1beta1.QueryCurrentPlanResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cosmos_upgrade_v1beta1_upgrade_pb.Plan;
      reader.readMessage(value,cosmos_upgrade_v1beta1_upgrade_pb.Plan.deserializeBinaryFromReader);
      msg.setPlan(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.upgrade.v1beta1.QueryCurrentPlanResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cosmos.upgrade.v1beta1.QueryCurrentPlanResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.upgrade.v1beta1.QueryCurrentPlanResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.upgrade.v1beta1.QueryCurrentPlanResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlan();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cosmos_upgrade_v1beta1_upgrade_pb.Plan.serializeBinaryToWriter
    );
  }
};


/**
 * optional Plan plan = 1;
 * @return {?proto.cosmos.upgrade.v1beta1.Plan}
 */
proto.cosmos.upgrade.v1beta1.QueryCurrentPlanResponse.prototype.getPlan = function() {
  return /** @type{?proto.cosmos.upgrade.v1beta1.Plan} */ (
    jspb.Message.getWrapperField(this, cosmos_upgrade_v1beta1_upgrade_pb.Plan, 1));
};


/**
 * @param {?proto.cosmos.upgrade.v1beta1.Plan|undefined} value
 * @return {!proto.cosmos.upgrade.v1beta1.QueryCurrentPlanResponse} returns this
*/
proto.cosmos.upgrade.v1beta1.QueryCurrentPlanResponse.prototype.setPlan = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cosmos.upgrade.v1beta1.QueryCurrentPlanResponse} returns this
 */
proto.cosmos.upgrade.v1beta1.QueryCurrentPlanResponse.prototype.clearPlan = function() {
  return this.setPlan(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cosmos.upgrade.v1beta1.QueryCurrentPlanResponse.prototype.hasPlan = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cosmos.upgrade.v1beta1.QueryAppliedPlanRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cosmos.upgrade.v1beta1.QueryAppliedPlanRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cosmos.upgrade.v1beta1.QueryAppliedPlanRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.upgrade.v1beta1.QueryAppliedPlanRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.upgrade.v1beta1.QueryAppliedPlanRequest}
 */
proto.cosmos.upgrade.v1beta1.QueryAppliedPlanRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cosmos.upgrade.v1beta1.QueryAppliedPlanRequest;
  return proto.cosmos.upgrade.v1beta1.QueryAppliedPlanRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.upgrade.v1beta1.QueryAppliedPlanRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.upgrade.v1beta1.QueryAppliedPlanRequest}
 */
proto.cosmos.upgrade.v1beta1.QueryAppliedPlanRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.upgrade.v1beta1.QueryAppliedPlanRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cosmos.upgrade.v1beta1.QueryAppliedPlanRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.upgrade.v1beta1.QueryAppliedPlanRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.upgrade.v1beta1.QueryAppliedPlanRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.cosmos.upgrade.v1beta1.QueryAppliedPlanRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cosmos.upgrade.v1beta1.QueryAppliedPlanRequest} returns this
 */
proto.cosmos.upgrade.v1beta1.QueryAppliedPlanRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cosmos.upgrade.v1beta1.QueryAppliedPlanResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cosmos.upgrade.v1beta1.QueryAppliedPlanResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cosmos.upgrade.v1beta1.QueryAppliedPlanResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.upgrade.v1beta1.QueryAppliedPlanResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    height: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.upgrade.v1beta1.QueryAppliedPlanResponse}
 */
proto.cosmos.upgrade.v1beta1.QueryAppliedPlanResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cosmos.upgrade.v1beta1.QueryAppliedPlanResponse;
  return proto.cosmos.upgrade.v1beta1.QueryAppliedPlanResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.upgrade.v1beta1.QueryAppliedPlanResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.upgrade.v1beta1.QueryAppliedPlanResponse}
 */
proto.cosmos.upgrade.v1beta1.QueryAppliedPlanResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.upgrade.v1beta1.QueryAppliedPlanResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cosmos.upgrade.v1beta1.QueryAppliedPlanResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.upgrade.v1beta1.QueryAppliedPlanResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.upgrade.v1beta1.QueryAppliedPlanResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeight();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 height = 1;
 * @return {number}
 */
proto.cosmos.upgrade.v1beta1.QueryAppliedPlanResponse.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cosmos.upgrade.v1beta1.QueryAppliedPlanResponse} returns this
 */
proto.cosmos.upgrade.v1beta1.QueryAppliedPlanResponse.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    lastHeight: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest}
 */
proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest;
  return proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest}
 */
proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLastHeight();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 last_height = 1;
 * @return {number}
 */
proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest.prototype.getLastHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest} returns this
 */
proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest.prototype.setLastHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    upgradedConsensusState: msg.getUpgradedConsensusState_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse}
 */
proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse;
  return proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse}
 */
proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setUpgradedConsensusState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpgradedConsensusState_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional bytes upgraded_consensus_state = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse.prototype.getUpgradedConsensusState = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes upgraded_consensus_state = 2;
 * This is a type-conversion wrapper around `getUpgradedConsensusState()`
 * @return {string}
 */
proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse.prototype.getUpgradedConsensusState_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getUpgradedConsensusState()));
};


/**
 * optional bytes upgraded_consensus_state = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getUpgradedConsensusState()`
 * @return {!Uint8Array}
 */
proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse.prototype.getUpgradedConsensusState_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getUpgradedConsensusState()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse} returns this
 */
proto.cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse.prototype.setUpgradedConsensusState = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cosmos.upgrade.v1beta1.QueryModuleVersionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cosmos.upgrade.v1beta1.QueryModuleVersionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cosmos.upgrade.v1beta1.QueryModuleVersionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.upgrade.v1beta1.QueryModuleVersionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    moduleName: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.upgrade.v1beta1.QueryModuleVersionsRequest}
 */
proto.cosmos.upgrade.v1beta1.QueryModuleVersionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cosmos.upgrade.v1beta1.QueryModuleVersionsRequest;
  return proto.cosmos.upgrade.v1beta1.QueryModuleVersionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.upgrade.v1beta1.QueryModuleVersionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.upgrade.v1beta1.QueryModuleVersionsRequest}
 */
proto.cosmos.upgrade.v1beta1.QueryModuleVersionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setModuleName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.upgrade.v1beta1.QueryModuleVersionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cosmos.upgrade.v1beta1.QueryModuleVersionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.upgrade.v1beta1.QueryModuleVersionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.upgrade.v1beta1.QueryModuleVersionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModuleName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string module_name = 1;
 * @return {string}
 */
proto.cosmos.upgrade.v1beta1.QueryModuleVersionsRequest.prototype.getModuleName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cosmos.upgrade.v1beta1.QueryModuleVersionsRequest} returns this
 */
proto.cosmos.upgrade.v1beta1.QueryModuleVersionsRequest.prototype.setModuleName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cosmos.upgrade.v1beta1.QueryModuleVersionsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cosmos.upgrade.v1beta1.QueryModuleVersionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cosmos.upgrade.v1beta1.QueryModuleVersionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cosmos.upgrade.v1beta1.QueryModuleVersionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.upgrade.v1beta1.QueryModuleVersionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    moduleVersionsList: jspb.Message.toObjectList(msg.getModuleVersionsList(),
    cosmos_upgrade_v1beta1_upgrade_pb.ModuleVersion.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.upgrade.v1beta1.QueryModuleVersionsResponse}
 */
proto.cosmos.upgrade.v1beta1.QueryModuleVersionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cosmos.upgrade.v1beta1.QueryModuleVersionsResponse;
  return proto.cosmos.upgrade.v1beta1.QueryModuleVersionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.upgrade.v1beta1.QueryModuleVersionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.upgrade.v1beta1.QueryModuleVersionsResponse}
 */
proto.cosmos.upgrade.v1beta1.QueryModuleVersionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cosmos_upgrade_v1beta1_upgrade_pb.ModuleVersion;
      reader.readMessage(value,cosmos_upgrade_v1beta1_upgrade_pb.ModuleVersion.deserializeBinaryFromReader);
      msg.addModuleVersions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.upgrade.v1beta1.QueryModuleVersionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cosmos.upgrade.v1beta1.QueryModuleVersionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.upgrade.v1beta1.QueryModuleVersionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.upgrade.v1beta1.QueryModuleVersionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModuleVersionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      cosmos_upgrade_v1beta1_upgrade_pb.ModuleVersion.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ModuleVersion module_versions = 1;
 * @return {!Array<!proto.cosmos.upgrade.v1beta1.ModuleVersion>}
 */
proto.cosmos.upgrade.v1beta1.QueryModuleVersionsResponse.prototype.getModuleVersionsList = function() {
  return /** @type{!Array<!proto.cosmos.upgrade.v1beta1.ModuleVersion>} */ (
    jspb.Message.getRepeatedWrapperField(this, cosmos_upgrade_v1beta1_upgrade_pb.ModuleVersion, 1));
};


/**
 * @param {!Array<!proto.cosmos.upgrade.v1beta1.ModuleVersion>} value
 * @return {!proto.cosmos.upgrade.v1beta1.QueryModuleVersionsResponse} returns this
*/
proto.cosmos.upgrade.v1beta1.QueryModuleVersionsResponse.prototype.setModuleVersionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cosmos.upgrade.v1beta1.ModuleVersion=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.upgrade.v1beta1.ModuleVersion}
 */
proto.cosmos.upgrade.v1beta1.QueryModuleVersionsResponse.prototype.addModuleVersions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cosmos.upgrade.v1beta1.ModuleVersion, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cosmos.upgrade.v1beta1.QueryModuleVersionsResponse} returns this
 */
proto.cosmos.upgrade.v1beta1.QueryModuleVersionsResponse.prototype.clearModuleVersionsList = function() {
  return this.setModuleVersionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cosmos.upgrade.v1beta1.QueryAuthorityRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cosmos.upgrade.v1beta1.QueryAuthorityRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cosmos.upgrade.v1beta1.QueryAuthorityRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.upgrade.v1beta1.QueryAuthorityRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.upgrade.v1beta1.QueryAuthorityRequest}
 */
proto.cosmos.upgrade.v1beta1.QueryAuthorityRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cosmos.upgrade.v1beta1.QueryAuthorityRequest;
  return proto.cosmos.upgrade.v1beta1.QueryAuthorityRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.upgrade.v1beta1.QueryAuthorityRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.upgrade.v1beta1.QueryAuthorityRequest}
 */
proto.cosmos.upgrade.v1beta1.QueryAuthorityRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.upgrade.v1beta1.QueryAuthorityRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cosmos.upgrade.v1beta1.QueryAuthorityRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.upgrade.v1beta1.QueryAuthorityRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.upgrade.v1beta1.QueryAuthorityRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cosmos.upgrade.v1beta1.QueryAuthorityResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cosmos.upgrade.v1beta1.QueryAuthorityResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cosmos.upgrade.v1beta1.QueryAuthorityResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.upgrade.v1beta1.QueryAuthorityResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.upgrade.v1beta1.QueryAuthorityResponse}
 */
proto.cosmos.upgrade.v1beta1.QueryAuthorityResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cosmos.upgrade.v1beta1.QueryAuthorityResponse;
  return proto.cosmos.upgrade.v1beta1.QueryAuthorityResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.upgrade.v1beta1.QueryAuthorityResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.upgrade.v1beta1.QueryAuthorityResponse}
 */
proto.cosmos.upgrade.v1beta1.QueryAuthorityResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.upgrade.v1beta1.QueryAuthorityResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cosmos.upgrade.v1beta1.QueryAuthorityResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.upgrade.v1beta1.QueryAuthorityResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.upgrade.v1beta1.QueryAuthorityResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.cosmos.upgrade.v1beta1.QueryAuthorityResponse.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cosmos.upgrade.v1beta1.QueryAuthorityResponse} returns this
 */
proto.cosmos.upgrade.v1beta1.QueryAuthorityResponse.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


goog.object.extend(exports, proto.cosmos.upgrade.v1beta1);
